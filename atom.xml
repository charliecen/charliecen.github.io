<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Charlie Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.cenhq.com/"/>
  <updated>2018-05-03T07:07:16.118Z</updated>
  <id>http://www.cenhq.com/</id>
  
  <author>
    <name>Charlie Cen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Logstash 过滤日志</title>
    <link href="http://www.cenhq.com/2018/05/03/logstash-filter-log/"/>
    <id>http://www.cenhq.com/2018/05/03/logstash-filter-log/</id>
    <published>2018-05-03T07:07:16.121Z</published>
    <updated>2018-05-03T07:07:16.118Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Logstash-过滤日志"><a href="#Logstash-过滤日志" class="headerlink" title="Logstash 过滤日志"></a>Logstash 过滤日志</h3><h4 id="输出匹配的内容"><a href="#输出匹配的内容" class="headerlink" title="输出匹配的内容"></a>输出匹配的内容</h4><p>配置文件如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">$ vim config/test.conf</div><div class="line"></div><div class="line">input &#123; </div><div class="line">    file &#123;</div><div class="line">        path =&gt; [<span class="string">"/var/log/test/test.log"</span>]</div><div class="line">        max_open_files =&gt; 20000</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">filter &#123;</div><div class="line">    grok &#123;</div><div class="line">        <span class="comment"># 添加标签</span></div><div class="line">        add_tag =&gt; [ <span class="string">"valid"</span> ]</div><div class="line">        <span class="comment"># 匹配"ERROR" 或者 "DEBUG"</span></div><div class="line">        match =&gt; [</div><div class="line">            <span class="string">"message"</span>   =&gt;  <span class="string">"ERROR"</span>,</div><div class="line">            <span class="string">"message"</span>   =&gt;  <span class="string">"DEBUG"</span></div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment"># 无效的删除</span></div><div class="line">    <span class="keyword">if</span> <span class="string">"valid"</span> not <span class="keyword">in</span> [tags] &#123;</div><div class="line">        drop &#123;&#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div><div class="line"></div><div class="line">output &#123;</div><div class="line">    stdout &#123;</div><div class="line">        codec =&gt; rubydebug</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>测试如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$ sudo <span class="built_in">echo</span> <span class="string">"180502-14:55:13 money[26]"</span> &gt;&gt; test.log</div><div class="line">$ sudo <span class="built_in">echo</span> <span class="string">"180502-14:55:13 ERROR:"</span> &gt;&gt; test.log</div><div class="line"></div><div class="line"><span class="comment"># 结果</span></div><div class="line"> bin/logstash <span class="_">-f</span> config/test.conf</div><div class="line">Sending Logstash<span class="string">'s logs to /charlie/elk/logstash-5.6.0/logs which is now configured via log4j2.properties</span></div><div class="line">[2018-05-03T14:39:39,138][INFO ][logstash.modules.scaffold] Initializing module &#123;:module_name=&gt;"fb_apache", :directory=&gt;"/charlie/elk/logstash-5.6.0/modules/fb_apache/configuration"&#125;</div><div class="line">[2018-05-03T14:39:39,161][INFO ][logstash.modules.scaffold] Initializing module &#123;:module_name=&gt;"netflow", :directory=&gt;"/charlie/elk/logstash-5.6.0/modules/netflow/configuration"&#125;</div><div class="line">[2018-05-03T14:39:40,656][INFO ][logstash.pipeline        ] Starting pipeline &#123;"id"=&gt;"main", "pipeline.workers"=&gt;4, "pipeline.batch.size"=&gt;125, "pipeline.batch.delay"=&gt;5, "pipeline.max_inflight"=&gt;500&#125;</div><div class="line">[2018-05-03T14:39:40,958][INFO ][logstash.pipeline        ] Pipeline main started</div><div class="line">[2018-05-03T14:39:41,049][INFO ][logstash.agent           ] Successfully started Logstash API endpoint &#123;:port=&gt;9600&#125;</div><div class="line">&#123;</div><div class="line">       "path" =&gt; "/var/log/test/test.log",</div><div class="line">    "logdate" =&gt; 2018-05-02T06:55:13.000Z,</div><div class="line">       "host" =&gt; "macmini-bbcdfa.ztgame.com",</div><div class="line">    "message" =&gt; [</div><div class="line">        [0] "180502-14:55:13",</div><div class="line">        [1] "ERROR:"</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="分割日志并去除无效的字段"><a href="#分割日志并去除无效的字段" class="headerlink" title="分割日志并去除无效的字段"></a>分割日志并去除无效的字段</h4><p>配置文件如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">$ vim config/test.conf</div><div class="line"></div><div class="line">input &#123;</div><div class="line">  file &#123;</div><div class="line">    path =&gt; [<span class="string">"/var/log/test/test.log"</span>]</div><div class="line">    max_open_files =&gt; 20000</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">filter &#123;</div><div class="line">    <span class="comment">#grok &#123;</span></div><div class="line">    <span class="comment">#  match =&gt; ["path", "/vol2\/(?&lt;game_name&gt;\w+|\w+\d+?)\/(?&lt;time&gt;\d&#123;6&#125;-\d&#123;2&#125;?)\/(?&lt;server_name&gt;\w+?)\-(?&lt;zone&gt;\w+\d+?)|\-(\.*)"]</span></div><div class="line">    <span class="comment">#  match =&gt; ["path", "/vol2\/(?&lt;game_name&gt;\w+|\w+\d+?)\/(?&lt;time&gt;\d&#123;6&#125;-\d&#123;2&#125;?)\/(?&lt;server_name&gt;\w+?)\-(?&lt;zone&gt;\w+\d+?)\-(?&lt;server_type&gt;\w+?)\/(?&lt;logname&gt;\w+?)\.(.*)"]</span></div><div class="line">    <span class="comment">#&#125;</span></div><div class="line">    <span class="comment"># 丢弃日志</span></div><div class="line">    <span class="keyword">if</span> [logname] == <span class="string">"sobjscenesserver26"</span> &#123;</div><div class="line">        drop&#123;&#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment"># 匹配有效的字段</span></div><div class="line">    grok &#123;</div><div class="line">        add_tag =&gt; [ <span class="string">"valid"</span> ]</div><div class="line">        match =&gt; [</div><div class="line">            <span class="string">"message"</span>, <span class="string">"ERROR:"</span>,</div><div class="line">            <span class="string">"message"</span>, <span class="string">"DEBUG:"</span></div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">    <span class="comment"># 丢弃无效的日志</span></div><div class="line">    <span class="keyword">if</span> <span class="string">"valid"</span> not <span class="keyword">in</span> [tags] &#123;</div><div class="line">        drop &#123;  &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment"># 匹配以日期开头的日志</span></div><div class="line">    <span class="keyword">if</span> [message] =~ /^(\d&#123;6&#125;-\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;)/ &#123;</div><div class="line">        <span class="comment"># 以空格分割日志，并添加字段</span></div><div class="line">        mutate &#123;</div><div class="line">            split =&gt; [<span class="string">"message"</span>, <span class="string">" "</span>]</div><div class="line">            add_field =&gt; &#123;</div><div class="line">                <span class="string">"logdate"</span> =&gt; <span class="string">"%&#123;[message][0]&#125;"</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment"># 数组迭代去除"|",覆盖到原数组</span></div><div class="line">        ruby &#123;</div><div class="line">            code =&gt; <span class="string">"</span></div><div class="line">                values = event.get('message')</div><div class="line">                #File.open('/charlie/elk/logstash-5.6.0/output.txt', 'w')  &#123; |file| file.write(values) &#125;</div><div class="line">                values.each do |v|</div><div class="line">                    if v == '|'</div><div class="line">                        values.delete(v)</div><div class="line">                    end</div><div class="line">                end</div><div class="line">                event.set('message', values)</div><div class="line">            "</div><div class="line">        &#125;</div><div class="line">        <span class="comment"># 去除无效字段</span></div><div class="line">        mutate &#123;</div><div class="line">            remove_field =&gt; [<span class="string">"@timestamp"</span>, <span class="string">"@version"</span>, <span class="string">"tags"</span>]</div><div class="line">        &#125;</div><div class="line">        <span class="comment"># 日期格式</span></div><div class="line">        date &#123;</div><div class="line">            match =&gt; [<span class="string">"logdate"</span>, <span class="string">"yyMMdd-HH:mm:ss"</span>]</div><div class="line">            target =&gt; <span class="string">"logdate"</span></div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        drop &#123;&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">output &#123;</div><div class="line">  stdout &#123;</div><div class="line">    codec =&gt; rubydebug</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>测试效果如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ sudo <span class="built_in">echo</span> <span class="string">"180502-14:55:13 ERROR: | aa bb cc | dd 0 |"</span> &gt;&gt; test.log</div><div class="line"></div><div class="line">&#123;</div><div class="line">       <span class="string">"path"</span> =&gt; <span class="string">"/var/log/test/test.log"</span>,</div><div class="line">    <span class="string">"logdate"</span> =&gt; 2018-05-02T06:55:13.000Z,</div><div class="line">       <span class="string">"host"</span> =&gt; <span class="string">"macmini-bbcdfa.ztgame.com"</span>,</div><div class="line">    <span class="string">"message"</span> =&gt; [</div><div class="line">        [0] <span class="string">"180502-14:55:13"</span>,</div><div class="line">        [1] <span class="string">"ERROR:"</span>,</div><div class="line">        [2] <span class="string">"aa"</span>,</div><div class="line">        [3] <span class="string">"bb"</span>,</div><div class="line">        [4] <span class="string">"cc"</span>,</div><div class="line">        [5] <span class="string">"dd"</span>,</div><div class="line">        [6] <span class="string">"0"</span></div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Logstash-过滤日志&quot;&gt;&lt;a href=&quot;#Logstash-过滤日志&quot; class=&quot;headerlink&quot; title=&quot;Logstash 过滤日志&quot;&gt;&lt;/a&gt;Logstash 过滤日志&lt;/h3&gt;&lt;h4 id=&quot;输出匹配的内容&quot;&gt;&lt;a href=&quot;#输出匹配的内容&quot; class=&quot;headerlink&quot; title=&quot;输出匹配的内容&quot;&gt;&lt;/a&gt;输出匹配的内容&lt;/h4&gt;&lt;p&gt;配置文件如下：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ vim config/test.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;input &amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    file &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        path =&amp;gt; [&lt;span class=&quot;string&quot;&gt;&quot;/var/log/test/test.log&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        max_open_files =&amp;gt; 20000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;filter &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    grok &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 添加标签&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        add_tag =&amp;gt; [ &lt;span class=&quot;string&quot;&gt;&quot;valid&quot;&lt;/span&gt; ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 匹配&quot;ERROR&quot; 或者 &quot;DEBUG&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        match =&amp;gt; [&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;   =&amp;gt;  &lt;span class=&quot;string&quot;&gt;&quot;ERROR&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;   =&amp;gt;  &lt;span class=&quot;string&quot;&gt;&quot;DEBUG&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 无效的删除&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;valid&quot;&lt;/span&gt; not &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [tags] &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        drop &amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;output &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    stdout &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        codec =&amp;gt; rubydebug&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.cenhq.com/categories/ELK/"/>
    
      <category term="Linux" scheme="http://www.cenhq.com/categories/ELK/Linux/"/>
    
    
      <category term="logstash" scheme="http://www.cenhq.com/tags/logstash/"/>
    
      <category term="filter" scheme="http://www.cenhq.com/tags/filter/"/>
    
      <category term="ruby" scheme="http://www.cenhq.com/tags/ruby/"/>
    
      <category term="remove_field" scheme="http://www.cenhq.com/tags/remove-field/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 按日期定时删除索引</title>
    <link href="http://www.cenhq.com/2017/11/07/elasticsearch-deletes-index-by-date/"/>
    <id>http://www.cenhq.com/2017/11/07/elasticsearch-deletes-index-by-date/</id>
    <published>2017-11-07T08:31:26.000Z</published>
    <updated>2017-11-07T08:35:50.874Z</updated>
    
    <content type="html"><![CDATA[<p>由于<code>elk</code>每天每时每刻都在创建索引文件，导致磁盘容量越来越小，所以要进行定期删除</p>
<h3 id="官网查询删除"><a href="#官网查询删除" class="headerlink" title="官网查询删除"></a>官网查询删除</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">curl -u 用户名:密码  -H'Content-Type:application/json' -d'&#123;</div><div class="line">    "query": &#123;</div><div class="line">        "range": &#123;</div><div class="line">            "@timestamp": &#123;</div><div class="line">                "lt": "now-7d",</div><div class="line">                "format": "epoch_millis"</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">' -XPOST "http://127.0.0.1:9200/*-*/_delete_by_query?pretty"</div></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>注释:</p>
<p>-u 是格式为<code>userName:password</code>，使用<code>Basic Auth</code>进行登录。如果<code>elasticsearch</code>没有使用类似<code>x-pack</code>进行安全登录，则不需要加-u参数</p>
<p>-H 是指定文档类型是<code>json</code>格式</p>
<p>-XPOST 是指定用<code>POST</code>方式请求</p>
<p>-d 是指定<code>body</code>内容</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"query"</span>: &#123;</div><div class="line">        <span class="string">"range"</span>: &#123; <span class="comment">//范围</span></div><div class="line">            <span class="string">"@timestamp"</span>: &#123;<span class="comment">//时间字段</span></div><div class="line">                <span class="string">"lt"</span>: <span class="string">"now-7d"</span>,<span class="comment">//lt是小于(&lt;)，lte是小于等于(&lt;=),gt是大于(&gt;),gte是大于等于(&gt;=),now-7d是当前时间减7天</span></div><div class="line">                <span class="string">"format"</span>: <span class="string">"epoch_millis"</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>计划任务</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ crontab <span class="_">-e</span></div><div class="line"><span class="comment"># 每天0点删除超过7天的无效索引</span></div><div class="line">* 0 * * * /usr/bin/curl -u username:password  -H<span class="string">'Content-Type:application/json'</span> <span class="_">-d</span><span class="string">'&#123;"query":&#123;"range":&#123;"@timestamp":&#123;"lt":"now-7d","format":"epoch_millis"&#125;&#125;&#125;&#125;'</span> -XPOST <span class="string">"http://127.0.0.1:9200/*-*/_delete_by_query?pretty"</span> &gt; /var/<span class="built_in">log</span>/delete_index.log</div></pre></td></tr></table></figure>
<p>优点：</p>
<ol>
<li><p>不依赖第三方插件或者代码</p>
</li>
<li><p>简单易理解</p>
</li>
<li><p>不需要指定索引名称可用*通配符删除</p>
</li>
</ol>
<p>缺点：</p>
<ol>
<li>效率低</li>
</ol>
<h3 id="脚本删除"><a href="#脚本删除" class="headerlink" title="脚本删除"></a>脚本删除</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">indexPrefix=(yp zh jd)</div><div class="line">elastic_url=127.0.0.1</div><div class="line">elastic_port=9200</div><div class="line">user=<span class="string">"username"</span></div><div class="line">pass=<span class="string">"password"</span></div><div class="line"><span class="built_in">log</span>=<span class="string">"/var/log/delete_index.log"</span></div><div class="line"></div><div class="line"><span class="comment"># 转化为时间戳， $1 为日期， $2 为时间</span></div><div class="line"><span class="function"><span class="title">date2stamp</span></span> () &#123;</div><div class="line">    date <span class="_">-d</span> <span class="string">"<span class="variable">$1</span> <span class="variable">$2</span>"</span> +%s</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 当前日期时间戳减去索引名时间转化时间戳是否大于1</span></div><div class="line"><span class="function"><span class="title">dateDiff</span></span> ()&#123;</div><div class="line">    <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></div><div class="line">        <span class="_">-s</span>)   sec=1;      <span class="built_in">shift</span>;;</div><div class="line">        -m)   sec=60;     <span class="built_in">shift</span>;;</div><div class="line">        -h)   sec=3600;   <span class="built_in">shift</span>;;</div><div class="line">        <span class="_">-d</span>)   sec=86400;  <span class="built_in">shift</span>;;</div><div class="line">        -2d)  sec=172800;  <span class="built_in">shift</span>;;</div><div class="line">        -5d)  sec=432000;  <span class="built_in">shift</span>;;</div><div class="line">        *)    sec=86400;;</div><div class="line">    <span class="keyword">esac</span></div><div class="line">    dte1=$(date2stamp <span class="variable">$1</span>)</div><div class="line">    dte2=$(date2stamp <span class="variable">$2</span>)</div><div class="line">    diffSec=$((dte2-dte1))</div><div class="line">    <span class="keyword">if</span> ((diffSec &lt; 0)); <span class="keyword">then</span> abs=-1; <span class="keyword">else</span> abs=1; <span class="keyword">fi</span></div><div class="line">    <span class="built_in">echo</span> $((diffSec/sec*abs))</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 根据不同服务器，删除保存不同时间段的索引文件</span></div><div class="line"><span class="keyword">for</span> zone <span class="keyword">in</span> <span class="variable">$&#123;indexPrefix[@]&#125;</span>; <span class="keyword">do</span></div><div class="line">	<span class="comment"># 循环获取索引文件，通过正则匹配过滤</span></div><div class="line">	<span class="keyword">for</span> index <span class="keyword">in</span> $(curl <span class="_">-s</span> -u <span class="variable">$user</span>:<span class="variable">$pass</span> <span class="string">"<span class="variable">$&#123;elastic_url&#125;</span>:<span class="variable">$&#123;elastic_port&#125;</span>/_cat/indices?v"</span> |grep -E <span class="string">"<span class="variable">$&#123;zone&#125;</span>_[A-Za-z0-9]&#123;1,&#125;_[0-9]&#123;6&#125;-[0-9]&#123;2&#125;"</span> | awk <span class="string">'&#123;print $3 &#125;'</span>); <span class="keyword">do</span></div><div class="line">		<span class="comment"># 获取索引文件日期，并转化格式</span></div><div class="line">		date=$(<span class="built_in">echo</span> <span class="variable">$&#123;index: -9&#125;</span>:00:00 |sed -n <span class="string">'s/-/ /p'</span>)</div><div class="line">		<span class="comment"># 获取当前日期</span></div><div class="line">  		cond=$(date <span class="string">'+%Y-%m-%d %H:00:00'</span>)</div><div class="line">		<span class="comment"># 根据不同服务器，计算不同数值</span></div><div class="line">		<span class="keyword">if</span> [ <span class="variable">$&#123;zone&#125;</span> == <span class="string">'zh'</span> ]; <span class="keyword">then</span></div><div class="line">  			diff=$(dateDiff <span class="_">-d</span> <span class="string">"<span class="variable">$&#123;date&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;cond&#125;</span>"</span>)</div><div class="line">		<span class="keyword">else</span></div><div class="line">			diff=$(dateDiff -2d <span class="string">"<span class="variable">$&#123;date&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;cond&#125;</span>"</span>)</div><div class="line">		<span class="keyword">fi</span></div><div class="line">		<span class="comment"># 打印索引名和结果数值</span></div><div class="line">  		<span class="comment">#echo -n "$&#123;index&#125; ($&#123;diff&#125;)"</span></div><div class="line"></div><div class="line">		<span class="comment"># 判断结果值是否大于等于1</span></div><div class="line">  		<span class="keyword">if</span> [ <span class="variable">$diff</span> -ge 1 ]; <span class="keyword">then</span></div><div class="line">    			curl -XDELETE <span class="_">-s</span> -u <span class="variable">$user</span>:<span class="variable">$pass</span> <span class="string">"<span class="variable">$&#123;elastic_url&#125;</span>:<span class="variable">$&#123;elastic_port&#125;</span>/<span class="variable">$&#123;index&#125;</span>"</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;index&#125;</span> 删除成功"</span> &gt;&gt; <span class="variable">$log</span> || <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;index&#125;</span> 删除失败"</span> &gt;&gt; <span class="variable">$log</span></div><div class="line">		<span class="keyword">fi</span></div><div class="line">	<span class="keyword">done</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<p>结果：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[2017-11-07T15:58:42,711][INFO ][o.e.c.m.MetaDataDeleteIndexService] [master1] [yp_zg_171105-16/F0MPnZ27TSGlgyP3RC5Z7w] deleting index</div><div class="line">[2017-11-07T15:58:44,966][INFO ][o.e.c.m.MetaDataDeleteIndexService] [master1] [yp_xxsj_171105-16/V2ZCKKJMSJq_oWVTky7OFw] deleting index</div><div class="line">[2017-11-07T15:58:55,621][INFO ][o.e.c.m.MetaDataDeleteIndexService] [master1] [zh_king3_171106-16/_ow8ZVGyQfm9NzRkVzHzsg] deleting index</div><div class="line">[2017-11-07T15:58:57,536][INFO ][o.e.c.m.MetaDataDeleteIndexService] [master1] [zh_ztgame_171106-16/jS7E4wIXTPmR1dpAlyHT0Q] deleting index</div><div class="line">[2017-11-07T15:58:59,933][INFO ][o.e.c.m.MetaDataDeleteIndexService] [master1] [zh_360_171106-16/GSV0Ptg4Qxy6UPgbNRrWmw] deleting index</div><div class="line">[2017-11-07T15:59:02,087][INFO ][o.e.c.m.MetaDataDeleteIndexService] [master1] [zh_lzsy_171106-16/yM66fjQ9RT69aIHvnW8_5Q] deleting index</div><div class="line">[2017-11-07T15:59:04,589][INFO ][o.e.c.m.MetaDataDeleteIndexService] [master1] [zh_giant_171106-16/3EvgRU34QqKjQ-WZSDzfxg] deleting index</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于&lt;code&gt;elk&lt;/code&gt;每天每时每刻都在创建索引文件，导致磁盘容量越来越小，所以要进行定期删除&lt;/p&gt;
&lt;h3 id=&quot;官网查询删除&quot;&gt;&lt;a href=&quot;#官网查询删除&quot; class=&quot;headerlink&quot; title=&quot;官网查询删除&quot;&gt;&lt;/a&gt;官网查询删除&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -u 用户名:密码  -H&#39;Content-Type:application/json&#39; -d&#39;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &quot;query&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;range&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &quot;@timestamp&quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;lt&quot;: &quot;now-7d&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &quot;format&quot;: &quot;epoch_millis&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&#39; -XPOST &quot;http://127.0.0.1:9200/*-*/_delete_by_query?pretty&quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.cenhq.com/categories/ELK/"/>
    
    
      <category term="elasticsearch" scheme="http://www.cenhq.com/tags/elasticsearch/"/>
    
      <category term="elk" scheme="http://www.cenhq.com/tags/elk/"/>
    
      <category term="indices" scheme="http://www.cenhq.com/tags/indices/"/>
    
      <category term="delete index" scheme="http://www.cenhq.com/tags/delete-index/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch-5.6插件x-pack破解</title>
    <link href="http://www.cenhq.com/2017/10/16/elasticsearch-5-6-plug-in-xpack-cracking/"/>
    <id>http://www.cenhq.com/2017/10/16/elasticsearch-5-6-plug-in-xpack-cracking/</id>
    <published>2017-10-16T03:37:50.000Z</published>
    <updated>2017-10-16T05:12:45.477Z</updated>
    
    <content type="html"><![CDATA[<h3 id="创建-LicenseVerifier-java-文件"><a href="#创建-LicenseVerifier-java-文件" class="headerlink" title="创建 LicenseVerifier.java 文件"></a>创建 <code>LicenseVerifier.java</code> 文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">$ cat LicenseVerifier.java</div><div class="line"><span class="keyword">package</span> org.elasticsearch.license;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.nio.*;</div><div class="line"><span class="keyword">import</span> java.util.*;</div><div class="line"><span class="keyword">import</span> java.security.*;</div><div class="line"><span class="keyword">import</span> org.elasticsearch.common.xcontent.*;</div><div class="line"><span class="keyword">import</span> org.apache.lucene.util.*;</div><div class="line"><span class="keyword">import</span> org.elasticsearch.common.io.*;</div><div class="line"><span class="keyword">import</span> java.io.*;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LicenseVerifier</span></span></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">verifyLicense</span><span class="params">(<span class="keyword">final</span> License license, <span class="keyword">final</span> <span class="keyword">byte</span>[] encryptedPublicKeyData)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">verifyLicense</span><span class="params">(<span class="keyword">final</span> License license)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="编译class文件"><a href="#编译class文件" class="headerlink" title="编译class文件"></a>编译class文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">$ javac -cp <span class="string">"/usr/local/src/elasticsearch-5.6.0/lib/elasticsearch-5.6.0.jar:/usr/local/src/elasticsearch-5.6.0/lib/lucene-core-6.6.0.jar:/usr/local/src/elasticsearch-5.6.0/plugins/x-pack/x-pack-5.6.0.jar"</span>  LicenseVerifier.java</div><div class="line"></div><div class="line">$ ls License*</div><div class="line">LicenseVerifier.class  LicenseVerifier.java</div><div class="line"></div><div class="line"><span class="comment"># 进入x-pack目录</span></div><div class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/elasticsearch-5.6.0/plugins/x-pack</div><div class="line"></div><div class="line">$ mkdir <span class="built_in">test</span></div><div class="line"></div><div class="line">$ mv x-pack-5.6.0.jar <span class="built_in">test</span>/</div><div class="line"></div><div class="line"><span class="comment"># 备份文件</span></div><div class="line">$ cp x-pack-5.6.0.jar /tmp</div><div class="line"></div><div class="line"><span class="comment"># 解压文件</span></div><div class="line">$ jar xvf x-pack-5.6.0.jar</div><div class="line"></div><div class="line"><span class="comment"># 替换 class</span></div><div class="line">$ cp /usr/<span class="built_in">local</span>/src/LicenseVerifier.class org/elasticsearch/license</div><div class="line"></div><div class="line"><span class="comment"># 打包</span></div><div class="line">$ jar cvf x-pack-5.6.0.jar .</div><div class="line"></div><div class="line"><span class="comment"># 打包好的文件放回x-pack目录下</span></div><div class="line">$ cp x-pack-5.6.0.jar /usr/<span class="built_in">local</span>/src/elasticsearch-5.6.0/plugins/x-pack/</div></pre></td></tr></table></figure>
<h3 id="申请license"><a href="#申请license" class="headerlink" title="申请license"></a>申请license</h3><p><a href="https://license.elastic.co/registration" target="_blank" rel="external">申请地址</a></p>
<p>申请完成后很快会发送到邮箱，而后修改license文件</p>
<p>它分有不同的版本，版本有不同的权限，如下：</p>
<ol>
<li>open source开源版本</li>
<li>basic基础版本</li>
<li>gold是黄金版</li>
<li>PLATINUM铂金版</li>
</ol>
<h3 id="修改license"><a href="#修改license" class="headerlink" title="修改license"></a>修改license</h3><p>邮箱中有个链接，点击下载文件。</p>
<p>然后修改此文件</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="attr">"license"</span>:&#123;<span class="attr">"uid"</span>:<span class="string">"5de7b3b82-66ffd0-1f8ee-92220dd5-f9c477aec563b6"</span>,<span class="attr">"type"</span>:<span class="string">"platinum"</span>,<span class="attr">"issue_date_in_millis"</span>:<span class="number">1506643200000</span>,<span class="attr">"expiry_date_in_millis"</span>:<span class="number">2535123399999</span>,<span class="attr">"max_nodes"</span>:<span class="number">100</span>,<span class="attr">"issued_to"</span>:<span class="string">"username (com)"</span>,<span class="attr">"issuer"</span>:<span class="string">"Web Form"</span>,<span class="attr">"signature"</span>:<span class="string">"AAAAAwAAAA3WtV1nOvU4U+frJxlhAAABmC9ZN0hjZDBGYnVyRXpCOW5Bb3FjZDAxOWpSbTVoMVZwUzRxVk1PSmkxaktJRVl5MUYvUWh3bHZVUTllbXNPbzBUemtnbWpBbmlWRmRZb25KNFlBR2x0TXc2K2p1Y1VtMG1UQU9TRGZVSGRwaEJGUjE3bXd3LzRqZ05iLzRteWFNekd24234xRGpIYlFwYkJiNUs0afea465U1hTVlJKNVlXekMrSlVUdFIvV0FNeWdOYnlESDc3MWhlY3hSQmdKSjJ2ZTcvYlBFOHhPQlV3ZHdDQ0tHcG5uOElCaDJ4K1hob29xSG85N0kvTWaefeV3THhlQk9NL01VMFRjNDZpZEdfaefaVXeUtUMXIyMlIveFpJUkk2WUdveEZaME9XWitGUi9WNTZVQW1FMG1DenhZU0ZmeXlZakVEMjZFT2NvOWxpZGlqVmlHNC8rWfaefVVUYzMwRGVySHpIdURzKzFiRDl4TmM1TUp2VTBOUlJZUlAyV0ZVL2kvVk10L0Ns1423bXNFYVZwT3NSU082dFNNa2pr2Q0ZsclZ4NTltbU1CVE5lR09Bck93V2J1Y3c9PQAAAQCj/qb1/6KaXgoLi4gzu5JgLz9M9TFvFnfXWih19ampCemtClX0nbiYc0JAdN/z0bqtbjQMulF7t92NSEtFFJ+9KvBM28cLhVEO0AvdLj/q0vAtXbl/mzFLxDt0ogPXIWhMJ4Fn0+5e8uAuWbziRZ3Q324r9vzCLp8IYnmUau3PmrpkL4YaVlPMbuYRnpZMOjS2hctxStqFWYEudvQj/QwMRwAhKpGJ0P8z24234ryrHEPcciskuAmGTpRsxVBUToBvgA4dSnlLrYzEjpCsXjj7HkVBj9yJ4CcIVVvcQ6bdFtI47i4L0zoea4lpuiCLlMGOrvUS/uE3mmlXQXAX1zt4mgtdmLOX"</span>,<span class="attr">"start_date_in_millis"</span>:<span class="number">1506643200000</span>&#125;&#125;</div></pre></td></tr></table></figure>
<p>最后更新</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ curl -XPUT -u elastic:changeme <span class="string">'http://localhost:9200/_xpack/license'</span> -H <span class="string">"Content-Type: application/json"</span> <span class="_">-d</span> @license.json</div><div class="line">&#123;<span class="string">"acknowledged"</span>:<span class="literal">true</span>,<span class="string">"license_status"</span>:<span class="string">"valid"</span>&#125;</div></pre></td></tr></table></figure>
<p>查看修改后</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ curl -XGET -u elastic:changeme <span class="string">'http://localhost:9200/_xpack/license'</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"license"</span> : &#123;</div><div class="line">    <span class="string">"status"</span> : <span class="string">"active"</span>,</div><div class="line">    <span class="string">"uid"</span> : <span class="string">"5de7b3b82-66ffd0-1f8ee-92220dd5-f9c477aec563b6"</span>,</div><div class="line">    <span class="string">"type"</span> : <span class="string">"platinum"</span>,</div><div class="line">    <span class="string">"issue_date"</span> : <span class="string">"2017-09-29T00:00:00.000Z"</span>,</div><div class="line">    <span class="string">"issue_date_in_millis"</span> : 1506643200000,</div><div class="line">    <span class="string">"expiry_date"</span> : <span class="string">"2050-05-02T16:56:39.999Z"</span>,</div><div class="line">    <span class="string">"expiry_date_in_millis"</span> : 2535123399999,</div><div class="line">    <span class="string">"max_nodes"</span> : 100,</div><div class="line">    <span class="string">"issued_to"</span> : <span class="string">"username (com)"</span>,</div><div class="line">    <span class="string">"issuer"</span> : <span class="string">"Web Form"</span>,</div><div class="line">    <span class="string">"start_date_in_millis"</span> : 1506643200000</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>登录kinana查看</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lu2-bJvqPaGXI4aF9NOhiqdoRSU6.jpeg" alt="file"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;创建-LicenseVerifier-java-文件&quot;&gt;&lt;a href=&quot;#创建-LicenseVerifier-java-文件&quot; class=&quot;headerlink&quot; title=&quot;创建 LicenseVerifier.java 文件&quot;&gt;&lt;/a&gt;创建 &lt;code&gt;LicenseVerifier.java&lt;/code&gt; 文件&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cat LicenseVerifier.java&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; org.elasticsearch.license;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.nio.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.security.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.elasticsearch.common.xcontent.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.util.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.elasticsearch.common.io.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LicenseVerifier&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;verifyLicense&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; License license, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] encryptedPublicKeyData)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;verifyLicense&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; License license)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.cenhq.com/categories/ELK/"/>
    
    
      <category term="elasticsearch" scheme="http://www.cenhq.com/tags/elasticsearch/"/>
    
      <category term="x-pack" scheme="http://www.cenhq.com/tags/x-pack/"/>
    
      <category term="cracking" scheme="http://www.cenhq.com/tags/cracking/"/>
    
  </entry>
  
  <entry>
    <title>ELK 使用中遇到的问题</title>
    <link href="http://www.cenhq.com/2017/10/16/problems-encountered-in-the-use-of-elk/"/>
    <id>http://www.cenhq.com/2017/10/16/problems-encountered-in-the-use-of-elk/</id>
    <published>2017-10-16T03:32:54.000Z</published>
    <updated>2017-10-16T07:10:32.674Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><h4 id="logstash-启动报错如下："><a href="#logstash-启动报错如下：" class="headerlink" title="logstash 启动报错如下："></a>logstash 启动报错如下：</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[2017-09-27T15:49:05,406][WARN ][logstash.inputs.file     ] failed to open /vol2/ZT2/170927-02/SessionServer-YP06/statobjscenesserver34.log.170927-02: Permission denied - /vol2/ZT2/170927-02/SessionServer-YP06/statobjscenesserver34.log.170927-02</div><div class="line">[2017-09-27T15:49:05,407][WARN ][logstash.inputs.file     ] failed to open /vol2/ZT2/170927-02/SessionServer-YP06/statobjsessionserver.log.170927-02: Permission denied - /vol2/ZT2/170927-02/SessionServer-YP06/statobjsessionserver.log.170927-02</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路:"></a>解决思路:</h4><h5 id="方法1：错误描述很明显是权限问题"><a href="#方法1：错误描述很明显是权限问题" class="headerlink" title="方法1：错误描述很明显是权限问题"></a>方法1：错误描述很明显是权限问题</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chmod 777 /vol2/ -R</div></pre></td></tr></table></figure>
<h5 id="方法2：但是问题没有得到解决-后来网上搜到说是系统设定允许打开文档数问题"><a href="#方法2：但是问题没有得到解决-后来网上搜到说是系统设定允许打开文档数问题" class="headerlink" title="方法2：但是问题没有得到解决, 后来网上搜到说是系统设定允许打开文档数问题"></a>方法2：但是问题没有得到解决, 后来网上搜到说是系统设定允许打开文档数问题</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">ulimit</span> -n</div><div class="line">2048</div><div class="line"></div><div class="line"><span class="comment"># 修改配置</span></div><div class="line">$ vim /etc/security/limits.conf</div><div class="line">*                soft   nofile          1048576</div><div class="line">*                hard   nofile          1048576</div></pre></td></tr></table></figure>
<p>保存后，退出重新登录后生效</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">ulimit</span> -n</div><div class="line">1048576</div></pre></td></tr></table></figure>
<blockquote>
<p>注意： linux 默认上线为2^20=1048576, 千万不能超过该数值，否则系统重启导致无法登录</p>
</blockquote>
<h5 id="方法3：尝试查看配置文件，测试gork-得出正则不匹配导致的，所以首先去匹配正则"><a href="#方法3：尝试查看配置文件，测试gork-得出正则不匹配导致的，所以首先去匹配正则" class="headerlink" title="方法3：尝试查看配置文件，测试gork 得出正则不匹配导致的，所以首先去匹配正则"></a>方法3：尝试查看配置文件，测试<code>gork</code> 得出正则不匹配导致的，所以首先去匹配正则</h5><p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lsXE35q2Pmm47CIuPpRbSITnEaPI.jpeg" alt="file"></p>
<p>修改配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">filter &#123;</div><div class="line">  grok &#123;</div><div class="line">    match =&gt; [&quot;path&quot;, &quot;/vol2\/(?&lt;game_name&gt;\w+|\w+\d+?)\/(?&lt;time&gt;\d&#123;6&#125;-\d&#123;2&#125;?)\/(?&lt;server_name&gt;\w+\d&#123;2&#125;?)\-(?&lt;zone&gt;\w+\d+?)|\-(\.*)\/(\.*)&quot;]</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><h4 id="报错信息："><a href="#报错信息：" class="headerlink" title="报错信息："></a>报错信息：</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[logstash.inputs.file     ] Reached open files <span class="built_in">limit</span>: 4095, <span class="built_in">set</span> by the <span class="string">'max_open_files'</span> option or default, files yet to open: 158390</div></pre></td></tr></table></figure>
<h4 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h4><p>修改配置文件，允许打开文件数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">file &#123;</div><div class="line">	# 路劲下目录递归查找所有文件</div><div class="line">    path =&gt; &quot;/vol2/**/*&quot;</div><div class="line">    # 打开文件数</div><div class="line">    max_open_files =&gt; 200000</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h3 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h3><h4 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h4><p><code>elasticsarch</code> 无法发现 <code>logstash</code> 收集到的日志。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ curl http://10.21.16.49:9200 -u user:password</div><div class="line">&#123;</div><div class="line">  <span class="string">"name"</span> : <span class="string">"sUOfDTU"</span>,</div><div class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elasticsearch"</span>,</div><div class="line">  <span class="string">"cluster_uuid"</span> : <span class="string">"48mAG5SaTAuI-ajfh5cPxw"</span>,</div><div class="line">  <span class="string">"version"</span> : &#123;</div><div class="line">    <span class="string">"number"</span> : <span class="string">"5.6.0"</span>,</div><div class="line">    <span class="string">"build_hash"</span> : <span class="string">"781a835"</span>,</div><div class="line">    <span class="string">"build_date"</span> : <span class="string">"2017-09-07T03:09:58.087Z"</span>,</div><div class="line">    <span class="string">"build_snapshot"</span> : <span class="literal">false</span>,</div><div class="line">    <span class="string">"lucene_version"</span> : <span class="string">"6.6.0"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"tagline"</span> : <span class="string">"You Know, for Search"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>连接测试正常</p>
<p>又创建个新配置文件如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">output &#123;</div><div class="line">  elasticsearch &#123;</div><div class="line">    hosts =&gt; [&quot;10.21.16.49:9200&quot;]</div><div class="line">    user =&gt; &quot;user&quot;</div><div class="line">    password =&gt; &quot;password&quot;</div><div class="line">    index =&gt; &quot;159-%&#123;+YYYY.MM.dd&#125;&quot;</div><div class="line">  &#125;</div><div class="line">  stdout &#123;</div><div class="line">    codec =&gt; rubydebug</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>elasticsearch</code> 可以发现 <code>logstash</code>收集到日志</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lrRpnLWY7Zgpqv35XKhb2AZKEhzG.jpeg" alt="file"></p>
<p>对比两个配置文件，发现只有<code>index</code>不同外，其他都一样，所以查找这里的问题。</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lgTw8qE4sMK484IrUkJWy72mpG9T.jpeg" alt="file"></p>
<p>由于我的<code>index</code>使用了变量，导致<code>index</code>这里无法创建，所以修改配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mutate &#123;</div><div class="line">  # 关联索引名的变量都转成小写字符</div><div class="line">  lowercase =&gt; [&quot;game_name&quot;, &quot;server_name&quot;, &quot;zone&quot;]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h4><p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lrRXfLp5YiO50gCcuR5hbOaSniPh.jpeg" alt="file"></p>
<h3 id="问题4"><a href="#问题4" class="headerlink" title="问题4"></a>问题4</h3><h4 id="报错信息：-1"><a href="#报错信息：-1" class="headerlink" title="报错信息："></a>报错信息：</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[2017-09-28T13:33:48,415][INFO ][logstash.outputs.elasticsearch] retrying failed action with response code: 429 (&#123;<span class="string">"type"</span>=&gt;<span class="string">"es_rejected_execution_exception"</span>, <span class="string">"reason"</span>=&gt;<span class="string">"rejected execution of org.elasticsearch.transport.TransportService<span class="variable">$7</span>@660c4c58 on EsThreadPoolExecutor[bulk, queue capacity = 200, org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor@542fa472[Running, pool size = 32, active threads = 32, queued tasks = 200, completed tasks = 5705638]]"</span>&#125;)</div><div class="line">[2017-09-28T13:33:48,415][INFO ][logstash.outputs.elasticsearch] Retrying individual bulk actions that failed or were rejected by the previous bulk request. &#123;:count=&gt;60&#125;</div></pre></td></tr></table></figure>
<p>由于<code>elasticsearch</code>写入遇到瓶颈导致，首先想到是调整<code>elasticsearch</code>线程池， <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/dont-touch-these-settings.html" target="_blank" rel="external">官网建议</a> ，于是我们修改<code>logstash</code>参数 <code>pipeline.batch.size</code></p>
<p>在ES5.0以后，es将<code>bulk</code>、<code>flush</code>、<code>get</code>、<code>index</code>、<code>search</code>等线程池完全分离，自身的写入不会影响其他功能的性能。<br>来查询一下ES当前的线程情况：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET _nodes/stats/thread_pool?pretty</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="string">"thread_pool"</span>: &#123;</div><div class="line">	<span class="string">"bulk"</span>: &#123;</div><div class="line">	  <span class="string">"threads"</span>: <span class="number">32</span>,</div><div class="line">	  <span class="string">"queue"</span>: <span class="number">121</span>,</div><div class="line">	  <span class="string">"active"</span>: <span class="number">32</span>,</div><div class="line">	  <span class="string">"rejected"</span>: <span class="number">516</span>,</div><div class="line">	  <span class="string">"largest"</span>: <span class="number">32</span>,</div><div class="line">	  <span class="string">"completed"</span>: <span class="number">5813431</span></div><div class="line">	&#125;,</div></pre></td></tr></table></figure>
<p>其中：<code>bulk</code>模板的线程数32，当前活跃的线程数32，证明所有的线程是busy的状态，queue队列121，rejected为516。那么问题就找到了，所有的线程都在忙，队列堵满后再有进程写入就会被拒绝，而当前拒绝数为516。</p>
<h4 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h4><p>官方的建议是提高每次批处理的数量，调节传输间歇时间。当前<code>batch.size</code>增大，es处理的事件数就会变少，写入也就愉快了。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ vim config/logstash.yml</div><div class="line"></div><div class="line">pipeline.workers: 32</div><div class="line">pipeline.output.workers: 32</div><div class="line">pipeline.batch.size: 100000</div><div class="line">pipeline.batch.delay: 10</div></pre></td></tr></table></figure>
<h4 id="参数解析："><a href="#参数解析：" class="headerlink" title="参数解析："></a>参数解析：</h4><p><code>worker</code>,<code>output.workers</code>数量建议等于CPU数</p>
<p><code>batch.size</code> 一般指数据的条目数。考虑网卡流量，磁盘转速的问题，所以一般来说，建议 bulk 请求体的大小，在 15MB 左右，通过实际测试继续向上探索最合适的设置。</p>
<p>以 <code>logstash</code> 默认的 <code>bulk_size =&gt; 5000</code> 为例，假设单条数据平均大小 200B ，一次 <code>bulk</code> 请求体的大小就是 1.5MB。那么我们可以尝试 <code>bulk_size =&gt; 50000</code>；而如果单条数据平均大小是 20KB，一次 <code>bulk</code> 大小就是 100MB，显然超标了，需要尝试下调至 <code>bulk_size =&gt; 500</code>。</p>
<p><code>batch.delay</code>根据实际的数据量逐渐增大来测试最优值。</p>
<h4 id="结果：-1"><a href="#结果：-1" class="headerlink" title="结果："></a>结果：</h4><p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/ljwrJ-BgJ8yp5f7GJP-8HfcOSFCW.jpeg" alt="file"></p>
<h3 id="问题4-1"><a href="#问题4-1" class="headerlink" title="问题4"></a>问题4</h3><p>错误描述：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">[2017-10-12T14:48:32,179][WARN ][o.e.b.JNANatives         ] Unable to lock JVM Memory: error=12, reason=无法分配内存</div><div class="line">[2017-10-12T14:48:32,181][WARN ][o.e.b.JNANatives         ] This can result <span class="keyword">in</span> part of the JVM being swapped out.</div><div class="line">[2017-10-12T14:48:32,182][WARN ][o.e.b.JNANatives         ] Increase RLIMIT_MEMLOCK, soft <span class="built_in">limit</span>: 65536, hard <span class="built_in">limit</span>: 65536</div><div class="line">[2017-10-12T14:48:32,182][WARN ][o.e.b.JNANatives         ] These can be adjusted by modifying /etc/security/limits.conf, <span class="keyword">for</span> example:</div><div class="line">	<span class="comment"># allow user 'elk' mlockall</span></div><div class="line">	elk soft memlock unlimited</div><div class="line">	elk hard memlock unlimited</div><div class="line">[2017-10-12T14:48:32,182][WARN ][o.e.b.JNANatives         ] If you are logged <span class="keyword">in</span> interactively, you will have to re-login <span class="keyword">for</span> the new limits to take effect.</div><div class="line">[2017-10-12T14:48:32,346][INFO ][o.e.n.Node               ] [master2] initializing ...</div><div class="line">[2017-10-12T14:48:32,432][INFO ][o.e.e.NodeEnvironment    ] [master2] using [1] data paths, mounts [[/ (/dev/sda3)]], net usable_space [1.7tb], net total_space [2tb], spins? [possibly], types [ext4]</div><div class="line">[2017-10-12T14:48:32,432][INFO ][o.e.e.NodeEnvironment    ] [master2] heap size [31.7gb], compressed ordinary object pointers [<span class="literal">false</span>]</div><div class="line">[2017-10-12T14:48:32,433][INFO ][o.e.n.Node               ] [master2] node name [master2], node ID [RunwGa2wS4mMZW_03-kTbQ]</div><div class="line">[2017-10-12T14:48:32,434][INFO ][o.e.n.Node               ] [master2] version[5.6.0], pid[42846], build[781a835/2017-09-07T03:09:58.087Z], OS[Linux/2.6.32-358.el6.x86_64/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_144/25.144-b01]</div><div class="line">[2017-10-12T14:48:32,434][INFO ][o.e.n.Node               ] [master2] JVM arguments [-Xms32g, -Xmx32g, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:+UseCMSInitiatingOccupancyOnly, -XX:+AlwaysPreTouch, -Xss10m, -Djava.awt.headless=<span class="literal">true</span>, -Dfile.encoding=UTF-8, -Djna.nosys=<span class="literal">true</span>, -Djdk.io.permissionsUseCanonicalPath=<span class="literal">true</span>, -Dio.netty.noUnsafe=<span class="literal">true</span>, -Dio.netty.noKeySetOptimization=<span class="literal">true</span>, -Dio.netty.recycler.maxCapacityPerThread=0, -D<span class="built_in">log</span>4j.shutdownHookEnabled=<span class="literal">false</span>, -D<span class="built_in">log</span>4j2.disable.jmx=<span class="literal">true</span>, -D<span class="built_in">log</span>4j.skipJansi=<span class="literal">true</span>, -XX:+HeapDumpOnOutOfMemoryError, -Des.path.home=/usr/<span class="built_in">local</span>/src/elasticsearch-5.6.0]</div><div class="line">[2017-10-12T14:48:33,816][INFO ][o.e.p.PluginsService     ] [master2] loaded module [aggs-matrix-stats]</div><div class="line">[2017-10-12T14:48:33,816][INFO ][o.e.p.PluginsService     ] [master2] loaded module [ingest-common]</div><div class="line">[2017-10-12T14:48:33,816][INFO ][o.e.p.PluginsService     ] [master2] loaded module [lang-expression]</div><div class="line">[2017-10-12T14:48:33,816][INFO ][o.e.p.PluginsService     ] [master2] loaded module [lang-groovy]</div><div class="line">[2017-10-12T14:48:33,816][INFO ][o.e.p.PluginsService     ] [master2] loaded module [lang-mustache]</div><div class="line">[2017-10-12T14:48:33,816][INFO ][o.e.p.PluginsService     ] [master2] loaded module [lang-painless]</div><div class="line">[2017-10-12T14:48:33,817][INFO ][o.e.p.PluginsService     ] [master2] loaded module [parent-join]</div><div class="line">[2017-10-12T14:48:33,817][INFO ][o.e.p.PluginsService     ] [master2] loaded module [percolator]</div><div class="line">[2017-10-12T14:48:33,817][INFO ][o.e.p.PluginsService     ] [master2] loaded module [reindex]</div><div class="line">[2017-10-12T14:48:33,817][INFO ][o.e.p.PluginsService     ] [master2] loaded module [transport-netty3]</div><div class="line">[2017-10-12T14:48:33,817][INFO ][o.e.p.PluginsService     ] [master2] loaded module [transport-netty4]</div><div class="line">[2017-10-12T14:48:33,817][INFO ][o.e.p.PluginsService     ] [master2] loaded plugin [x-pack]</div><div class="line">[2017-10-12T14:48:35,165][DEBUG][o.e.a.ActionModule       ] Using REST wrapper from plugin org.elasticsearch.xpack.XPackPlugin</div><div class="line">[2017-10-12T14:48:36,343][INFO ][o.e.x.m.j.p.l.CppLogMessageHandler] [controller/42972] [Main.cc@128] controller (64 bit): Version 5.6.0 (Build 93aea61f57f7d8) Copyright (c) 2017 Elasticsearch BV</div><div class="line">[2017-10-12T14:48:36,452][INFO ][o.e.d.DiscoveryModule    ] [master2] using discovery <span class="built_in">type</span> [zen]</div><div class="line">[2017-10-12T14:48:37,590][INFO ][o.e.n.Node               ] [master2] initialized</div><div class="line">[2017-10-12T14:48:37,590][INFO ][o.e.n.Node               ] [master2] starting ...</div><div class="line">[2017-10-12T14:48:38,175][INFO ][o.e.t.TransportService   ] [master2] publish_address &#123;10.211.45.67:9300&#125;, bound_addresses &#123;[::]:9300&#125;</div><div class="line">[2017-10-12T14:48:38,182][INFO ][o.e.b.BootstrapChecks    ] [master2] bound or publishing to a non-loopback or non-link-local address, enforcing bootstrap checks</div><div class="line">ERROR: [1] bootstrap checks failed</div><div class="line">[1]: memory locking requested <span class="keyword">for</span> elasticsearch process but memory is not locked</div><div class="line">[2017-10-12T14:48:38,191][INFO ][o.e.n.Node               ] [master2] stopping ...</div><div class="line">[2017-10-12T14:48:38,472][INFO ][o.e.n.Node               ] [master2] stopped</div><div class="line">[2017-10-12T14:48:38,473][INFO ][o.e.n.Node               ] [master2] closing ...</div><div class="line">[2017-10-12T14:48:38,482][INFO ][o.e.n.Node               ] [master2] closed</div></pre></td></tr></table></figure>
<p>由于在<code>elasticsearch.yml</code> 启用<code>bootstrap.mlockall: true</code>. 设置为true来锁住内存，因为当JVM开始swapping的时候Elasticsearch的效率会降低，所以要保证他不被swap，可以吧ES_MIN_MEN和ES_MAX_MEN两个环境变量设置为同一个值，并且保证机器有足够的内存分配给Elasticsearch，同时也要允许Elasticsearch的进程可以锁住内存，linux下可以通过<code>ulimit -l unlimited</code>命令。</p>
<p>解决办法：</p>
<h4 id="查看es节点是否开启了mem-lock"><a href="#查看es节点是否开启了mem-lock" class="headerlink" title="查看es节点是否开启了mem_lock"></a>查看es节点是否开启了mem_lock</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET /_nodes?filter_path=**.mlockall</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"nodes"</span>: &#123;</div><div class="line">    <span class="string">"IatP7izzS9WwvawIt839mQ"</span>: &#123;</div><div class="line">      <span class="string">"process"</span>: &#123;</div><div class="line">        <span class="string">"mlockall"</span>: <span class="literal">false</span></div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"LKuZugkFQpqxg2eMoUA7sg"</span>: &#123;</div><div class="line">      <span class="string">"process"</span>: &#123;</div><div class="line">        <span class="string">"mlockall"</span>: <span class="literal">false</span></div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"zTiTg4gPSnC3h_7_asiGIA"</span>: &#123;</div><div class="line">      <span class="string">"process"</span>: &#123;</div><div class="line">        <span class="string">"mlockall"</span>: <span class="literal">false</span></div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Y5wa24dEQaunz7WVkMs7FA"</span>: &#123;</div><div class="line">      <span class="string">"process"</span>: &#123;</div><div class="line">        <span class="string">"mlockall"</span>: <span class="literal">false</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上述返回内容，可见都没有开启mem_lock，集全随时都可能发生故障（尤其是集群正常运行了一段时间，莫名其妙的故障）</p>
<h4 id="分配内存无限制"><a href="#分配内存无限制" class="headerlink" title="分配内存无限制"></a>分配内存无限制</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 告诉操作系统可以无限制分配内存给一个进程</span></div><div class="line">$ <span class="built_in">ulimit</span> <span class="_">-l</span> unlimited</div></pre></td></tr></table></figure>
<h4 id="最后添加到配置文件中"><a href="#最后添加到配置文件中" class="headerlink" title="最后添加到配置文件中"></a>最后添加到配置文件中</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/security/limits.conf</div><div class="line"><span class="comment"># allow user 'elk' mlockall</span></div><div class="line">elk soft memlock unlimited</div><div class="line">elk hard memlock unlimited</div></pre></td></tr></table></figure>
<p>启动服务后正常</p>
<h3 id="错误5"><a href="#错误5" class="headerlink" title="错误5"></a>错误5</h3><h4 id="问题描述：-1"><a href="#问题描述：-1" class="headerlink" title="问题描述："></a>问题描述：</h4><p>由于系统宕机，导致大量索引出现了Unassigned 状态。我们通过reroute API进行了操作，对主分片缺失的索引</p>
<p>查看集群健康状态</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET /_cluster/health</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;cluster_name&quot;: &quot;ztgame-elk&quot;,</div><div class="line">  &quot;status&quot;: &quot;yellow&quot;,</div><div class="line">  &quot;timed_out&quot;: false,</div><div class="line">  &quot;number_of_nodes&quot;: 4,</div><div class="line">  &quot;number_of_data_nodes&quot;: 3,</div><div class="line">  &quot;active_primary_shards&quot;: 5693,</div><div class="line">  &quot;active_shards&quot;: 9951,</div><div class="line">  &quot;relocating_shards&quot;: 0,</div><div class="line">  &quot;initializing_shards&quot;: 2,</div><div class="line">  &quot;unassigned_shards&quot;: 1434,</div><div class="line">  &quot;delayed_unassigned_shards&quot;: 0,</div><div class="line">  &quot;number_of_pending_tasks&quot;: 2,</div><div class="line">  &quot;number_of_in_flight_fetch&quot;: 0,</div><div class="line">  &quot;task_max_waiting_in_queue_millis&quot;: 170,</div><div class="line">  &quot;active_shards_percent_as_number&quot;: 87.38912795292877</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>查看为分配的shard</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET _cat/shards?v</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">index                             shard prirep state</div><div class="line">yp_zg_171012-00_yp35              2     r      UNASSIGNED                                   </div><div class="line">yp_zg_171012-00_yp35              4     r      UNASSIGNED                                   </div><div class="line">yp_zg_171012-00_yp35              0     r      UNASSIGNED</div></pre></td></tr></table></figure>
<p>执行恢复语句</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">POST /_cluster/reroute</div><div class="line">&#123;</div><div class="line">	<span class="string">"commands"</span>: [ </div><div class="line">		&#123;</div><div class="line">  			<span class="string">"allocate_replica"</span>: &#123;</div><div class="line">    			<span class="string">"index"</span>: <span class="string">"yp_zg_171012-00_yp35"</span>,</div><div class="line">    			<span class="string">"shard"</span>: 0,</div><div class="line">    			<span class="string">"node"</span>: <span class="string">"slave1"</span></div><div class="line">  			&#125;</div><div class="line">		&#125;</div><div class="line">	]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果有太多未分配可以写脚本执行：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">user=<span class="string">'elastic'</span></div><div class="line">pass=<span class="string">'changeme'</span></div><div class="line">url=<span class="string">'http://localhost:9200'</span></div><div class="line">file=<span class="string">"./indices.txt"</span></div><div class="line"></div><div class="line"><span class="comment"># 获取未分配的shard</span></div><div class="line">curl <span class="_">-s</span> -u <span class="variable">$user</span>:<span class="variable">$pass</span> <span class="variable">$url</span>/_cat/shards |grep UNASSIGNED  &gt; <span class="variable">$file</span></div><div class="line"></div><div class="line"><span class="comment"># 恢复的节点名</span></div><div class="line">arr=(master1 master2)</div><div class="line"></div><div class="line"><span class="comment"># 循环读取文件</span></div><div class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</div><div class="line"><span class="keyword">do</span></div><div class="line">        index=`<span class="built_in">echo</span> <span class="variable">$line</span> |awk <span class="string">'&#123;print $1&#125;'</span>`</div><div class="line">        shard=`<span class="built_in">echo</span> <span class="variable">$line</span> |awk <span class="string">'&#123;print $2&#125;'</span>`</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;arr[@]&#125;</span>;<span class="keyword">do</span></div><div class="line">	        curl -XPOST -u <span class="variable">$user</span>:<span class="variable">$pass</span> <span class="variable">$url</span>/_cluster/reroute <span class="_">-d</span> <span class="string">'&#123;</span></div><div class="line">	                "commands": [ &#123;</div><div class="line">	                        "allocate_replica": &#123;</div><div class="line">	                                "index": "'<span class="variable">$index</span><span class="string">'",</span></div><div class="line">	                                "shard": "'<span class="variable">$shard</span><span class="string">'",</span></div><div class="line">	                                "node": "'<span class="variable">$&#123;i&#125;</span><span class="string">'"</span></div><div class="line">	                        &#125;</div><div class="line">	                &#125; ]</div><div class="line">	        &#125;'</div><div class="line">        <span class="keyword">done</span></div><div class="line">        sleep 3</div><div class="line"><span class="keyword">done</span> &lt; <span class="variable">$file</span></div></pre></td></tr></table></figure>
<p>当然还有其他办法恢复，具体详情请借鉴<a href="http://www.jianshu.com/p/542ed5a5bdfc" target="_blank" rel="external">这里</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题1&quot;&gt;&lt;a href=&quot;#问题1&quot; class=&quot;headerlink&quot; title=&quot;问题1&quot;&gt;&lt;/a&gt;问题1&lt;/h3&gt;&lt;h4 id=&quot;logstash-启动报错如下：&quot;&gt;&lt;a href=&quot;#logstash-启动报错如下：&quot; class=&quot;headerlink&quot; title=&quot;logstash 启动报错如下：&quot;&gt;&lt;/a&gt;logstash 启动报错如下：&lt;/h4&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[2017-09-27T15:49:05,406][WARN ][logstash.inputs.file     ] failed to open /vol2/ZT2/170927-02/SessionServer-YP06/statobjscenesserver34.log.170927-02: Permission denied - /vol2/ZT2/170927-02/SessionServer-YP06/statobjscenesserver34.log.170927-02&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[2017-09-27T15:49:05,407][WARN ][logstash.inputs.file     ] failed to open /vol2/ZT2/170927-02/SessionServer-YP06/statobjsessionserver.log.170927-02: Permission denied - /vol2/ZT2/170927-02/SessionServer-YP06/statobjsessionserver.log.170927-02&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="ELK" scheme="http://www.cenhq.com/categories/ELK/"/>
    
    
      <category term="elasticsearch" scheme="http://www.cenhq.com/tags/elasticsearch/"/>
    
      <category term="logstash" scheme="http://www.cenhq.com/tags/logstash/"/>
    
      <category term="kibana" scheme="http://www.cenhq.com/tags/kibana/"/>
    
  </entry>
  
  <entry>
    <title>ELK 安装配置</title>
    <link href="http://www.cenhq.com/2017/09/19/elk-installation-configuration/"/>
    <id>http://www.cenhq.com/2017/09/19/elk-installation-configuration/</id>
    <published>2017-09-19T07:39:54.000Z</published>
    <updated>2017-09-19T07:44:34.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p><a href="https://www.elastic.co/cn/downloads" target="_blank" rel="external">下载地址</a> </p>
<p>当前版本使用的全部是 5.6.0</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="elasticsearch-配置"><a href="#elasticsearch-配置" class="headerlink" title="elasticsearch 配置"></a>elasticsearch 配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ tar xf elasticsearch-5.6.0.tar.gz</div><div class="line">$ <span class="built_in">cd</span>  elasticsearch-5.6.0</div><div class="line">$ vim config/jvm.options</div><div class="line"><span class="comment"># 根据自己的服务器的内存定义此大小</span></div><div class="line">-Xms32g</div><div class="line">-Xmx32g</div></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>注意： 由于运行<code>elasticsearch</code> 需要普通用户，所以这里要创建个普通用户</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ useradd elk</div><div class="line">$ su elk</div><div class="line"><span class="comment"># 启动服务</span></div><div class="line">$ bin/elasticseach</div></pre></td></tr></table></figure>
<p>测试</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ curl http://127.0.0.1:9200 -u admin:xxxxxx</div><div class="line">  <span class="string">"name"</span> : <span class="string">"sUOfDTU"</span>,</div><div class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elasticsearch"</span>,</div><div class="line">  <span class="string">"cluster_uuid"</span> : <span class="string">"48mAG5SaTAuI-ajfh5cPxw"</span>,</div><div class="line">  <span class="string">"version"</span> : &#123;</div><div class="line">    <span class="string">"number"</span> : <span class="string">"5.6.0"</span>,</div><div class="line">    <span class="string">"build_hash"</span> : <span class="string">"781a835"</span>,</div><div class="line">    <span class="string">"build_date"</span> : <span class="string">"2017-09-07T03:09:58.087Z"</span>,</div><div class="line">    <span class="string">"build_snapshot"</span> : <span class="literal">false</span>,</div><div class="line">    <span class="string">"lucene_version"</span> : <span class="string">"6.6.0"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"tagline"</span> : <span class="string">"You Know, for Search"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="logstash-配置"><a href="#logstash-配置" class="headerlink" title="logstash 配置"></a>logstash 配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div></pre></td><td class="code"><pre><div class="line">$ tar xf logstash-5.6.0.tar.gz</div><div class="line">$ <span class="built_in">cd</span> logstash-5.6.0</div><div class="line">$ vim config/logstash.yml</div><div class="line"><span class="comment"># 启用转义符, 由于日志的字段不同，所以我需要先用"\t"分割，然后用" "分割，具体操作，下面有详细配置</span></div><div class="line">config.support_escapes: <span class="literal">true</span></div><div class="line"></div><div class="line">$ vim conf/logstash.conf</div><div class="line">input &#123;</div><div class="line">  file &#123;</div><div class="line">    <span class="comment">#path =&gt; "/var/log/xx/useract_server.log*"</span></div><div class="line">    <span class="comment"># 文件源</span></div><div class="line">    path =&gt; <span class="string">"/10.29.212.58/00-00-ac-1d-d4-3a/tmp/AppServer06-XX2/log/useract_server.log*"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">filter &#123;</div><div class="line">  grok &#123;</div><div class="line">    <span class="comment"># 匹配文件名</span></div><div class="line">    match =&gt; [<span class="string">"path"</span>, <span class="string">"(?&lt;filename&gt;useract_server.log.\d&#123;6&#125;-\d&#123;2&#125;$)"</span>]</div><div class="line">  &#125;</div><div class="line">  <span class="comment"># 分割后添加字段</span></div><div class="line">  mutate &#123;</div><div class="line">     split =&gt; [<span class="string">"message"</span>, <span class="string">"\t"</span>]</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"tmp"</span> =&gt; <span class="string">"%&#123;[message][0]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"accid"</span> =&gt; <span class="string">"%&#123;[message][1]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"user_control_obj_type"</span> =&gt; <span class="string">"%&#123;[message][2]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"charid"</span> =&gt; <span class="string">"%&#123;[message][3]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"char_name"</span> =&gt; <span class="string">"%&#123;[message][4]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"number_ip"</span> =&gt; <span class="string">"%&#123;[message][5]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"level"</span> =&gt; <span class="string">"%&#123;[message][6]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"zone_id"</span> =&gt; <span class="string">"%&#123;[message][7]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"one_level_camp"</span> =&gt; <span class="string">"%&#123;[message][8]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"map_name"</span> =&gt; <span class="string">"%&#123;[message][9]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"map_detail"</span> =&gt; <span class="string">"%&#123;[message][10]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"x_coord"</span> =&gt; <span class="string">"%&#123;[message][11]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"y_coord"</span> =&gt; <span class="string">"%&#123;[message][12]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"z_coord"</span> =&gt; <span class="string">"%&#123;[message][13]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"operation_type"</span> =&gt; <span class="string">"%&#123;[message][14]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"operation_way"</span> =&gt; <span class="string">"%&#123;[message][15]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"operation_detail"</span> =&gt; <span class="string">"%&#123;[message][16]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"cluster_server_id"</span> =&gt; <span class="string">"%&#123;[message][17]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"result_object_type"</span> =&gt; <span class="string">"%&#123;[message][18]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"result_object_id"</span> =&gt; <span class="string">"%&#123;[message][-5]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"result_object_name"</span> =&gt; <span class="string">"%&#123;[message][-4]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"result_object_detail"</span> =&gt; <span class="string">"%&#123;[message][-3]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"result_type"</span> =&gt; <span class="string">"%&#123;[message][-2]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"result_count"</span> =&gt; <span class="string">"%&#123;[message][-1]&#125;"</span></div><div class="line">     &#125;</div><div class="line">   &#125;</div><div class="line">   mutate &#123;</div><div class="line">     split =&gt; [<span class="string">"tmp"</span>, <span class="string">" "</span>]</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"logdate"</span> =&gt; <span class="string">"%&#123;[tmp][0]&#125;"</span></div><div class="line">     &#125;</div><div class="line">     add_field =&gt; &#123;</div><div class="line">       <span class="string">"game_id"</span> =&gt; <span class="string">"%&#123;[tmp][2]&#125;"</span></div><div class="line">     &#125;</div><div class="line">   &#125;</div><div class="line">  <span class="comment"># 转换字段类型</span></div><div class="line">  mutate &#123;</div><div class="line">    convert =&gt; &#123;</div><div class="line">      <span class="string">"accid"</span> =&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"user_control_obj_type"</span> =&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"charid"</span> =&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"number_ip"</span> =&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"level"</span> =&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"zone_id"</span>	=&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"one_level_camp"</span> =&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"x_coord"</span>	=&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"y_coord"</span>	=&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"z_coord"</span>	=&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"cluster_server_id"</span>	=&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"result_object_type"</span>	=&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"result_object_id"</span>	=&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"result_type"</span>	=&gt; <span class="string">"integer"</span></div><div class="line">      <span class="string">"result_count"</span>	=&gt; <span class="string">"integer"</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="comment"># 日期格式</span></div><div class="line">  date &#123;</div><div class="line">    match =&gt; [<span class="string">"logdate"</span>, <span class="string">"yyMMdd-HH:mm:ss"</span>]</div><div class="line">    target =&gt; <span class="string">"logdate"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 输出到es, 由于安装了x-pack插件，所以配置了用户和密码</span></div><div class="line">output &#123;</div><div class="line">  elasticsearch &#123;</div><div class="line">    hosts =&gt; [<span class="string">"127.0.0.1:9200"</span>]</div><div class="line">    user =&gt; <span class="string">"admin"</span></div><div class="line">    password =&gt; <span class="string">"xxxxxx"</span></div><div class="line">    <span class="comment"># 自定义索引名</span></div><div class="line">    index =&gt; <span class="string">"xx2-%&#123;filename&#125;"</span></div><div class="line">  &#125;</div><div class="line">  <span class="comment">#stdout &#123;</span></div><div class="line">  <span class="comment">#  codec =&gt; rubydebug</span></div><div class="line">  <span class="comment">#&#125;</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 启动服务</span></div><div class="line"></div><div class="line">$ bin/logstash <span class="_">-f</span> config/logstash.conf</div></pre></td></tr></table></figure>
<h4 id="kibana配置"><a href="#kibana配置" class="headerlink" title="kibana配置"></a>kibana配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ tar xf kibana-5.6.0-linux-x86_64.tar.gz</div><div class="line">$ <span class="built_in">cd</span> <span class="built_in">cd</span> kibana-5.6.0-linux-x86_64</div><div class="line">$ vim config/kibana.yml</div><div class="line">server.host: 0.0.0.0</div><div class="line">elasticsearch.url: <span class="string">"http://127.0.0.1:9200"</span></div><div class="line"></div><div class="line"><span class="comment"># 启动服务</span></div><div class="line">$ bin/kibana</div></pre></td></tr></table></figure>
<h4 id="安装x-pack插件"><a href="#安装x-pack插件" class="headerlink" title="安装x-pack插件"></a>安装x-pack插件</h4><p>由于安装太慢，所以这里翻墙后下载后，上传到服务器里</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget https://artifacts.elastic.co/downloads/kibana-plugins/x-pack/x-pack-5.6.0.zip</div></pre></td></tr></table></figure>
<blockquote>
<p>注意：集群中的每台 Elasticsearch 都是需要安装的，  Kibana服务器上也同样需要安装</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ bin//elasticsearch-plugin install /usr/<span class="built_in">local</span>/src/x-pack-5.6.0.zip</div><div class="line"></div><div class="line">$ bin/kibana-plugin install /usr/<span class="built_in">local</span>/src/x-pack-5.6.0.zip</div></pre></td></tr></table></figure>
<h3 id="页面设置"><a href="#页面设置" class="headerlink" title="页面设置"></a>页面设置</h3><p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lkvlcN6Fb9fMfE7ZbRKC9XcC-0Gp.jpeg" alt="file"></p>
<p>登录账号默认用户<code>elastic</code>, 默认密码<code>changeme</code>,登录后建议修改密码。</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lkU9rWE5ydCrouiT8V96YHAza85f.jpeg" alt="file"></p>
<p>创建Index</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/llc5laxnQxEqcFIYTnk1k2kVrv2c.jpeg" alt="file"></p>
<p>发现数据</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lmFHpZI9UsAI8NZIaBrrbkfXnWFl.jpeg" alt="file"></p>
<h3 id="supervisord配置"><a href="#supervisord配置" class="headerlink" title="supervisord配置"></a>supervisord配置</h3><p>使用supervisord管理服务</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">$ yum install -y supervisord</div><div class="line"></div><div class="line"><span class="comment"># 配置</span></div><div class="line">$ vim /etc/supervisord.conf</div><div class="line"></div><div class="line">[program:logstash]</div><div class="line"><span class="built_in">command</span> = /usr/<span class="built_in">local</span>/src/logstash-5.6.0/bin/logstash <span class="_">-f</span> /usr/<span class="built_in">local</span>/src/logstash-5.6.0/config/logstash.conf -w 40 -b 2000</div><div class="line">autostart = <span class="literal">true</span></div><div class="line">autorestart = <span class="literal">true</span></div><div class="line">startsecs = 5</div><div class="line">startretries = 3</div><div class="line">user = root</div><div class="line">redirect_stderr = <span class="literal">true</span></div><div class="line">stdout_logfile = /var/<span class="built_in">log</span>/elk/logstash-std.log</div><div class="line">stderr_logfile = /var/<span class="built_in">log</span>/elk/logstash-err.log</div><div class="line"></div><div class="line">[program:elasticsearch]</div><div class="line"><span class="built_in">command</span>=/usr/<span class="built_in">local</span>/src/elasticsearch-5.6.0/bin/elasticsearch</div><div class="line">autostart = <span class="literal">true</span></div><div class="line">autorestart = <span class="literal">true</span></div><div class="line">startsecs = 5</div><div class="line">startretries = 3</div><div class="line">user = elk</div><div class="line">redirect_stderr = <span class="literal">true</span></div><div class="line">stdout_logfile = /var/<span class="built_in">log</span>/elk/elasticsearch-std.log</div><div class="line">stderr_logfile = /var/<span class="built_in">log</span>/elk/elasticsearch-err.log</div><div class="line"></div><div class="line">[program:kibana]</div><div class="line"><span class="built_in">command</span>=/usr/<span class="built_in">local</span>/src/kibana-5.6.0-linux-x86_64/bin/kibana</div><div class="line">autostart = <span class="literal">true</span></div><div class="line">autorestart = <span class="literal">true</span></div><div class="line">startsecs = 5</div><div class="line">startretries = 3</div><div class="line">user = root</div><div class="line">redirect_stderr = <span class="literal">true</span></div><div class="line">stdout_logfile = /var/<span class="built_in">log</span>/elk/kibana-std.log</div><div class="line">stderr_logfile = /var/<span class="built_in">log</span>/elk/kibana-err.log</div></pre></td></tr></table></figure>
<p>启动服务</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ /etc/init.d/supervisord start</div><div class="line">$ supervisorctl status</div><div class="line">elasticsearch  RUNNING    pid 87134, uptime 4:31:22</div><div class="line">kibana             RUNNING    pid 87136, uptime 4:31:22</div><div class="line">logstash          RUNNING    pid 87135, uptime 4:31:22</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;下载安装包&quot;&gt;&lt;a href=&quot;#下载安装包&quot; class=&quot;headerlink&quot; title=&quot;下载安装包&quot;&gt;&lt;/a&gt;下载安装包&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/cn/downloads&quot;&gt;下载地址&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;当前版本使用的全部是 5.6.0&lt;/p&gt;
&lt;h3 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h3&gt;&lt;h4 id=&quot;elasticsearch-配置&quot;&gt;&lt;a href=&quot;#elasticsearch-配置&quot; class=&quot;headerlink&quot; title=&quot;elasticsearch 配置&quot;&gt;&lt;/a&gt;elasticsearch 配置&lt;/h4&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar xf elasticsearch-5.6.0.tar.gz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;  elasticsearch-5.6.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ vim config/jvm.options&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 根据自己的服务器的内存定义此大小&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-Xms32g&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-Xmx32g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.cenhq.com/categories/Linux/"/>
    
    
      <category term="elasticsearch" scheme="http://www.cenhq.com/tags/elasticsearch/"/>
    
      <category term="logstash" scheme="http://www.cenhq.com/tags/logstash/"/>
    
      <category term="kibana" scheme="http://www.cenhq.com/tags/kibana/"/>
    
  </entry>
  
  <entry>
    <title>使用 GitHub Issues 搭建 hexo 评论系统</title>
    <link href="http://www.cenhq.com/2017/07/25/using-github-issues-to-build-hexo-review-system/"/>
    <id>http://www.cenhq.com/2017/07/25/using-github-issues-to-build-hexo-review-system/</id>
    <published>2017-07-25T03:00:41.000Z</published>
    <updated>2017-07-25T03:15:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><code>Gitment</code> 是作者实现的一款基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。</p>
<p>本博客评论系统已迁移至 Gitment。虽然 Gitment 只能使用 GitHub 账号进行评论，但考虑到博客受众，这是可以接受的。</p>
<a id="more"></a>
<ul>
<li><a href="#https://github.com/imsun/gitment">项目地址</a></li>
<li><a href="#https://imsun.github.io/gitment/">示例页面</a></li>
</ul>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="安装Gitment"><a href="#安装Gitment" class="headerlink" title="安装Gitment"></a>安装Gitment</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install --save gitment</div></pre></td></tr></table></figure>
<h4 id="注册OAuth-Application"><a href="#注册OAuth-Application" class="headerlink" title="注册OAuth Application"></a>注册OAuth Application</h4><p><a href="#https://github.com/settings/applications/new">点击此处</a> 来注册一个新的 <code>OAuth Application</code>。其他内容可以随意填写，但要确保填入正确的 <code>callback URL</code>（一般是评论页面对应的域名，如 <a href="http://www.cenhq.com）。" target="_blank" rel="external">http://www.cenhq.com）。</a></p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lufytVWddvvXAvXLrC9JksD8cjIB.jpeg" alt="file"></p>
<p>你会得到一个 <code>client ID</code> 和一个 <code>client secret</code>，这个将被用于之后的用户登录。</p>
<h4 id="引入Gitment"><a href="#引入Gitment" class="headerlink" title="引入Gitment"></a>引入Gitment</h4><p>将下面的代码添加到你的页面：</p>
<blockquote>
<p>我使用的主题是hexo，插入的文件是<code>themes/next/layout/_partials/comments.swig</code></p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;div id=<span class="string">"container"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://imsun.github.io/gitment/style/default.css"</span>&gt;</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://imsun.github.io/gitment/dist/gitment.browser.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script&gt;</div><div class="line"><span class="keyword">var</span> gitment = <span class="keyword">new</span> Gitment(&#123;</div><div class="line">  <span class="attr">id</span>: <span class="string">'页面 ID'</span>, <span class="comment">// 可选。默认为 location.href</span></div><div class="line">  owner: <span class="string">'你的 GitHub ID'</span>,</div><div class="line">  <span class="attr">repo</span>: <span class="string">'存储评论的 repo'</span>,</div><div class="line">  <span class="attr">oauth</span>: &#123;</div><div class="line">    <span class="attr">client_id</span>: <span class="string">'你的 client ID'</span>,</div><div class="line">    <span class="attr">client_secret</span>: <span class="string">'你的 client secret'</span>,</div><div class="line">  &#125;,</div><div class="line">&#125;)</div><div class="line">gitment.render(<span class="string">'container'</span>)</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<h4 id="初始化评论"><a href="#初始化评论" class="headerlink" title="初始化评论"></a>初始化评论</h4><p>页面发布后，你需要访问页面并使用你的 <code>GitHub</code> 账号登录（请确保你的账号是第二步所填 <code>repo</code> 的 <code>owner</code>），点击初始化按钮。<br>之后其他用户即可在该页面发表评论。</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lruREySo573TKL3_Vz93Cm1G0Wqg.jpeg" alt="file"></p>
<p>测试后可在github issues中可见评论内容</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/llkAeZwsO9_6mvk2xzv9T0FGp-Zq.jpeg" alt="file"></p>
<h3 id="自定义主题"><a href="#自定义主题" class="headerlink" title="自定义主题"></a>自定义主题</h3><p>Gitment 很容易进行自定义，你可以写一份自定义的 CSS 或者使用一个新的主题。（主题可以改变 DOM 结构而自定义 CSS 不能）</p>
<p>比如你可以通过自定义主题将评论框放在评论列表前面：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> myTheme = &#123;</div><div class="line">  render(state, instance) &#123;</div><div class="line">    <span class="keyword">const</span> container = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>)</div><div class="line">    container.lang = <span class="string">"en-US"</span></div><div class="line">    container.className = <span class="string">'gitment-container gitment-root-container'</span></div><div class="line">    container.appendChild(instance.renderHeader(state, instance))</div><div class="line">    container.appendChild(instance.renderEditor(state, instance))</div><div class="line">    container.appendChild(instance.renderComments(state, instance))</div><div class="line">    container.appendChild(instance.renderFooter(state, instance))</div><div class="line">    <span class="keyword">return</span> container</div><div class="line">  &#125;,</div><div class="line">&#125;</div><div class="line"><span class="keyword">const</span> gitment = <span class="keyword">new</span> Gitment(&#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  theme: myTheme,</div><div class="line">&#125;)</div><div class="line">gitment.render(<span class="string">'container'</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Gitment&lt;/code&gt; 是作者实现的一款基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。&lt;/p&gt;
&lt;p&gt;本博客评论系统已迁移至 Gitment。虽然 Gitment 只能使用 GitHub 账号进行评论，但考虑到博客受众，这是可以接受的。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.cenhq.com/categories/Hexo/"/>
    
    
      <category term="Gitment" scheme="http://www.cenhq.com/tags/Gitment/"/>
    
      <category term="comment" scheme="http://www.cenhq.com/tags/comment/"/>
    
  </entry>
  
  <entry>
    <title>Laravel Passport 使用</title>
    <link href="http://www.cenhq.com/2017/07/19/laravel-passport-usage/"/>
    <id>http://www.cenhq.com/2017/07/19/laravel-passport-usage/</id>
    <published>2017-07-19T13:32:01.000Z</published>
    <updated>2017-07-19T05:33:40.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>在 Laravel 中，实现基于传统表单的登陆和授权已经非常简单，但是如何满足 API 场景下的授权需求呢？在 API 场景里通常通过令牌来实现用户授权，而非维护请求之间的 Session 状态。现在 Laravel 项目中可以使用 Passport 轻而易举地实现 API 授权过程，通过 Passport 可以在几分钟之内为你的应用程序添加完整的 OAuth2 服务端实现。 Passport 基于<code>League OAuth2 server</code> 实现。<br><a id="more"></a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>使用 Composer 依赖包管理器安装 Passport ：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer require laravel/passport</div></pre></td></tr></table></figure>
<p>接下来，将 Passport 的服务提供者注册到配置文件 <code>config/app.php</code> 的 <code>providers</code> 数组中：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Laravel\Passport\PassportServiceProvider::class,</div></pre></td></tr></table></figure>
<p>Passport 使用服务提供者注册内部的数据库迁移脚本目录，所以上一步完成后，你需要更新你的数据库结构。Passport 的迁移脚本会自动创建应用程序需要的客户端数据表和令牌数据表：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php artisan migrate</div></pre></td></tr></table></figure>
<p>接下来，你需要运行 <code>passport:install</code>命令来创建生成安全访问令牌时用到的加密密钥，同时，这条命令也会创建「私人访问」客户端和「密码授权」客户端：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php artisan passport:install</div></pre></td></tr></table></figure>
<p>上面命令执行后，请将<code>Laravel\Passport\HasApiTokens</code> Trait 添加到<code>App\User</code>模型中，这个 Trait 会给你的模型提供一些辅助函数，用于检查已认证用户的令牌和使用作用域：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Passport</span>\<span class="title">HasApiTokens</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Notifiable</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Auth</span>\<span class="title">User</span> <span class="title">as</span> <span class="title">Authenticatable</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Authenticatable</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">use</span> <span class="title">HasApiTokens</span>, <span class="title">Notifiable</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接下来，需要在 <code>AuthServiceProvider</code>的 <code>boot</code> 方法中调用 <code>Passport::routes</code> 函数。这个函数会注册一些在访问令牌、客户端、私人访问令牌的发放和吊销过程中会用到的必要路由：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Providers</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Passport</span>\<span class="title">Passport</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Gate</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Support</span>\<span class="title">Providers</span>\<span class="title">AuthServiceProvider</span> <span class="title">as</span> <span class="title">ServiceProvider</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * The policy mappings for the application.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@var</span> array</div><div class="line">     */</div><div class="line">    <span class="keyword">protected</span> $policies = [</div><div class="line">        <span class="string">'App\Model'</span> =&gt; <span class="string">'App\Policies\ModelPolicy'</span>,</div><div class="line">    ];</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Register any authentication / authorization services.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;registerPolicies();</div><div class="line"></div><div class="line">        Passport::routes();</div><div class="line"></div><div class="line">        <span class="comment">//令牌有效期</span></div><div class="line">        Passport::tokensExpireIn(Carbon::now()-&gt;addDays(<span class="number">15</span>));</div><div class="line"></div><div class="line">        Passport::refreshTokensExpireIn(Carbon::now()-&gt;addDays(<span class="number">30</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后，需要将配置文件 <code>config/auth.php</code> 中 <code>api</code> 部分的授权保护项（ <code>driver</code> ）改为 <code>passport</code>。此调整会让你的应用程序在接收到 API 的授权请求时使用 Passport 的 <code>TokenGuard</code>来处理：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="string">'guards'</span> =&gt; [</div><div class="line">    <span class="string">'web'</span> =&gt; [</div><div class="line">        <span class="string">'driver'</span> =&gt; <span class="string">'session'</span>,</div><div class="line">        <span class="string">'provider'</span> =&gt; <span class="string">'users'</span>,</div><div class="line">    ],</div><div class="line"></div><div class="line">    <span class="string">'api'</span> =&gt; [</div><div class="line">        <span class="string">'driver'</span> =&gt; <span class="string">'passport'</span>,</div><div class="line">        <span class="string">'provider'</span> =&gt; <span class="string">'users'</span>,</div><div class="line">    ],</div><div class="line">],</div></pre></td></tr></table></figure>
<h3 id="创建认证方法"><a href="#创建认证方法" class="headerlink" title="创建认证方法"></a>创建认证方法</h3><p>官方文档中针对如何简单使用做了初步介绍，下面我试着构造一个完整的客户端授权流程，首先创建<code>ApiController</code>：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php artisen make:controller Frontend/ApiController</div></pre></td></tr></table></figure>
<p>在<code>ApiController</code>中引入<code>AuthenticatesUsers</code>模块，客户端需要通过密码授权的方式来认证，我们需要在<code>ApiController</code>中重写<code>AuthenticatesUsers</code>部分功能函数来实现整个完整的授权流程,在这里我们调用Passport提供的<code>oauth/token</code>接口：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Frontend</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Auth</span>\<span class="title">AuthenticatesUsers</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Controller</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApiController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">use</span> <span class="title">AuthenticatesUsers</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line"><span class="comment">//        $this-&gt;middleware('api');</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//调用认证接口获取授权码</span></div><div class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">authenticateClient</span><span class="params">(Request $request)</span></span></div><div class="line">    &#123;</div><div class="line">        $credentials = <span class="keyword">$this</span>-&gt;credentials($request);</div><div class="line"></div><div class="line">        $data = $request-&gt;all();</div><div class="line"></div><div class="line">        $request-&gt;request-&gt;add([</div><div class="line">            <span class="string">'grant_type'</span> =&gt; $data[<span class="string">'grant_type'</span>],</div><div class="line">            <span class="string">'client_id'</span> =&gt; $data[<span class="string">'client_id'</span>],</div><div class="line">            <span class="string">'client_secret'</span> =&gt; $data[<span class="string">'client_secret'</span>],</div><div class="line">            <span class="string">'username'</span> =&gt; $credentials[<span class="string">'email'</span>],</div><div class="line">            <span class="string">'password'</span> =&gt; $credentials[<span class="string">'password'</span>],</div><div class="line">            <span class="string">'scope'</span> =&gt; <span class="string">''</span></div><div class="line">        ]);</div><div class="line"></div><div class="line">        $proxy = Request::create(</div><div class="line">            <span class="string">'oauth/token'</span>,</div><div class="line">            <span class="string">'POST'</span></div><div class="line">        );</div><div class="line"></div><div class="line">        $response = \Route::dispatch($proxy);</div><div class="line"></div><div class="line">        <span class="keyword">return</span> $response;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//以下为重写部分</span></div><div class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">authenticated</span><span class="params">(Request $request)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;authenticateClient($request);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">sendLoginResponse</span><span class="params">(Request $request)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;clearLoginAttempts($request);</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;authenticated($request);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">sendFailedLoginResponse</span><span class="params">(Request $request)</span></span></div><div class="line">    &#123;</div><div class="line">        $msg = $request[<span class="string">'errors'</span>];</div><div class="line">        $code = $request[<span class="string">'code'</span>];</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;returnJson($code, <span class="string">''</span>, $msg);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>User.php</code>模型中定义授权用户名</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">findFOrPassport</span><span class="params">($email)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::where(<span class="string">'email'</span>, $email)-&gt;first();</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="创建登录方法"><a href="#创建登录方法" class="headerlink" title="创建登录方法"></a>创建登录方法</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php artisan make:controller Frontend/LoginController</div></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Frontend</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">User</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Controller</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Validator</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> <span class="keyword">extends</span> <span class="title">ApiController</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">username</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">'email'</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">(Request $request)</span></span></div><div class="line">    &#123;</div><div class="line">        $validator = Validator::make($request-&gt;all(), [</div><div class="line">            <span class="string">'email'</span> =&gt; <span class="string">'required|exists:users'</span>,</div><div class="line">            <span class="string">'password'</span>  =&gt;  <span class="string">'required|between:6,32'</span>,</div><div class="line">        ]);</div><div class="line"></div><div class="line">        <span class="keyword">if</span>($validator-&gt;fails()) &#123;</div><div class="line">            $request-&gt;request-&gt;add([</div><div class="line">                <span class="string">'errors'</span>    =&gt;  $validator-&gt;errors()-&gt;toArray(),</div><div class="line">                <span class="string">'code'</span>  =&gt;  <span class="number">401</span>,</div><div class="line">            ]);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;sendFailedLoginResponse($request);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        $credentials = <span class="keyword">$this</span>-&gt;credentials($request);</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;guard(<span class="string">'api'</span>)-&gt;attempt($credentials, $request-&gt;has(<span class="string">'remember'</span>))) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;sendLoginResponse($request);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;returnJson(<span class="number">401</span>, <span class="string">''</span>, <span class="string">'登录失败'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="创建路由"><a href="#创建路由" class="headerlink" title="创建路由"></a>创建路由</h3><p>最后<code>routes/api.php</code>中加入我们需要的路由：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//登录</span></div><div class="line">Route::group([<span class="string">'prefix'</span> =&gt; <span class="string">'auth'</span>, <span class="string">'namespace'</span> =&gt; <span class="string">'Frontend'</span>, <span class="string">'middleware'</span> =&gt; [<span class="string">'api'</span>]], <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</div><div class="line">    Route::post(<span class="string">'login'</span>, <span class="string">'LoginController@login'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//获取数据</span></div><div class="line">Route::group([<span class="string">'prefix'</span> =&gt; <span class="string">'post'</span>, <span class="string">'namespace'</span> =&gt; <span class="string">'Frontend'</span>, <span class="string">'middleware'</span> =&gt; <span class="string">'auth:api'</span>], <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</div><div class="line">    Route::get(<span class="string">'getPosts'</span>, <span class="string">'PostsController@index'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>postman 中调用接口</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/liH-FOri3LjAoTyu9YtXpqa8R28R.jpeg" alt="file"></p>
<p>通过<code>access_token</code>获取数据<br><img src="http://7xlxn7.com1.z0.glb.clouddn.com/ltRGbC4d6eIF6BMj4Ud3yAzUNMc4.jpeg" alt="file"></p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>错误1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">You must set the encryption key going forward to improve the security of this library - see this page for more information https://oauth2.thephpleague.com/v5-security-improvements/</div></pre></td></tr></table></figure></p>
<p>解决：<br>修改<code>comporse.json</code> 文件</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">"laravel/passport": "^3.0",`</div></pre></td></tr></table></figure>
<p>执行<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ comporse update</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;在 Laravel 中，实现基于传统表单的登陆和授权已经非常简单，但是如何满足 API 场景下的授权需求呢？在 API 场景里通常通过令牌来实现用户授权，而非维护请求之间的 Session 状态。现在 Laravel 项目中可以使用 Passport 轻而易举地实现 API 授权过程，通过 Passport 可以在几分钟之内为你的应用程序添加完整的 OAuth2 服务端实现。 Passport 基于&lt;code&gt;League OAuth2 server&lt;/code&gt; 实现。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Laravel" scheme="http://www.cenhq.com/categories/Laravel/"/>
    
    
      <category term="Passport" scheme="http://www.cenhq.com/tags/Passport/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 主从复制（内外网）</title>
    <link href="http://www.cenhq.com/2017/06/30/mysql-master-and-slave-replication/"/>
    <id>http://www.cenhq.com/2017/06/30/mysql-master-and-slave-replication/</id>
    <published>2017-06-30T06:04:37.000Z</published>
    <updated>2017-06-30T06:11:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/ll7-S3ymCwBcfZ2a9rCCykTfm2Dk.jpeg" alt="file"></p>
<ul>
<li>master服务器将数据的改变记录二进制日志，当master上的数据发生改变时，则将其改变写入二进制日志中.</li>
<li>salve服务器会在一定时间间隔内对master二进制日志进行探测其是否发生改变，如果发生改变，则开始一个I/OThread请求master二进制事件，同时master节点为每个I/O线程启动一个dump线程，用于向其发送二进制事件，并保存至slave节点本地的中继日志中.</li>
<li>slave节点将启动SQL线程从中继日志中读取二进制日志，在本地重放，使得其数据和master节点的保持一致，最后I/OThread和SQLThread将进入睡眠状态，等待下一次被唤醒。</li>
</ul>
<a id="more"></a>
<h3 id="master-库操作"><a href="#master-库操作" class="headerlink" title="master 库操作"></a>master 库操作</h3><blockquote>
<p>注意： <code>master</code>与<code>slave</code>库的版本需要一致</p>
</blockquote>
<h4 id="master-配置"><a href="#master-配置" class="headerlink" title="master 配置"></a>master 配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/my.cnf</div><div class="line">[mysqld]</div><div class="line"><span class="comment">## 设置server_id，一般设置为IP,注意要唯一</span></div><div class="line">server_id=146</div><div class="line"><span class="comment">### 复制过滤：也就是指定哪个数据库不用同步（mysql库一般不同步）</span></div><div class="line">binlog-ignore-db=mysql</div><div class="line"><span class="comment">### 开启二进制日志功能，可以随便取，最好有含义（关键就是这里了）</span></div><div class="line"><span class="built_in">log</span>-bin=mysql-bin</div><div class="line"><span class="comment">### 为每个session 分配的内存，在事务过程中用来存储二进制日志的缓存</span></div><div class="line">binlog_cache_size=1M</div><div class="line"><span class="comment">### 主从复制的格式（mixed,statement,row，默认格式是statement）</span></div><div class="line">binlog_format=mixed</div><div class="line"><span class="comment">### 二进制日志自动删除/过期的天数。默认值为0，表示不自动删除。</span></div><div class="line">expire_logs_days=7</div><div class="line"><span class="comment">### 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span></div><div class="line"><span class="comment">### 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span></div><div class="line">slave_skip_errors=1062</div></pre></td></tr></table></figure>
<h4 id="master启动服务"><a href="#master启动服务" class="headerlink" title="master启动服务"></a>master启动服务</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ /etc/init.d/mysqld restart</div></pre></td></tr></table></figure>
<h4 id="锁表导数据"><a href="#锁表导数据" class="headerlink" title="锁表导数据"></a>锁表导数据</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; flush  tables  with  read  lock;</div></pre></td></tr></table></figure>
<h4 id="导出数据拷贝"><a href="#导出数据拷贝" class="headerlink" title="导出数据拷贝"></a>导出数据拷贝</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mysqldump -uuser -ppassword dbname &gt; mysql_bak.sql</div><div class="line">$ scp mysql_bak.sql root@server_ip:/data/</div></pre></td></tr></table></figure>
<h4 id="记录pos并解锁"><a href="#记录pos并解锁" class="headerlink" title="记录pos并解锁"></a>记录pos并解锁</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show master status;</div><div class="line">+------------------+----------+--------------+------------------+</div><div class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |</div><div class="line">+------------------+----------+--------------+------------------+</div><div class="line">| mysql-bin.000003 | 29880250 |              | mysql            |</div><div class="line">+------------------+----------+--------------+------------------+</div><div class="line"></div><div class="line">mysql&gt; unlock tables;</div></pre></td></tr></table></figure>
<h4 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; grant replication slave on *.* to 'rep'@'%' identified by '123456';</div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure>
<h3 id="slave库操作"><a href="#slave库操作" class="headerlink" title="slave库操作"></a>slave库操作</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install mysql-server -y</div></pre></td></tr></table></figure>
<h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/my.cnf</div><div class="line"><span class="comment">## 设置server_id，一般设置为IP,注意要唯一</span></div><div class="line">server_id=202</div><div class="line"><span class="comment">### 复制过滤：也就是指定哪个数据库不用同步（mysql库一般不同步）</span></div><div class="line">binlog-ignore-db=mysql</div><div class="line"><span class="comment">### 开启二进制日志功能，以备Slave作为其它Slave的Master时使用</span></div><div class="line"><span class="built_in">log</span>-bin=mysql-bin</div><div class="line"><span class="comment">### 为每个session 分配的内存，在事务过程中用来存储二进制日志的缓存</span></div><div class="line">binlog_cache_size=1M</div><div class="line"><span class="comment">### 主从复制的格式（mixed,statement,row，默认格式是statement）</span></div><div class="line">binlog_format=mixed</div><div class="line"><span class="comment">### 二进制日志自动删除/过期的天数。默认值为0，表示不自动删除。</span></div><div class="line">expire_logs_days=7</div><div class="line"><span class="comment">### 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span></div><div class="line"><span class="comment">### 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span></div><div class="line">slave_skip_errors=1062</div><div class="line"><span class="comment">### relay_log配置中继日志</span></div><div class="line">relay_log=mysql-relay-bin</div><div class="line"><span class="comment">### log_slave_updates表示slave将复制事件写进自己的二进制日志</span></div><div class="line">log_slave_updates=1</div><div class="line"><span class="comment">### 防止改变数据(除了特殊的线程)</span></div><div class="line"><span class="comment">#read_only=1</span></div></pre></td></tr></table></figure>
<h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ /etc/init.d/mysqld start</div></pre></td></tr></table></figure>
<h4 id="创建密码并导入备份数据"><a href="#创建密码并导入备份数据" class="headerlink" title="创建密码并导入备份数据"></a>创建密码并导入备份数据</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mysqladmin -uroot -p password <span class="string">'123456'</span></div><div class="line">$ mysql -uroot -p123456 &lt; mysql_bak.sql</div></pre></td></tr></table></figure>
<h4 id="连主库"><a href="#连主库" class="headerlink" title="连主库"></a>连主库</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST='MASTER_IP',MASTER_USER='rep',MASTER_PASSWORD='123456',MASTER_LOG_FILE='mysql-bin.000003',MASTER_LOG_POS=29880250;</div><div class="line"></div><div class="line">mysql&gt; start slave;</div></pre></td></tr></table></figure>
<h4 id="查看salve状态"><a href="#查看salve状态" class="headerlink" title="查看salve状态"></a>查看salve状态</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show slave status\G</div><div class="line">*************************** 1. row ***************************</div><div class="line">               Slave_IO_State: Waiting for master to send event</div><div class="line">                  Master_Host: 118.194.48.246</div><div class="line">                  Master_User: rep</div><div class="line">                  Master_Port: 3306</div><div class="line">                Connect_Retry: 60</div><div class="line">              Master_Log_File: mysql-bin.000003</div><div class="line">          Read_Master_Log_Pos: 41113925</div><div class="line">               Relay_Log_File: mysql-relay-bin.000007</div><div class="line">                Relay_Log_Pos: 11233926</div><div class="line">        Relay_Master_Log_File: mysql-bin.000003</div><div class="line">             Slave_IO_Running: Yes</div><div class="line">            Slave_SQL_Running: Yes</div><div class="line">              Replicate_Do_DB:</div><div class="line">          Replicate_Ignore_DB:</div><div class="line">           Replicate_Do_Table:</div><div class="line">       Replicate_Ignore_Table:</div><div class="line">      Replicate_Wild_Do_Table:</div><div class="line">  Replicate_Wild_Ignore_Table:</div><div class="line">                   Last_Errno: 0</div><div class="line">                   Last_Error:</div><div class="line">                 Skip_Counter: 0</div><div class="line">          Exec_Master_Log_Pos: 41113925</div><div class="line">              Relay_Log_Space: 12941554</div><div class="line">              Until_Condition: None</div><div class="line">               Until_Log_File:</div><div class="line">                Until_Log_Pos: 0</div><div class="line">           Master_SSL_Allowed: No</div><div class="line">           Master_SSL_CA_File:</div><div class="line">           Master_SSL_CA_Path:</div><div class="line">              Master_SSL_Cert:</div><div class="line">            Master_SSL_Cipher:</div><div class="line">               Master_SSL_Key:</div><div class="line">        Seconds_Behind_Master: 0</div><div class="line">Master_SSL_Verify_Server_Cert: No</div><div class="line">                Last_IO_Errno: 0</div><div class="line">                Last_IO_Error:</div><div class="line">               Last_SQL_Errno: 0</div><div class="line">               Last_SQL_Error:</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<blockquote>
<p>注意：<code>Slave_IO_Running: Yes, Slave_SQL_Running: Yes</code>这两个参数为<code>Yes</code>表示正常。</p>
</blockquote>
<p>========</p>
<h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1:"></a>问题1:</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>由于master库在外网，slave库在内网，当master日志发生变化时，master与slave的连接有时会断开，导致外网的master的binlog无法发送给内网的slave.只有在slave发起连接时才能建立连接，保持日志传输。</p>
<h4 id="master库状态"><a href="#master库状态" class="headerlink" title="master库状态"></a>master库状态</h4><p>此时正在连接中<br><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lhfT7q8JOGAHKCa4D6iJ5QZO5Vbu.jpeg" alt="file"></p>
<h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><p>所以我在slave库上写了个脚本，判断master库的pos与slave库的pos是否一致，如果不一致就重启slave</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">#主数据库配置</span></div><div class="line">master_ip=<span class="string">'118.xx.xxx.xxx'</span></div><div class="line">master_mysql_port=3306</div><div class="line">master_mysql_name=<span class="string">'test1'</span></div><div class="line">master_mysql_user=<span class="string">'root'</span></div><div class="line">master_mysql_password=<span class="string">'123456'</span></div><div class="line"></div><div class="line"><span class="comment">#从数据库配置</span></div><div class="line">slave_ip=<span class="string">'192.168.150.202'</span></div><div class="line">slave_mysql_user=<span class="string">'root'</span></div><div class="line">slave_mysql_password=<span class="string">'123456'</span></div><div class="line">slave_mysql_name=<span class="string">'test2'</span></div><div class="line"></div><div class="line"><span class="built_in">log</span>=<span class="string">'/var/log/slave_restart.log'</span></div><div class="line">dat=`date +%F-%H:%M:%S`</div><div class="line"></div><div class="line"><span class="comment">#连接主库获取master pos</span></div><div class="line">mysql -u<span class="variable">$master_mysql_user</span> -p<span class="variable">$master_mysql_password</span> -h <span class="variable">$master_ip</span> -P <span class="variable">$master_mysql_port</span> <span class="_">-e</span> <span class="string">"use <span class="variable">$master_mysql_name</span>; show master status"</span> &gt; master_pos.txt</div><div class="line"><span class="keyword">if</span> [ $? <span class="_">-eq</span> 0 ]</div><div class="line"><span class="keyword">then</span></div><div class="line">        master_pos=`awk <span class="string">'/^mysql-bin/&#123;print $2&#125;'</span> master_pos.txt`</div><div class="line">        mysql -u<span class="variable">$slave_mysql_user</span> -p<span class="variable">$slave_mysql_password</span> -h <span class="variable">$slave_ip</span> <span class="_">-e</span> <span class="string">"use <span class="variable">$slave_mysql_name</span>; show slave status\G"</span> &gt; slave_pos.txt</div><div class="line">        <span class="keyword">if</span> [ $? <span class="_">-eq</span> 0 ]</div><div class="line">        <span class="keyword">then</span></div><div class="line">                slave_pos=`awk <span class="string">'/Read_Master_Log_Pos/&#123;print $2&#125;'</span> slave_pos.txt`</div><div class="line">                <span class="keyword">if</span> [ <span class="variable">$master_pos</span> != <span class="variable">$slave_pos</span> ]</div><div class="line">                <span class="keyword">then</span></div><div class="line">                        mysql -u<span class="variable">$slave_mysql_user</span> -p<span class="variable">$slave_mysql_password</span> -h <span class="variable">$slave_ip</span> <span class="_">-e</span> <span class="string">"stop slave;start slave"</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">"<span class="variable">$dat</span>---&gt;从库重启成功"</span> &gt;&gt; <span class="variable">$log</span> || <span class="built_in">echo</span> <span class="string">"<span class="variable">$dat</span>---&gt;从库重启失败"</span> &gt;&gt; <span class="variable">$log</span></div><div class="line">                <span class="keyword">fi</span></div><div class="line">        <span class="keyword">fi</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<h4 id="放入计划任务"><a href="#放入计划任务" class="headerlink" title="放入计划任务"></a>放入计划任务</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ crontab <span class="_">-e</span></div><div class="line"><span class="comment">#每五分钟检测从库的pos是否与主库一致，如不一致重启slave</span></div><div class="line">*/5 * * * * /bin/bash /data/scripts/mysql_replication_slave_restart.sh</div></pre></td></tr></table></figure>
<h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ tailf /var/<span class="built_in">log</span>/slave_restart.log</div><div class="line">2017-06-29-17:20:01---&gt;从库重启成功</div><div class="line">2017-06-29-17:30:01---&gt;从库重启成功</div><div class="line">2017-06-29-17:35:01---&gt;从库重启成功</div><div class="line">2017-06-29-17:50:01---&gt;从库重启成功</div><div class="line">2017-06-29-17:55:01---&gt;从库重启成功</div><div class="line">2017-06-29-18:00:01---&gt;从库重启成功</div><div class="line">2017-06-29-18:05:01---&gt;从库重启成功</div><div class="line">2017-06-29-18:10:01---&gt;从库重启成功</div><div class="line">2017-06-29-18:15:01---&gt;从库重启成功</div><div class="line">2017-06-29-18:20:01---&gt;从库重启成功</div></pre></td></tr></table></figure>
<h4 id="查看master-slave的pos是否一致"><a href="#查看master-slave的pos是否一致" class="headerlink" title="查看master,slave的pos是否一致"></a>查看master,slave的pos是否一致</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show master status;</div><div class="line">+------------------+----------+--------------+------------------+</div><div class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |</div><div class="line">+------------------+----------+--------------+------------------+</div><div class="line">| mysql-bin.000003 | 56780950 |              | mysql            |</div><div class="line">+------------------+----------+--------------+------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; show slave status\G</div><div class="line">*************************** 1. row ***************************</div><div class="line">               Slave_IO_State: Waiting for master to send event</div><div class="line">                  Master_Host: 118.xx.xxx.xxx</div><div class="line">                  Master_User: rep</div><div class="line">                  Master_Port: 3306</div><div class="line">                Connect_Retry: 60</div><div class="line">              Master_Log_File: mysql-bin.000003</div><div class="line">          Read_Master_Log_Pos: 56780950</div><div class="line">               Relay_Log_File: mysql-relay-bin.000016</div><div class="line">                Relay_Log_Pos: 441</div><div class="line">        Relay_Master_Log_File: mysql-bin.000003</div><div class="line">             Slave_IO_Running: Yes</div><div class="line">            Slave_SQL_Running: Yes</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xlxn7.com1.z0.glb.clouddn.com/ll7-S3ymCwBcfZ2a9rCCykTfm2Dk.jpeg&quot; alt=&quot;file&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;master服务器将数据的改变记录二进制日志，当master上的数据发生改变时，则将其改变写入二进制日志中.&lt;/li&gt;
&lt;li&gt;salve服务器会在一定时间间隔内对master二进制日志进行探测其是否发生改变，如果发生改变，则开始一个I/OThread请求master二进制事件，同时master节点为每个I/O线程启动一个dump线程，用于向其发送二进制事件，并保存至slave节点本地的中继日志中.&lt;/li&gt;
&lt;li&gt;slave节点将启动SQL线程从中继日志中读取二进制日志，在本地重放，使得其数据和master节点的保持一致，最后I/OThread和SQLThread将进入睡眠状态，等待下一次被唤醒。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Mysql" scheme="http://www.cenhq.com/categories/Mysql/"/>
    
    
      <category term="replication" scheme="http://www.cenhq.com/tags/replication/"/>
    
      <category term="mysql主从" scheme="http://www.cenhq.com/tags/mysql%E4%B8%BB%E4%BB%8E/"/>
    
  </entry>
  
  <entry>
    <title>Laravel/Lumen 5.4 发送邮件</title>
    <link href="http://www.cenhq.com/2017/06/15/laravel-lumen-send-mail/"/>
    <id>http://www.cenhq.com/2017/06/15/laravel-lumen-send-mail/</id>
    <published>2017-06-15T07:47:51.000Z</published>
    <updated>2017-06-15T07:53:45.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="首先注册邮箱"><a href="#首先注册邮箱" class="headerlink" title="首先注册邮箱"></a>首先注册邮箱</h3><p>这里使用163邮箱，个人邮箱需要开启smtp服务</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lqw7xlTgGUbkImUhJ5YsaRdEhz9e.jpeg" alt="file"></p>
<a id="more"></a>
<p>当勾选设置POP3/SMTP/IMAP时提示需要设置授权码，需要跟登录密码区分开。</p>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/lhhxctrfursOE7MYEXUOCWGprsSk.jpeg" alt="file"></p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>编辑<code>.env</code>文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">MAIL_DRIVER=smtp</div><div class="line">MAIL_HOST=smtp.163.com</div><div class="line">MAIL_PORT=465</div><div class="line">MAIL_USERNAME=test@163.com</div><div class="line">MAIL_PASSWORD=******   //这里填写授权码</div><div class="line">MAIL_FROM_ADDRESS=test@163.com</div><div class="line">MAIL_FROM_NAME=test</div><div class="line">MAIL_ENCRYPTION=ssl</div></pre></td></tr></table></figure>
<h3 id="如果是Lumen-需要装mail模块"><a href="#如果是Lumen-需要装mail模块" class="headerlink" title="如果是Lumen 需要装mail模块"></a>如果是Lumen 需要装mail模块</h3><p>修改<code>composer.json</code> 文件中 <code>require</code> 部分配置如下:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">"require": &#123;</div><div class="line">        "php": "&gt;=5.6.9",</div><div class="line">        "laravel/lumen-framework": "5.4.*",</div><div class="line">        "vlucas/phpdotenv": "~2.2",</div><div class="line">        "guzzlehttp/guzzle": "^6.2",</div><div class="line">        "predis/predis": "^1.1",</div><div class="line">        "illuminate/redis": "^5.4",</div><div class="line">        "illuminate/mail":"5.4.*"</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>并运行<code>composer install</code> 来安装 <code>mail</code></p>
<h3 id="创建发送邮件命令"><a href="#创建发送邮件命令" class="headerlink" title="创建发送邮件命令"></a>创建发送邮件命令</h3><p>如果是<code>laravel</code> 直接执行命令，如果是<code>lumen</code>自己创建目录和文件</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ php artisan make:<span class="built_in">command</span> sendMailCommand</div><div class="line">Console <span class="built_in">command</span> created successfully.</div></pre></td></tr></table></figure>
<p>创建后生成此文件 <code>app/Console/Commands/sendMailCommand.php</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Console</span>\<span class="title">Commands</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Console</span>\<span class="title">Command</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Mail</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">sendMailCommand</span> <span class="keyword">extends</span> <span class="title">Command</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * The name and signature of the console command.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@var</span> string</div><div class="line">     */</div><div class="line">    <span class="keyword">protected</span> $signature = <span class="string">'mail:sendMailCommand'</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * The console command description.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@var</span> string</div><div class="line">     */</div><div class="line">    <span class="keyword">protected</span> $description = <span class="string">'发送邮件命令'</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Create a new command instance.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">parent</span>::__construct();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Execute the console command.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> mixed</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        $content = <span class="string">'这是一封来自Laravel的测试邮件.'</span>;</div><div class="line">        $toMail  = <span class="string">'cenhuqing@qq.com'</span>;</div><div class="line"></div><div class="line">        Mail::raw($content, <span class="function"><span class="keyword">function</span> <span class="params">($message)</span> <span class="title">use</span> <span class="params">($toMail)</span> </span>&#123;</div><div class="line">            $message-&gt;subject(<span class="string">'[ 测试 ] 测试邮件SendMail - '</span> .date(<span class="string">'Y-m-d H:i:s'</span>));</div><div class="line">            $message-&gt;to($toMail);</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>将命令加入到 <code>app/Console/Kernel.php</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">protected</span> $commands = [</div><div class="line">        sendMailCommand::class</div><div class="line">];</div></pre></td></tr></table></figure>
<p>执行命令测试</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ php artisan |grep send*</div><div class="line">  mail:sendMailCommand  发送邮件命令</div><div class="line">$ php artisan mail:sendMailCommand                                             </div><div class="line">  [Swift_TransportException]                                                                            </div><div class="line">  Failed to authenticate on SMTP server with username <span class="string">"test@163.com"</span> using 2 possible authenticators</div></pre></td></tr></table></figure>
<blockquote>
<p>注意： 上述执行命令报错，由于验证不通过导致此问题。跟代码没有关系。所以要检查下配置。我在这里找了很久，仍然没有发现错误，最后重置了下授权码后正常。不知道是啥问题。</p>
</blockquote>
<p><img src="http://7xlxn7.com1.z0.glb.clouddn.com/ljYep58a1mqSHTr5P1sNg24gLBWc.jpeg" alt="file"></p>
<blockquote>
<p>问题： 我线上的版本是lumen,每次修改.env配置文件后不会生效，而是使用之前的配置。需要重启后才会生效新配置，不知道是什么原因，也没有配置缓存。如果哪位大神指导请告知下，我的邮箱cenhuqing@gmail.com。 谢谢！</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;首先注册邮箱&quot;&gt;&lt;a href=&quot;#首先注册邮箱&quot; class=&quot;headerlink&quot; title=&quot;首先注册邮箱&quot;&gt;&lt;/a&gt;首先注册邮箱&lt;/h3&gt;&lt;p&gt;这里使用163邮箱，个人邮箱需要开启smtp服务&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xlxn7.com1.z0.glb.clouddn.com/lqw7xlTgGUbkImUhJ5YsaRdEhz9e.jpeg&quot; alt=&quot;file&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Laravel" scheme="http://www.cenhq.com/categories/Laravel/"/>
    
      <category term="Lumen" scheme="http://www.cenhq.com/categories/Laravel/Lumen/"/>
    
    
      <category term="sendMail" scheme="http://www.cenhq.com/tags/sendMail/"/>
    
      <category term="mail" scheme="http://www.cenhq.com/tags/mail/"/>
    
  </entry>
  
  <entry>
    <title>Laravel log 无法写入问题</title>
    <link href="http://www.cenhq.com/2017/05/10/laravel-can-not-write-log/"/>
    <id>http://www.cenhq.com/2017/05/10/laravel-can-not-write-log/</id>
    <published>2017-05-10T09:38:04.000Z</published>
    <updated>2017-05-10T09:40:41.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><p>账号登录报500错误，也没有返回错误信息，没办法只能使用原始方法，到现在一行一行打印。到 <code>Log::info()</code> 后面就无法正常显示了，那么问题就找到了。</p>
<p>导致无法写入日志的问题，是由于代码更新时添加了文件是<code>root</code>用户，所以创建日志文件也是<code>root</code>权限，导致其它用户的<code>www</code>权限无法写入日志文件中。<br><a id="more"></a><br>所以修改<code>storage/logs/</code>的用户权限为<code>www</code></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown www:www storage/logs -R</div></pre></td></tr></table></figure>
<blockquote>
<p>注意：如果用户使用supervisord服务运行队列的话，如果队列里有日志记录，那么运行的用户也需要改成<code>www</code>用户。</p>
</blockquote>
<h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><p>同样是日志无法记录问题，这里是本地环境使用<code>php artisan queue:work --sleep=3 --tries=3</code>运行。</p>
<p>同样在<code>job</code>中写日志，权限也是正确，就是无法记录日志，任务也正常执行。</p>
<p>最后想到重启队列解决此问题，不知道是什么原因导致。如果有知道的同学请告知一声。</p>
<p>重启队列命令</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan queue:restart</div></pre></td></tr></table></figure>
<h3 id="其它与日志无关的问题"><a href="#其它与日志无关的问题" class="headerlink" title="其它与日志无关的问题"></a>其它与日志无关的问题</h3><h4 id="问题1-1"><a href="#问题1-1" class="headerlink" title="问题1"></a>问题1</h4><p>最近在使用 Zizaco\Entrust 这个权限包…</p>
<p>再添加角色的时候… 报了一个错..</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">BadMethodCallException in Repository.php line 391:</div><div class="line">This cache store does not support tagging.</div></pre></td></tr></table></figure>
<p>应该是这个包里 有个地方用了 laravel 的cache,默认的cache是file</p>
<p>把.env 里的 CACHE_DRIVER 改成</p>
<p>CACHE_DRIVER=array</p>
<h4 id="问题2-1"><a href="#问题2-1" class="headerlink" title="问题2"></a>问题2</h4><p>页面出现此错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">View [.] not found.</div></pre></td></tr></table></figure>
<p>解决办法，优化，清除配置缓存，路由缓存</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">php artisan optimize --force</div><div class="line">php artisan config:cache</div><div class="line">php artisan route:cache</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题1&quot;&gt;&lt;a href=&quot;#问题1&quot; class=&quot;headerlink&quot; title=&quot;问题1&quot;&gt;&lt;/a&gt;问题1&lt;/h3&gt;&lt;p&gt;账号登录报500错误，也没有返回错误信息，没办法只能使用原始方法，到现在一行一行打印。到 &lt;code&gt;Log::info()&lt;/code&gt; 后面就无法正常显示了，那么问题就找到了。&lt;/p&gt;
&lt;p&gt;导致无法写入日志的问题，是由于代码更新时添加了文件是&lt;code&gt;root&lt;/code&gt;用户，所以创建日志文件也是&lt;code&gt;root&lt;/code&gt;权限，导致其它用户的&lt;code&gt;www&lt;/code&gt;权限无法写入日志文件中。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="logs" scheme="http://www.cenhq.com/tags/logs/"/>
    
      <category term="queue" scheme="http://www.cenhq.com/tags/queue/"/>
    
      <category term="日志无法写入" scheme="http://www.cenhq.com/tags/%E6%97%A5%E5%BF%97%E6%97%A0%E6%B3%95%E5%86%99%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 数组分页（带搜索功能）</title>
    <link href="http://www.cenhq.com/2017/04/24/laravel-array-use-paginate/"/>
    <id>http://www.cenhq.com/2017/04/24/laravel-array-use-paginate/</id>
    <published>2017-04-24T03:27:32.000Z</published>
    <updated>2017-04-24T03:37:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>由于数据是从mysql和mongodb里的两个表中取数据，并且根据两个表中的字段关联来获取数据，所有没有直接的sql获取。只有通过循环获取。然而获取的数据是数组，无法使用<code>laravel</code>自带的<code>paginate</code>分页方法。下面是解决办法：</p>
<a id="more"></a>
<h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> $name</div><div class="line">     * <span class="doctag">@param</span> $user</div><div class="line">     * <span class="doctag">@return</span> array</div><div class="line">     * 获取所有被拒绝的子任务</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getRejectSubTasks</span><span class="params">($name,$user)</span></span></div><div class="line">    &#123;</div><div class="line">        $data = [];</div><div class="line">        <span class="comment">//未提交的子任务</span></div><div class="line">        $subTask = SubTask::where(<span class="string">'status'</span>,<span class="number">-1</span>)-&gt;get();</div><div class="line">        <span class="comment">//获取所有拒绝的子任务并且去除重复</span></div><div class="line">        $reject = RejectReason::select(<span class="string">'subTaskId'</span>)-&gt;distinct()-&gt;get();</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(!$name &amp;&amp; !$user)&#123;</div><div class="line">            <span class="keyword">foreach</span>($subTask <span class="keyword">as</span> $item)&#123;</div><div class="line">                <span class="keyword">foreach</span>($reject <span class="keyword">as</span> $value)&#123;</div><div class="line">                    <span class="keyword">if</span>($item-&gt;_id == $value-&gt;subTaskId)&#123;</div><div class="line">                        $data[] = Task::where(<span class="string">'taskId'</span>,$item-&gt;taskId)-&gt;first();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>($name)&#123;</div><div class="line">            <span class="keyword">foreach</span>($subTask <span class="keyword">as</span> $item)&#123;</div><div class="line">                <span class="keyword">foreach</span>($reject <span class="keyword">as</span> $value)&#123;</div><div class="line">                    <span class="keyword">if</span>($item-&gt;_id == $value-&gt;subTaskId)&#123;</div><div class="line">                        $data[] = Task::where(<span class="string">'taskId'</span>,$item-&gt;taskId)-&gt;where(<span class="string">'name'</span>,<span class="string">'like'</span>,<span class="string">"%$name%"</span>)-&gt;first();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>($user)&#123;</div><div class="line">            <span class="keyword">foreach</span>($subTask <span class="keyword">as</span> $item)&#123;</div><div class="line">                <span class="keyword">foreach</span>($reject <span class="keyword">as</span> $value)&#123;</div><div class="line">                    <span class="keyword">if</span>($item-&gt;_id == $value-&gt;subTaskId)&#123;</div><div class="line">                        $data[] = Task::where(<span class="string">'taskId'</span>,$item-&gt;taskId)-&gt;where(<span class="string">'user'</span>,<span class="string">'like'</span>,<span class="string">"%$user%"</span>)-&gt;first();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>($name &amp;&amp; $user)&#123;</div><div class="line">            <span class="keyword">foreach</span>($subTask <span class="keyword">as</span> $item)&#123;</div><div class="line">                <span class="keyword">foreach</span>($reject <span class="keyword">as</span> $value)&#123;</div><div class="line">                    <span class="keyword">if</span>($item-&gt;_id == $value-&gt;subTaskId)&#123;</div><div class="line">                        $data[] = Task::where(<span class="string">'taskId'</span>,$item-&gt;taskId)</div><div class="line">                            -&gt;where(<span class="string">'name'</span>,<span class="string">'like'</span>,<span class="string">"%$name%"</span>)</div><div class="line">                            -&gt;where(<span class="string">'user'</span>,<span class="string">'like'</span>,<span class="string">"%$user%"</span>)</div><div class="line">                            -&gt;first();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span>  $data;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="数组分页"><a href="#数组分页" class="headerlink" title="数组分页"></a>数组分页</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@param</span> $searchResults 数组</div><div class="line"> * <span class="doctag">@return</span> LengthAwarePaginator</div><div class="line"> * 给数组分页</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">arrayPage</span><span class="params">($searchResults)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">//获取当前的分页数，就是第6这样的</span></div><div class="line">    $currentPage = LengthAwarePaginator::resolveCurrentPage();</div><div class="line"></div><div class="line">    <span class="comment">//实例化collect方法</span></div><div class="line">    $collection = <span class="keyword">new</span> Collection($searchResults);</div><div class="line"></div><div class="line">    <span class="comment">//定义一下每页显示多少个数据</span></div><div class="line"><span class="comment">//        $perPage = 5;</span></div><div class="line"></div><div class="line">    <span class="comment">//获取当前需要显示的数据列表$currentPage * $this-&gt;prePage</span></div><div class="line">    $currentPageSearchResults = $collection-&gt;slice(($currentPage - <span class="number">1</span>) * <span class="keyword">$this</span>-&gt;prePage, <span class="keyword">$this</span>-&gt;prePage)-&gt;all();</div><div class="line"></div><div class="line">    <span class="comment">//创建一个新的分页方法</span></div><div class="line">    $paginatedSearchResults= <span class="keyword">new</span> LengthAwarePaginator($currentPageSearchResults, count($collection), <span class="keyword">$this</span>-&gt;prePage);</div><div class="line"></div><div class="line">    <span class="comment">//给分页加自定义url</span></div><div class="line">    $paginatedSearchResults = $paginatedSearchResults-&gt;setPath(env(<span class="string">"APP_HOST"</span>) . <span class="string">'/home'</span>);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> $paginatedSearchResults;</div><div class="line"><span class="comment">//        return view('search', ['results' =&gt; $paginatedSearchResults]);</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="前台页面显示"><a href="#前台页面显示" class="headerlink" title="前台页面显示"></a>前台页面显示</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-md-offset-10"</span>&gt;</span></div><div class="line">        @if(empty($_GET['task_name']) &amp;&amp; empty($_GET['create_user']) &amp;&amp; empty($_GET['task_status']))</div><div class="line">            &#123;&#123; $task-&gt;links() &#125;&#125;</div><div class="line">        @endif</div><div class="line">        @if(isset($_GET['task_name']) &amp;&amp; isset($_GET['create_user']) &amp;&amp; isset($_GET['task_status']) &amp;&amp; $_GET['task_status'] != 0 )</div><div class="line">            &#123;&#123; $task-&gt;appends([</div><div class="line">                'task_name' =&gt; $_GET['task_name'],</div><div class="line">                'create_user' =&gt; $_GET['create_user'],</div><div class="line">                'task_status' =&gt; $_GET['task_status']</div><div class="line">                ])-&gt;links() &#125;&#125;</div><div class="line">        @endif</div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h3><p><img src="/2017/04/24/laravel-array-use-paginate/QQ20170424-105225.jpg" alt=""><br><img src="/2017/04/24/laravel-array-use-paginate/QQ20170424-105313.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h3&gt;&lt;p&gt;由于数据是从mysql和mongodb里的两个表中取数据，并且根据两个表中的字段关联来获取数据，所有没有直接的sql获取。只有通过循环获取。然而获取的数据是数组，无法使用&lt;code&gt;laravel&lt;/code&gt;自带的&lt;code&gt;paginate&lt;/code&gt;分页方法。下面是解决办法：&lt;/p&gt;
    
    </summary>
    
      <category term="Laravel" scheme="http://www.cenhq.com/categories/Laravel/"/>
    
    
      <category term="paginate" scheme="http://www.cenhq.com/tags/paginate/"/>
    
      <category term="LengthAwarePaginator" scheme="http://www.cenhq.com/tags/LengthAwarePaginator/"/>
    
      <category term="Collection" scheme="http://www.cenhq.com/tags/Collection/"/>
    
      <category term="links" scheme="http://www.cenhq.com/tags/links/"/>
    
      <category term="分页" scheme="http://www.cenhq.com/tags/%E5%88%86%E9%A1%B5/"/>
    
      <category term="数组分页" scheme="http://www.cenhq.com/tags/%E6%95%B0%E7%BB%84%E5%88%86%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 安装配置Supervisor</title>
    <link href="http://www.cenhq.com/2017/04/14/centos7-install-config-supervisor/"/>
    <id>http://www.cenhq.com/2017/04/14/centos7-install-config-supervisor/</id>
    <published>2017-04-14T06:17:54.000Z</published>
    <updated>2017-04-14T06:29:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><a href="http://supervisord.org/" target="_blank" rel="external">Supervisor</a> 是用<code>Python</code>开发的一个<code>client/server</code>服务，是<code>Linux/Unix</code>系统下的一个进程管理工具，不支持Windows系统。它可以很方便的监听、启动、停止、重启一个或多个进程。用<code>Supervisor</code>管理的进程，当一个进程意外被杀死，<code>supervisort</code>监听到进程死后，会自动将它重新拉起，很方便的做到进程自动恢复的功能，不再需要自己写<code>shell</code>脚本来控制。</p>
<p>因为<code>Supervisor</code>是Python开发的，安装前先检查一下系统否安装了<code>Python2.4</code>以上版本。下面以<code>CentOS7</code>，<code>Python2.7</code>版本环境下，介绍<code>Supervisor</code>的安装与配置步聚：<br><a id="more"></a></p>
<h3 id="安装Python包管理工具（easy-install）"><a href="#安装Python包管理工具（easy-install）" class="headerlink" title="安装Python包管理工具（easy_install）"></a>安装Python包管理工具（easy_install）</h3><p><code>easy_install</code>是<code>setuptools</code>包里带的一个命令，使用<code>easy_install</code>实际上是在调用<code>setuptools</code>来完成安装模块的工作,所以安装<code>setuptools</code>即可。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget --no-check-certificate https://bootstrap.pypa.io/ez_setup.py -O - | sudo python</div></pre></td></tr></table></figure>
<h3 id="安装supervisor"><a href="#安装supervisor" class="headerlink" title="安装supervisor"></a>安装supervisor</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ easy_install supervisor</div></pre></td></tr></table></figure>
<p>supervisor安装完成后会生成三个执行程序：<code>supervisortd</code>、<code>supervisorctl</code>、<code>echo_supervisord_conf</code>，分别是supervisor的守护进程服务（用于接收进程管理命令）、客户端（用于和守护进程通信，发送管理进程的指令）、生成初始配置文件程序。</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>运行supervisord服务的时候，需要指定supervisor配置文件，如果没有显示指定，默认在以下目录查找：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$CWD</span>/supervisord.conf</div><div class="line"><span class="variable">$CWD</span>/etc/supervisord.conf</div><div class="line">/etc/supervisord.conf</div><div class="line">/etc/supervisor/supervisord.conf (since Supervisor 3.3.0)</div><div class="line">../etc/supervisord.conf (Relative to the executable)</div><div class="line">../supervisord.conf (Relative to the executable)</div><div class="line"><span class="variable">$CWD</span>表示运行supervisord程序的目录。</div></pre></td></tr></table></figure>
<p>可以通过运行<code>echo_supervisord_conf</code>程序生成supervisor的初始化配置文件，如下所示：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir /etc/supervisor</div><div class="line">echo_supervisord_conf &gt; /etc/supervisor/supervisord.conf</div></pre></td></tr></table></figure>
<h3 id="配置文件参数说明"><a href="#配置文件参数说明" class="headerlink" title="配置文件参数说明"></a>配置文件参数说明</h3><p>supervisor的配置参数较多，下面介绍一下常用的参数配置，详细的配置及说明，请参考官方文档介绍。<br>注：分号（;）开头的配置表示注释</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">[unix_http_server]</div><div class="line">file=/tmp/supervisor.sock   ;UNIX socket 文件，supervisorctl 会使用</div><div class="line">;chmod=0700                 ;socket文件的mode，默认是0700</div><div class="line">;chown=nobody:nogroup       ;socket文件的owner，格式：uid:gid</div><div class="line"></div><div class="line">;[inet_http_server]         ;HTTP服务器，提供web管理界面</div><div class="line">;port=127.0.0.1:9001        ;Web管理后台运行的IP和端口，如果开放到公网，需要注意安全性</div><div class="line">;username=user              ;登录管理后台的用户名</div><div class="line">;password=123               ;登录管理后台的密码</div><div class="line"></div><div class="line">[supervisord]</div><div class="line">logfile=/tmp/supervisord.log ;日志文件，默认是 $CWD/supervisord.log</div><div class="line">logfile_maxbytes=50MB        ;日志文件大小，超出会rotate，默认 50MB，如果设成0，表示不限制大小</div><div class="line">logfile_backups=10           ;日志文件保留备份数量默认10，设为0表示不备份</div><div class="line">loglevel=info                ;日志级别，默认info，其它: debug,warn,trace</div><div class="line">pidfile=/tmp/supervisord.pid ;pid 文件</div><div class="line">nodaemon=false               ;是否在前台启动，默认是false，即以 daemon 的方式启动</div><div class="line">minfds=1024                  ;可以打开的文件描述符的最小值，默认 1024</div><div class="line">minprocs=200                 ;可以打开的进程数的最小值，默认 200</div><div class="line"></div><div class="line">[supervisorctl]</div><div class="line">serverurl=unix:///tmp/supervisor.sock ;通过UNIX socket连接supervisord，路径与unix_http_server部分的file一致</div><div class="line">;serverurl=http://127.0.0.1:9001 ; 通过HTTP的方式连接supervisord</div><div class="line"></div><div class="line">; [program:xx]是被管理的进程配置参数，xx是进程的名称</div><div class="line">[program:xx]</div><div class="line">command=/opt/apache-tomcat-8.0.35/bin/catalina.sh run  ; 程序启动命令</div><div class="line">autostart=true       ; 在supervisord启动的时候也自动启动</div><div class="line">startsecs=10         ; 启动10秒后没有异常退出，就表示进程正常启动了，默认为1秒</div><div class="line">autorestart=true     ; 程序退出后自动重启,可选值：[unexpected,true,false]，默认为unexpected，表示进程意外杀死后才重启</div><div class="line">startretries=3       ; 启动失败自动重试次数，默认是3</div><div class="line">user=tomcat          ; 用哪个用户启动进程，默认是root</div><div class="line">priority=999         ; 进程启动优先级，默认999，值小的优先启动</div><div class="line">redirect_stderr=true ; 把stderr重定向到stdout，默认false</div><div class="line">stdout_logfile_maxbytes=20MB  ; stdout 日志文件大小，默认50MB</div><div class="line">stdout_logfile_backups = 20   ; stdout 日志文件备份数，默认是10</div><div class="line">; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）</div><div class="line">stdout_logfile=/opt/apache-tomcat-8.0.35/logs/catalina.out</div><div class="line">stopasgroup=false     ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程</div><div class="line">killasgroup=false     ;默认为false，向进程组发送kill信号，包括子进程</div><div class="line"></div><div class="line">;包含其它配置文件</div><div class="line">[include]</div><div class="line">files = relative/directory/*.ini    ;可以指定一个或多个以.ini结束的配置文件</div><div class="line">include示例：</div><div class="line"></div><div class="line">[include]</div><div class="line">files = /opt/absolute/filename.ini /opt/absolute/*.ini foo.conf config??.ini</div></pre></td></tr></table></figure>
<h3 id="配置管理进程"><a href="#配置管理进程" class="headerlink" title="配置管理进程"></a>配置管理进程</h3><p>进程管理配置参数，不建议全都写在supervisord.conf文件中，应该每个进程写一个配置文件放在include指定的目录下包含进supervisord.conf文件中。<br>1&gt; 创建<code>/etc/supervisor/config.d</code>目录，用于存放进程管理的配置文件<br>2&gt; 修改<code>/etc/supervisor/supervisord.conf</code>中的include参数，将/etc/supervisor/conf.d目录添加到include中</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="section">[include]</span></div><div class="line"><span class="attr">files</span> = /etc/supervisor/config.d/*.ini</div></pre></td></tr></table></figure>
<p>supervisor配置文件目录结构</p>
<p>下面是配置Tomcat进程的一个例子：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="section">[program:tomcat]</span></div><div class="line"><span class="attr">command</span>=/opt/apache-tomcat-<span class="number">8.0</span>.<span class="number">35</span>/bin/catalina.sh run</div><div class="line"><span class="attr">stdout_logfile</span>=/opt/apache-tomcat-<span class="number">8.0</span>.<span class="number">35</span>/logs/catalina.out</div><div class="line"><span class="attr">autostart</span>=<span class="literal">true</span></div><div class="line"><span class="attr">autorestart</span>=<span class="literal">true</span></div><div class="line"><span class="attr">startsecs</span>=<span class="number">5</span></div><div class="line"><span class="attr">priority</span>=<span class="number">1</span></div><div class="line"><span class="attr">stopasgroup</span>=<span class="literal">true</span></div><div class="line"><span class="attr">killasgroup</span>=<span class="literal">true</span></div></pre></td></tr></table></figure>
<h3 id="启动Supervisor服务"><a href="#启动Supervisor服务" class="headerlink" title="启动Supervisor服务"></a>启动Supervisor服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/supervisord -c /etc/supervisor/supervisrod.conf</div></pre></td></tr></table></figure>
<h3 id="控制进程"><a href="#控制进程" class="headerlink" title="控制进程"></a>控制进程</h3><h4 id="交互终端"><a href="#交互终端" class="headerlink" title="交互终端"></a>交互终端</h4><p>supervisord启动成功后，可以通过supervisorctl客户端控制进程，启动、停止、重启。运行supervisorctl命令，不加参数，会进入supervisor客户端的交互终端，并会列出当前所管理的所有进程。<br>supervisorctl</p>
<p>上图中的tomcat就是我们在配置文件中[program:tomcat]指定的名字。<br>输入help可以查看可以执行的命令列表，如果想看某个命令的作用，运行help 命令名称，如：help stop</p>
<p><code>stop tomcat</code>  // 表示停止tomcat进程</p>
<p><code>stop all</code>     // 表示停止所有进程</p>
<h4 id="bash终端"><a href="#bash终端" class="headerlink" title="bash终端"></a>bash终端</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">supervisorctl status</div><div class="line">supervisorctl stop tomcat</div><div class="line">supervisorctl start tomcat</div><div class="line">supervisorctl restart tomcat</div><div class="line">supervisorctl reread</div><div class="line">supervisorctl update</div></pre></td></tr></table></figure>
<h4 id="Web管理界面"><a href="#Web管理界面" class="headerlink" title="Web管理界面"></a>Web管理界面</h4><p>Supervisor Web管理界面<br>出于安全考虑，默认配置是没有开启web管理界面，需要修改supervisord.conf配置文件打开http访权限，将下面的配置：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">;[inet_http_server]         ; inet (TCP) server disabled by default</span></div><div class="line"><span class="comment">;port=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)</span></div><div class="line"><span class="comment">;username=user              ; (default is no username (open server))</span></div><div class="line"><span class="comment">;password=123               ; (default is no password (open server))</span></div></pre></td></tr></table></figure>
<p>修改成：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="section">[inet_http_server]</span>         <span class="comment">; inet (TCP) server disabled by default</span></div><div class="line"><span class="attr">port</span>=<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">9001</span>          ; (ip_address:port specifier, *:port for all iface)</div><div class="line"><span class="attr">username</span>=user              ; (default is <span class="literal">no</span> username (open server))</div><div class="line"><span class="attr">password</span>=<span class="number">123</span>               ; (default is <span class="literal">no</span> password (open server))</div></pre></td></tr></table></figure>
<p><code>port</code>：绑定访问IP和端口，这里是绑定的是本地IP和9001端口 </p>
<p><code>username</code>：登录管理后台的用户名 </p>
<p><code>password</code>：登录管理后台的密码</p>
<h3 id="开机启动Supervisor服务"><a href="#开机启动Supervisor服务" class="headerlink" title="开机启动Supervisor服务"></a>开机启动Supervisor服务</h3><h4 id="配置systemctl服务"><a href="#配置systemctl服务" class="headerlink" title="配置systemctl服务"></a>配置systemctl服务</h4><ol>
<li>进入<code>/lib/systemd/system</code>目录，并创建<code>supervisor.service</code>文件</li>
</ol>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="section">[Unit]</span></div><div class="line"><span class="attr">Description</span>=supervisor</div><div class="line"><span class="attr">After</span>=network.target</div><div class="line"><span class="section"></span></div><div class="line">[Service]</div><div class="line"><span class="attr">Type</span>=forking</div><div class="line"><span class="attr">ExecStart</span>=/usr/bin/supervisord -c /etc/supervisor/supervisord.conf</div><div class="line"><span class="attr">ExecStop</span>=/usr/bin/supervisorctl <span class="variable">$OPTIONS</span> shutdown</div><div class="line"><span class="attr">ExecReload</span>=/usr/bin/supervisorctl <span class="variable">$OPTIONS</span> reload</div><div class="line"><span class="attr">KillMode</span>=process</div><div class="line"><span class="attr">Restart</span>=<span class="literal">on</span>-failure</div><div class="line"><span class="attr">RestartSec</span>=<span class="number">42</span>s</div><div class="line"><span class="section"></span></div><div class="line">[Install]</div><div class="line"><span class="attr">WantedBy</span>=multi-user.target</div></pre></td></tr></table></figure>
<ol>
<li>设置开机启动</li>
</ol>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl <span class="built_in">enable</span> supervisor.service</div><div class="line">systemctl daemon-reload</div></pre></td></tr></table></figure>
<ol>
<li>修改文件权限为766</li>
</ol>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 766 supervisor.service</div></pre></td></tr></table></figure>
<h4 id="配置service类型服务"><a href="#配置service类型服务" class="headerlink" title="配置service类型服务"></a>配置service类型服务</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># supervisord   This scripts turns supervisord on</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Author:       Mike McGrath &lt;mmcgrath@RedHat.com&gt; (based off yumupdatesd)</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># chkconfig:    - 95 04</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># description:  supervisor is a process control utility.  It has a web based</span></div><div class="line"><span class="comment">#               xmlrpc interface as well as a few other nifty features.</span></div><div class="line"><span class="comment"># processname:  supervisord</span></div><div class="line"><span class="comment"># config: /etc/supervisor/supervisord.conf</span></div><div class="line"><span class="comment"># pidfile: /var/run/supervisord.pid</span></div><div class="line"><span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment"># source function library</span></div><div class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></div><div class="line"></div><div class="line">RETVAL=0</div><div class="line"></div><div class="line"><span class="function"><span class="title">start</span></span>() &#123;</div><div class="line">    <span class="built_in">echo</span> -n $<span class="string">"Starting supervisord: "</span></div><div class="line">    daemon <span class="string">"supervisord -c /etc/supervisor/supervisord.conf "</span></div><div class="line">    RETVAL=$?</div><div class="line">    <span class="built_in">echo</span></div><div class="line">    [ <span class="variable">$RETVAL</span> <span class="_">-eq</span> 0 ] &amp;&amp; touch /var/lock/subsys/supervisord</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">stop</span></span>() &#123;</div><div class="line">    <span class="built_in">echo</span> -n $<span class="string">"Stopping supervisord: "</span></div><div class="line">    killproc supervisord</div><div class="line">    <span class="built_in">echo</span></div><div class="line">    [ <span class="variable">$RETVAL</span> <span class="_">-eq</span> 0 ] &amp;&amp; rm <span class="_">-f</span> /var/lock/subsys/supervisord</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">restart</span></span>() &#123;</div><div class="line">    stop</div><div class="line">    start</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></div><div class="line">  start)</div><div class="line">    start</div><div class="line">    ;;</div><div class="line">  stop) </div><div class="line">    stop</div><div class="line">    ;;</div><div class="line">  restart|force-reload|reload)</div><div class="line">    restart</div><div class="line">    ;;</div><div class="line">  condrestart)</div><div class="line">    [ <span class="_">-f</span> /var/lock/subsys/supervisord ] &amp;&amp; restart</div><div class="line">    ;;</div><div class="line">  status)</div><div class="line">    status supervisord</div><div class="line">    RETVAL=$?</div><div class="line">    ;;</div><div class="line">  *)</div><div class="line">    <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|reload|force-reload|condrestart&#125;"</span></div><div class="line">    <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">esac</span></div><div class="line"></div><div class="line"><span class="built_in">exit</span> <span class="variable">$RETVAL</span></div></pre></td></tr></table></figure>
<p>将上述脚本内容保存到<code>/etc/rc.d/init.d/supervisor</code>文件中，修改文件权限为755，并设置开机启动</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod 755 /etc/rc.d/init.d/supervisor</div><div class="line">chkconfig supervisor on</div></pre></td></tr></table></figure>
<p>注意：修改脚本中supervisor配置文件路径为你的supervisor的配置文件路径</p>
<p>其它Linux发行版开机启动脚本：<a href="https://github.com/Supervisor/initscripts" target="_blank" rel="external">https://github.com/Supervisor/initscripts</a></p>
<p>supervisor安装配置与使用  <a href="http://www.linuxidc.com/Linux/2015-04/116701.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2015-04/116701.htm</a></p>
<blockquote>
<p>注意：<br>Supervisor只能管理非daemon的进程，也就是说Supervisor不能管理守护进程。否则提示Exited too quickly (process log may have details)异常。例子中的Tomcat默认是以守护进程启动的，所以我们改成了catalina.sh run，以前台进程的方式运行。</p>
</blockquote>
<p><code>yum</code>方式安装</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install epel-release</div><div class="line">yum install -y supervisor</div></pre></td></tr></table></figure>
<p>supervisor没有发布在标准的CentOS源在，需要安装epel源。这种方式安装的可能不是最新版本，但比较方便，安装完成之后，配置文件会自动帮你生成。 </p>
<p>默认配置文件：<code>/etc/supervisord.conf</code></p>
<p>进程管理配置文件放到：<code>/etc/supervisord.d/</code>目录下即可</p>
<p>默认日志文件：<code>/tmp/supervisord.log</code>，可以查看进程的启动信息</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://supervisord.org/&quot;&gt;Supervisor&lt;/a&gt; 是用&lt;code&gt;Python&lt;/code&gt;开发的一个&lt;code&gt;client/server&lt;/code&gt;服务，是&lt;code&gt;Linux/Unix&lt;/code&gt;系统下的一个进程管理工具，不支持Windows系统。它可以很方便的监听、启动、停止、重启一个或多个进程。用&lt;code&gt;Supervisor&lt;/code&gt;管理的进程，当一个进程意外被杀死，&lt;code&gt;supervisort&lt;/code&gt;监听到进程死后，会自动将它重新拉起，很方便的做到进程自动恢复的功能，不再需要自己写&lt;code&gt;shell&lt;/code&gt;脚本来控制。&lt;/p&gt;
&lt;p&gt;因为&lt;code&gt;Supervisor&lt;/code&gt;是Python开发的，安装前先检查一下系统否安装了&lt;code&gt;Python2.4&lt;/code&gt;以上版本。下面以&lt;code&gt;CentOS7&lt;/code&gt;，&lt;code&gt;Python2.7&lt;/code&gt;版本环境下，介绍&lt;code&gt;Supervisor&lt;/code&gt;的安装与配置步聚：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.cenhq.com/categories/Linux/"/>
    
    
      <category term="supervisor" scheme="http://www.cenhq.com/tags/supervisor/"/>
    
      <category term="supervisord" scheme="http://www.cenhq.com/tags/supervisord/"/>
    
      <category term="supervisorctl" scheme="http://www.cenhq.com/tags/supervisorctl/"/>
    
      <category term="easy_install" scheme="http://www.cenhq.com/tags/easy-install/"/>
    
  </entry>
  
  <entry>
    <title>lumen 部署到线上遇到的问题</title>
    <link href="http://www.cenhq.com/2017/04/14/lumen-deploy-problems-to-online/"/>
    <id>http://www.cenhq.com/2017/04/14/lumen-deploy-problems-to-online/</id>
    <published>2017-04-14T06:14:56.000Z</published>
    <updated>2017-04-14T06:20:50.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="lumen-默认的日志保存模式是single"><a href="#lumen-默认的日志保存模式是single" class="headerlink" title="lumen 默认的日志保存模式是single"></a>lumen 默认的日志保存模式是single</h3><p>也就是单文件模式</p>
<p>要想改成每日的daily模式可以在bootstrap/app.php下添加：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"> * 配置日志文件为每日</div><div class="line"> */</div><div class="line">$app-&gt;configureMonologUsing(<span class="function"><span class="keyword">function</span><span class="params">(Monolog\Logger $monoLog)</span> <span class="title">use</span> <span class="params">($app)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> $monoLog-&gt;pushHandler(</div><div class="line">        <span class="keyword">new</span> \Monolog\Handler\RotatingFileHandler($app-&gt;storagePath().<span class="string">'/logs/lumen.log'</span>,<span class="number">5</span>)</div><div class="line">    );</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="lumen-nginx-允许自定义header"><a href="#lumen-nginx-允许自定义header" class="headerlink" title="lumen nginx 允许自定义header"></a>lumen nginx 允许自定义header</h3><p>nginx是支持读取非nginx标准的用户自定义header的，但是需要在http或者server下开启header的下划线支持:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">underscores_in_headers on;</div></pre></td></tr></table></figure>
<h3 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息"></a>错误信息</h3><h4 id="错误1"><a href="#错误1" class="headerlink" title="错误1"></a>错误1</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[Symfony\Component\Process\<span class="keyword">Exception</span>\RuntimeException]                                   </div><div class="line">  The Process <span class="class"><span class="keyword">class</span> <span class="title">relies</span> <span class="title">on</span> <span class="title">proc_open</span>, <span class="title">which</span> <span class="title">is</span> <span class="title">not</span> <span class="title">available</span> <span class="title">on</span> <span class="title">your</span> <span class="title">PHP</span> <span class="title">installation</span>.</span></div></pre></td></tr></table></figure>
<p>解决办法：<br>打开<code>php.ini</code>，并搜索<code>disable_functions</code>指令，找到类似如下内容：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">disable_functions</span> = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_get_status,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server</div></pre></td></tr></table></figure>
<p>找到<code>proc_open</code>并删除即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;lumen-默认的日志保存模式是single&quot;&gt;&lt;a href=&quot;#lumen-默认的日志保存模式是single&quot; class=&quot;headerlink&quot; title=&quot;lumen 默认的日志保存模式是single&quot;&gt;&lt;/a&gt;lumen 默认的日志保存模式是single&lt;/h3&gt;&lt;p&gt;也就是单文件模式&lt;/p&gt;
&lt;p&gt;要想改成每日的daily模式可以在bootstrap/app.php下添加：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 配置日志文件为每日&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$app-&amp;gt;configureMonologUsing(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Monolog\Logger $monoLog)&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;($app)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $monoLog-&amp;gt;pushHandler(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; \Monolog\Handler\RotatingFileHandler($app-&amp;gt;storagePath().&lt;span class=&quot;string&quot;&gt;&#39;/logs/lumen.log&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="signle" scheme="http://www.cenhq.com/tags/signle/"/>
    
      <category term="lumen.log" scheme="http://www.cenhq.com/tags/lumen-log/"/>
    
      <category term="daily" scheme="http://www.cenhq.com/tags/daily/"/>
    
      <category term="header" scheme="http://www.cenhq.com/tags/header/"/>
    
      <category term="proc_open" scheme="http://www.cenhq.com/tags/proc-open/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 安装第三方包 Mongodb报错</title>
    <link href="http://www.cenhq.com/2017/03/28/laravel-use-mongodb-error-info/"/>
    <id>http://www.cenhq.com/2017/03/28/laravel-use-mongodb-error-info/</id>
    <published>2017-03-28T10:03:19.000Z</published>
    <updated>2017-03-28T10:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于项目使用mongodb数据库来存储数据，所以需要第三方包mongodb来配合；这里使用<code>composer</code>来安装。</p>
<h4 id="安装jenssegers-mongodb报错"><a href="#安装jenssegers-mongodb报错" class="headerlink" title="安装jenssegers/mongodb报错"></a>安装<code>jenssegers/mongodb</code>报错</h4><a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"> $ composer require jenssegers/mongodb:3.2.*</div><div class="line">./composer.json has been updated</div><div class="line">Loading composer repositories with package information</div><div class="line">Updating dependencies (including require-dev)</div><div class="line">Your requirements could not be resolved to an installable set of packages.</div><div class="line"></div><div class="line">  Problem 1</div><div class="line">    - jenssegers/mongodb v3.2.0 requires mongodb/mongodb ^1.0.0 -&gt; satisfiable by mongodb/mongodb[1.0.0, 1.0.0-alpha1, 1.0.0-beta1, 1.0.0-beta2, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.1.0, 1.1.0-alpha1, 1.1.1, 1.1.2, 1.2.0-alpha1, 1.2.x-dev, v1.0.x-dev, v1.1.x-dev].</div><div class="line">    - jenssegers/mongodb v3.2.1 requires mongodb/mongodb ^1.0.0 -&gt; satisfiable by mongodb/mongodb[1.0.0, 1.0.0-alpha1, 1.0.0-beta1, 1.0.0-beta2, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.1.0, 1.1.0-alpha1, 1.1.1, 1.1.2, 1.2.0-alpha1, 1.2.x-dev, v1.0.x-dev, v1.1.x-dev].</div><div class="line">    - jenssegers/mongodb v3.2.2 requires mongodb/mongodb ^1.0.0 -&gt; satisfiable by mongodb/mongodb[1.0.0, 1.0.0-alpha1, 1.0.0-beta1, 1.0.0-beta2, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.1.0, 1.1.0-alpha1, 1.1.1, 1.1.2, 1.2.0-alpha1, 1.2.x-dev, v1.0.x-dev, v1.1.x-dev].</div><div class="line">    - mongodb/mongodb v1.1.x-dev requires ext-mongodb ^1.2.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb v1.0.x-dev requires ext-mongodb ^1.1.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.2.x-dev requires ext-mongodb ^1.2.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.2.0-alpha1 requires ext-mongodb ^1.2.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.1.2 requires ext-mongodb ^1.2.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.1.1 requires ext-mongodb ^1.2.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.1.0-alpha1 requires ext-mongodb ^1.1.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.1.0 requires ext-mongodb ^1.2.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.0.5 requires ext-mongodb ^1.1.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.0.4 requires ext-mongodb ^1.1.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.0.3 requires ext-mongodb ^1.1.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.0.2 requires ext-mongodb ^1.1.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.0.1 requires ext-mongodb ^1.1.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.0.0-beta2 requires ext-mongodb ^1.1.1 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.0.0-beta1 requires ext-mongodb ^1.0.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.0.0-alpha1 requires ext-mongodb ^1.0.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - mongodb/mongodb 1.0.0 requires ext-mongodb ^1.1.0 -&gt; the requested PHP extension mongodb is missing from your system.</div><div class="line">    - Installation request for jenssegers/mongodb 3.2.* -&gt; satisfiable by jenssegers/mongodb[v3.2.0, v3.2.1, v3.2.2].</div><div class="line"></div><div class="line">  To enable extensions, verify that they are enabled in your .ini files:</div><div class="line">    - /usr/local/etc/php/5.6/php.ini</div><div class="line">    - /usr/local/etc/php/5.6/conf.d/ext-igbinary.ini</div><div class="line">    - /usr/local/etc/php/5.6/conf.d/ext-memcached.ini</div><div class="line">    - /usr/local/etc/php/5.6/conf.d/ext-mongo.ini</div><div class="line">    - /usr/local/etc/php/5.6/conf.d/ext-redis.ini</div><div class="line">    - /usr/local/etc/php/5.6/conf.d/ext-ssh2.ini</div><div class="line">    - /usr/local/etc/php/5.6/conf.d/ext-xdebug.ini</div><div class="line">  You can also run `php --ini` inside terminal to see which files are used by PHP in CLI mode.</div><div class="line"></div><div class="line">Installation failed, reverting ./composer.json to its original content.</div></pre></td></tr></table></figure>
<h5 id="报错解析"><a href="#报错解析" class="headerlink" title="报错解析"></a>报错解析</h5><p>第三方包需要<code>php56-mongodb</code>扩展，本机只有<code>php56-mongo</code>扩展，所以需要继续安装 <code>php56-mongodb</code>。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ brew install php56-mongodb                                                                                                                                 </div><div class="line">Error: /usr/<span class="built_in">local</span>/opt/php56-mongodb is not a valid keg</div></pre></td></tr></table></figure>
<p>这个错误说明<code>php56-mongodb</code>目录不是有效的桶， 所以删除这个目录继续安装就可以</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ sudo rm -rf /usr/<span class="built_in">local</span>/opt/php56-mongodb</div><div class="line">$ brew install php56-mongodb</div><div class="line">$ php -i <span class="string">"(command-line 'phpinfo()')"</span> |grep mongodb</div><div class="line">/usr/<span class="built_in">local</span>/etc/php/5.6/conf.d/ext-mongodb.ini,</div><div class="line">mongodb</div><div class="line">mongodb.debug =&gt; no value =&gt; no value</div></pre></td></tr></table></figure>
<p>再次安装第三方包</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ composer require jenssegers/mongodb</div><div class="line">cUsing version ^3.2 <span class="keyword">for</span> jenssegers/mongodb</div><div class="line">./composer.json has been updated</div><div class="line">Loading composer repositories with package information</div><div class="line">Updating dependencies (including require-dev)</div><div class="line">Package operations: 2 installs, 0 updates, 0 removals</div><div class="line">  - Installing mongodb/mongodb (1.1.2): Downloading (100%)         </div><div class="line">  - Installing jenssegers/mongodb (v3.2.2): Downloading (100%)         </div><div class="line">jenssegers/mongodb suggests installing jenssegers/mongodb-session (Add MongoDB session support to Laravel-MongoDB)</div><div class="line">jenssegers/mongodb suggests installing jenssegers/mongodb-sentry (Add Sentry support to Laravel-MongoDB)</div><div class="line">Writing lock file</div><div class="line">Generating <span class="built_in">autoload</span> files</div></pre></td></tr></table></figure>
<h4 id="php调用mongodb挂掉"><a href="#php调用mongodb挂掉" class="headerlink" title="php调用mongodb挂掉"></a>php调用mongodb挂掉</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">dyld: lazy symbol binding failed: Symbol not found: _clock_gettime</div><div class="line">  Referenced from: /usr/<span class="built_in">local</span>/opt/php56-mongodb/mongodb.so</div><div class="line">  Expected <span class="keyword">in</span>: /usr/lib/libSystem.B.dylib</div><div class="line"></div><div class="line">dyld: Symbol not found: _clock_gettime</div><div class="line">  Referenced from: /usr/<span class="built_in">local</span>/opt/php56-mongodb/mongodb.so</div><div class="line">  Expected <span class="keyword">in</span>: /usr/lib/libSystem.B.dylib</div><div class="line"></div><div class="line">[1]    29551 trace <span class="built_in">trap</span>  php -S 192.168.82.195:8989</div></pre></td></tr></table></figure>
<h5 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h5><p><a href="https://github.com/Homebrew/homebrew-php/issues/3737" target="_blank" rel="external">https://github.com/Homebrew/homebrew-php/issues/3737</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">make sure you have the latest version of xcode-select,mine is 2343 xcode-select -v,if not update then restart your mac</div><div class="line"></div><div class="line"> brew edit &#123;formula&#125; #formula likes php71-mongodb</div><div class="line"></div><div class="line"> edit it，add lines after “install”, may like this</div><div class="line">def install</div><div class="line">Dir.chdir &quot;mongodb-#&#123;version&#125;&quot; unless build.head?</div><div class="line">if MacOS.version == &quot;10.11&quot; &amp;&amp; MacOS::Xcode.installed? &amp;&amp; MacOS::Xcode.version &gt;= &quot;8.0&quot;</div><div class="line">inreplace %w[src/libbson/src/bson/bson-clock.c], &quot;HAVE_CLOCK_GETTIME&quot;, &quot;UNDEFINED_GIBBERISH&quot;`</div><div class="line">end</div><div class="line"></div><div class="line"> reinstall php71-mongodb from source brew reinstall -s php71-mongodb</div></pre></td></tr></table></figure>
<p>上面的英文解释下：</p>
<ul>
<li><code>xcode-select</code> 最新的版本为：2343，如果不是需要升级</li>
<li>编辑<code>php56-mongodb</code>,修改位置大概在20行下面，添加此内容 <code>if MacOS.version == &quot;10.11&quot; &amp;&amp; MacOS::Xcode.installed? &amp;&amp; MacOS::Xcode.version &gt;= &quot;8.0&quot;
inreplace %w[src/libbson/src/bson/bson-clock.c], &quot;HAVE_CLOCK_GETTIME&quot;, &quot;UNDEFINED_GIBBERISH&quot;
end</code></li>
<li>然后重新安装 <code>php56-mongodb</code></li>
</ul>
<blockquote>
<p>但是重装会无法执行，报错timeout超时。而且下载的是版本为<code>mongodb-1.2.5</code>，所以我们需要最新版本<code>mongodb-1.2.8</code>需要手动下载。</p>
</blockquote>
<p><a href="https://github.com/mongodb/mongo-php-driver/releases/download/1.2.8/mongodb-1.2.8.tgz" target="_blank" rel="external">下载地址</a></p>
<h6 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ tar xf mongodb-1.2.8.tgz</div><div class="line">$ <span class="built_in">cd</span> mongodb-1.2.8</div><div class="line">$ phpize</div><div class="line">$ ./configure</div><div class="line">$ make</div></pre></td></tr></table></figure>
<h6 id="报如下错误"><a href="#报如下错误" class="headerlink" title="报如下错误"></a>报如下错误</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/Users/zt-2203315/Downloads/资源包/mongodb-1.2.8/src/libmongoc/src/mongoc/mongoc-crypto-openssl.c:24:10: fatal error: <span class="string">'openssl/sha.h'</span> file not found</div><div class="line"><span class="comment">#include &lt;openssl/sha.h&gt;</span></div></pre></td></tr></table></figure>
<h6 id="需要升级openssl-并且执行软连接"><a href="#需要升级openssl-并且执行软连接" class="headerlink" title="需要升级openssl,并且执行软连接"></a>需要升级openssl,并且执行软连接</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ brew install openssl --force</div><div class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/include </div><div class="line">$ ln <span class="_">-s</span> ../opt/openssl/include/openssl .</div></pre></td></tr></table></figure>
<h6 id="继续安装"><a href="#继续安装" class="headerlink" title="继续安装"></a>继续安装</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ make clean</div><div class="line">$ make</div><div class="line">$ make install</div><div class="line">Installing shared extensions:     /usr/<span class="built_in">local</span>/Cellar/php56/5.6.30_6/lib/php/extensions/no-debug-non-zts-20131226/</div><div class="line"></div><div class="line">$ php --ini</div><div class="line">Configuration File (php.ini) Path: /usr/<span class="built_in">local</span>/etc/php/5.6</div><div class="line">Loaded Configuration File:         /usr/<span class="built_in">local</span>/etc/php/5.6/php.ini</div><div class="line">Scan <span class="keyword">for</span> additional .ini files <span class="keyword">in</span>: /usr/<span class="built_in">local</span>/etc/php/5.6/conf.d</div><div class="line">Additional .ini files parsed:      /usr/<span class="built_in">local</span>/etc/php/5.6/conf.d/ext-igbinary.ini,</div><div class="line">/usr/<span class="built_in">local</span>/etc/php/5.6/conf.d/ext-memcached.ini,</div><div class="line">/usr/<span class="built_in">local</span>/etc/php/5.6/conf.d/ext-mongo.ini,</div><div class="line">/usr/<span class="built_in">local</span>/etc/php/5.6/conf.d/ext-mongodb.ini,</div><div class="line">/usr/<span class="built_in">local</span>/etc/php/5.6/conf.d/ext-redis.ini,</div><div class="line">/usr/<span class="built_in">local</span>/etc/php/5.6/conf.d/ext-ssh2.ini,</div><div class="line">/usr/<span class="built_in">local</span>/etc/php/5.6/conf.d/ext-xdebug.ini</div></pre></td></tr></table></figure>
<h6 id="修改扩展配置"><a href="#修改扩展配置" class="headerlink" title="修改扩展配置"></a>修改扩展配置</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ vim /usr/<span class="built_in">local</span>/etc/php/5.6/conf.d/ext-mongodb.ini</div><div class="line">extension=<span class="string">"/usr/local/Cellar/php56/5.6.30_6/lib/php/extensions/no-debug-non-zts-20131226/mongodb.so"</span></div></pre></td></tr></table></figure>
<h6 id="保存后重启服务"><a href="#保存后重启服务" class="headerlink" title="保存后重启服务"></a>保存后重启服务</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ killall php-fpm</div><div class="line">$ php-pfm -D</div></pre></td></tr></table></figure>
<h6 id="数据库配置config-database-php"><a href="#数据库配置config-database-php" class="headerlink" title="数据库配置config/database.php"></a>数据库配置<code>config/database.php</code></h6><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span> [</div><div class="line"></div><div class="line">    <span class="string">'default'</span> =&gt; env(<span class="string">'DB_CONNECTION'</span>, <span class="string">'mysql'</span>),</div><div class="line"></div><div class="line">    <span class="string">'connections'</span> =&gt; [</div><div class="line">        <span class="string">'mysql'</span> =&gt; [</div><div class="line">            <span class="string">'driver'</span>    =&gt; <span class="string">'mysql'</span>,</div><div class="line">            <span class="string">'host'</span>      =&gt; env(<span class="string">'DB_HOST'</span>, <span class="string">'localhost'</span>),</div><div class="line">            <span class="string">'database'</span>  =&gt; env(<span class="string">'DB_DATABASE'</span>, <span class="string">'lumen'</span>),</div><div class="line">            <span class="string">'username'</span>  =&gt; env(<span class="string">'DB_USERNAME'</span>, <span class="string">'root'</span>),</div><div class="line">            <span class="string">'password'</span>  =&gt; env(<span class="string">'DB_PASSWORD'</span>, <span class="string">'charlie'</span>),</div><div class="line">            <span class="string">'charset'</span>   =&gt; <span class="string">'utf8'</span>,</div><div class="line">            <span class="string">'collation'</span> =&gt; <span class="string">'utf8_unicode_ci'</span>,</div><div class="line">            <span class="string">'prefix'</span>    =&gt; <span class="string">''</span>,</div><div class="line">            <span class="string">'strict'</span>    =&gt; <span class="keyword">false</span>,</div><div class="line">        ],</div><div class="line"></div><div class="line">        <span class="string">'mongodb'</span> =&gt; [</div><div class="line">            <span class="string">'driver'</span>   =&gt; <span class="string">'mongodb'</span>,</div><div class="line">            <span class="string">'host'</span>     =&gt; <span class="string">'localhost'</span>,</div><div class="line">            <span class="string">'port'</span>     =&gt; <span class="number">27017</span>,</div><div class="line">            <span class="string">'database'</span> =&gt; <span class="string">'test'</span>,</div><div class="line">            <span class="string">'username'</span> =&gt; env(<span class="string">''</span>),</div><div class="line">            <span class="string">'password'</span> =&gt; env(<span class="string">''</span>),</div><div class="line">            <span class="string">'options'</span>  =&gt; [</div><div class="line">                <span class="string">'database'</span> =&gt; <span class="string">'admin'</span> <span class="comment">// sets the authentication database required by mongo 3</span></div><div class="line">            ]</div><div class="line">        ],</div><div class="line"></div><div class="line">    ],</div><div class="line">];</div></pre></td></tr></table></figure>
<h6 id="注册服务bootstrap-app-php"><a href="#注册服务bootstrap-app-php" class="headerlink" title="注册服务bootstrap/app.php"></a>注册服务<code>bootstrap/app.php</code></h6><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$app-&gt;configure(<span class="string">'database'</span>);</div><div class="line"></div><div class="line">$app-&gt;register(\Jenssegers\Mongodb\MongodbServiceProvider::class);</div><div class="line"></div><div class="line">$app-&gt;withEloquent();</div></pre></td></tr></table></figure>
<h6 id="创建测试模型app-Model-Test-php"><a href="#创建测试模型app-Model-Test-php" class="headerlink" title="创建测试模型app/Model/Test.php"></a>创建测试模型<code>app/Model/Test.php</code></h6><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Model</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">Jenssegers</span>\<span class="title">Mongodb</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Model</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">protected</span> $connection = <span class="string">'mongodb'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> $collection = <span class="string">'c2'</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h6 id="创建测试控制器app-Http-Controllers-TestController-php"><a href="#创建测试控制器app-Http-Controllers-TestController-php" class="headerlink" title="创建测试控制器app/Http/Controllers/TestController.php"></a>创建测试控制器<code>app/Http/Controllers/TestController.php</code></h6><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Model</span>\<span class="title">Test</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">DB</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line"><span class="comment">//        $test = DB::connection('mongodb')-&gt;collection('c2')-&gt;get();</span></div><div class="line">        $test = Test::all()-&gt;toArray();</div><div class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>;</div><div class="line">        print_r($test);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h6 id="创建路由routes-web-php"><a href="#创建路由routes-web-php" class="headerlink" title="创建路由routes/web.php"></a>创建路由<code>routes/web.php</code></h6><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$app-&gt;get(<span class="string">'aa'</span>, <span class="string">'TestController@index'</span>);</div></pre></td></tr></table></figure>
<h6 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h6><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Array</span></div><div class="line">(</div><div class="line">    [<span class="number">0</span>] =&gt; <span class="keyword">Array</span></div><div class="line">        (</div><div class="line">            [_id] =&gt; <span class="number">5837</span>d39d05045864010041bd</div><div class="line">            [ym] =&gt; <span class="number">2016</span>年/<span class="number">11</span>月</div><div class="line">            [date] =&gt; <span class="number">2016</span>/<span class="number">11</span>/<span class="number">25</span></div><div class="line">            [key_time] =&gt; tmp_look_1480047736</div><div class="line">            [title] =&gt; test18</div><div class="line">            [status] =&gt; 已发布</div><div class="line">        )</div><div class="line"></div><div class="line">)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于项目使用mongodb数据库来存储数据，所以需要第三方包mongodb来配合；这里使用&lt;code&gt;composer&lt;/code&gt;来安装。&lt;/p&gt;
&lt;h4 id=&quot;安装jenssegers-mongodb报错&quot;&gt;&lt;a href=&quot;#安装jenssegers-mongodb报错&quot; class=&quot;headerlink&quot; title=&quot;安装jenssegers/mongodb报错&quot;&gt;&lt;/a&gt;安装&lt;code&gt;jenssegers/mongodb&lt;/code&gt;报错&lt;/h4&gt;
    
    </summary>
    
      <category term="Laravel" scheme="http://www.cenhq.com/categories/Laravel/"/>
    
    
      <category term="mongodb" scheme="http://www.cenhq.com/tags/mongodb/"/>
    
      <category term="php56-mongodb" scheme="http://www.cenhq.com/tags/php56-mongodb/"/>
    
      <category term="php56-mongo" scheme="http://www.cenhq.com/tags/php56-mongo/"/>
    
      <category term="_clock_gettime" scheme="http://www.cenhq.com/tags/clock-gettime/"/>
    
      <category term="mongodb-1.2.8" scheme="http://www.cenhq.com/tags/mongodb-1-2-8/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 5.4 事件操作</title>
    <link href="http://www.cenhq.com/2017/03/22/laravel-event/"/>
    <id>http://www.cenhq.com/2017/03/22/laravel-event/</id>
    <published>2017-03-22T05:18:14.000Z</published>
    <updated>2017-03-28T10:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Laravel 事件机制实现了一个简单的观察者模式，让我们可以订阅和监听应用中出现的各种事件。事件类 (Event) 类通常保存在 <code>app/Events</code> 目录下，而它们的监听类 (Listener) 类被保存在 <code>app/Listeners</code> 目录下。如果你在应用中看不到这些文件夹也不要担心，因为当你使用 Artisan 命令来生成事件和监听器时他们会被自动创建。</p>
<p>事件机制是一种很好的应用解耦方式，因为一个事件可以拥有多个互不依赖的监听器。例如，这里我们基于之前基于模型+缓存对文章增删改查这篇文件对文章保存后缓存的处理做进一步优化。我们将文章保存（新建/修改）视为一个事件，将保存文章内容到缓存放到监听器中实现：<br><a id="more"></a></p>
<h3 id="注册事件与监听器"><a href="#注册事件与监听器" class="headerlink" title="注册事件与监听器"></a>注册事件与监听器</h3><p>Laravel 应用中的 <code>EventServiceProvider</code> 提供了一个很方便的地方来注册所有的事件监听器。它的 <code>listen</code> 属性是一个数组，包含所有的事件（键）以及事件对应的监听器（值）。你也可以根据应用需求来增加事件到这个数组中。例如，增加一个 PostSaved 事件：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 应用程序的事件监听器映射。</div><div class="line"> *</div><div class="line"> * <span class="doctag">@var</span> array</div><div class="line"> */</div><div class="line"><span class="keyword">protected</span> $listen = [</div><div class="line">    <span class="string">'App\Events\PostSaved'</span>  =&gt;  [</div><div class="line">        <span class="string">'App\Listeners\PostSavedToCache'</span>,</div><div class="line">    ],</div><div class="line">];</div></pre></td></tr></table></figure>
<h4 id="生成事件和监听器"><a href="#生成事件和监听器" class="headerlink" title="生成事件和监听器"></a>生成事件和监听器</h4><p>当然，手动创建每个事件和监听器是很麻烦的。简单的方式是，在 <code>EventServiceProvider</code> 类中添加好事件和监听器，然后使用 <code>event:generate</code> 命令。这个命令会自动生成 <code>EventServiceProvider</code> 类中列出的所有事件和监听器。当然已经存在的事件和监听器将保持不变。我们在项目根目录运行如下Artisan命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php artisan event:generate</div></pre></td></tr></table></figure>
<p>该命令会在  <code>app/Events</code> 目录下生成 <code>PostSaved.php</code>，在<code>app/Listeners</code> 目录下生成 <code>SaveDataToCache.php</code>。</p>
<h4 id="手动注册事件"><a href="#手动注册事件" class="headerlink" title="手动注册事件"></a>手动注册事件</h4><p>一般来说，事件必须通过 <code>EventServiceProvider</code> 类的 <code>$listen</code> 数组进行注册；不过，你也可以在 <code>EventServiceProvider</code> 类的 <code>boot</code> 方法中注册闭包事件。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 注册应用程序中的任何其他事件。</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span> void</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">parent</span>::boot();</div><div class="line">    </div><div class="line">    <span class="comment">//name可以使用通配符'*',它让你在一个监听器中可以监听到多个事件。通配符监听器接受的第一个参数是事件名称，第二个参数是整个的事件数据：</span></div><div class="line">    Event::listen(<span class="string">'event.name'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($foo, $bar)</span>   </span>&#123;</div><div class="line">        <span class="comment">//</span></div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="定义事件"><a href="#定义事件" class="headerlink" title="定义事件"></a>定义事件</h3><p>事件类就是一个包含与事件相关信息数据的容器。接下来我们编辑事件类PostSaved如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Events</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Model</span>\<span class="title">Post</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>\<span class="title">Channel</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Queue</span>\<span class="title">SerializesModels</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>\<span class="title">PrivateChannel</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>\<span class="title">PresenceChannel</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Events</span>\<span class="title">Dispatchable</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>\<span class="title">InteractsWithSockets</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Broadcasting</span>\<span class="title">ShouldBroadcast</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Event</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PostSaved</span> <span class="keyword">extends</span> <span class="title">Event</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">use</span> <span class="title">Dispatchable</span>, <span class="title">InteractsWithSockets</span>, <span class="title">SerializesModels</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Create a new event instance.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Post $post)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;post = $post;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Get the channels the event should broadcast on.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> Channel|array</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">broadcastOn</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line"><span class="comment">//        return new PrivateChannel('channel-name');</span></div><div class="line">        <span class="keyword">return</span> [];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>正如你所见，这个事件类中没有包含其它逻辑。它仅只是一个被构建的 <code>Post</code> 对象的容器。如果使用 PHP 的 <code>serialize</code> 函数对事件进行序列化，使用了 <code>SerializesModels</code> trait 的事件将会优雅的序列化任何的 <code>Eloquent</code> 模型。</p>
<h3 id="定义监听器"><a href="#定义监听器" class="headerlink" title="定义监听器"></a>定义监听器</h3><p>接下来，让我们看一下例子中事件的监听器。事件监听器在 <code>handle</code> 方法中接受了事件实例作为参数。 <code>event:generate</code> 命令将会在事件的 <code>handle</code> 方法中自动加载正确的事件类和类型提示。在 <code>handle</code> 方法中，你可以运行任何需要响应该事件的业务逻辑。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Listeners</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Events</span>\<span class="title">PostSaved</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Queue</span>\<span class="title">InteractsWithQueue</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Queue</span>\<span class="title">ShouldQueue</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Cache</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Log</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PostSavedToCache</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Create the event listener.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="comment">//</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Handle the event.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span>  PostSaved  $event</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">(PostSaved $event)</span></span></div><div class="line">    &#123;</div><div class="line">        $post = $event-&gt;post;</div><div class="line">        $key = <span class="string">'post_'</span>.$post-&gt;id;</div><div class="line">        Cache::put($key,$post,<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</div><div class="line">        Log::info(<span class="string">'保存文章到缓存文件'</span>, [<span class="string">'id'</span> =&gt; $post-&gt;id, <span class="string">'title'</span> =&gt; $post-&gt;title]);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="停止事件传播"><a href="#停止事件传播" class="headerlink" title="停止事件传播"></a>停止事件传播</h4><p>有时，你可能希望停止一个事件传播到其他的监听器。这时你可以通过在监听器的 <code>handle</code> 方法中返回 <code>false</code> 来实现。</p>
<h3 id="触发事件"><a href="#触发事件" class="headerlink" title="触发事件"></a>触发事件</h3><p>最后我们来测试文章保存事件及其监听器。</p>
<p>要触发文章保存事件，可以使用<code>Event</code>门面提供的<code>fire</code>方法，在<code>PostController</code>中修改<code>add</code>方法如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(Request $request)</span></span></div><div class="line">&#123;</div><div class="line">    $post = <span class="keyword">new</span> Post();</div><div class="line">    $post-&gt;title = $request-&gt;input(<span class="string">'title'</span>);</div><div class="line">    $post-&gt;content = $request-&gt;input(<span class="string">'content'</span>);</div><div class="line">    <span class="keyword">if</span>($post-&gt;save())&#123;</div><div class="line">        event(<span class="keyword">new</span> PostSaved($post));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> redirect(<span class="string">'post'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>访问浏览器添加文章，添加后查看日志<code>storage/logs/laravel.log</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="number">2017</span><span class="number">-03</span><span class="number">-22</span> <span class="number">03</span>:<span class="number">27</span>:<span class="number">25</span>] local.INFO: 保存文章到缓存文件 &#123;<span class="string">"id"</span>:<span class="number">115</span>,<span class="string">"title"</span>:<span class="string">"标题1"</span>&#125;</div></pre></td></tr></table></figure>
<p>说明已触发文章保存事件，监听器监听到事件后将其保存到缓存中并记录日志。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;Laravel 事件机制实现了一个简单的观察者模式，让我们可以订阅和监听应用中出现的各种事件。事件类 (Event) 类通常保存在 &lt;code&gt;app/Events&lt;/code&gt; 目录下，而它们的监听类 (Listener) 类被保存在 &lt;code&gt;app/Listeners&lt;/code&gt; 目录下。如果你在应用中看不到这些文件夹也不要担心，因为当你使用 Artisan 命令来生成事件和监听器时他们会被自动创建。&lt;/p&gt;
&lt;p&gt;事件机制是一种很好的应用解耦方式，因为一个事件可以拥有多个互不依赖的监听器。例如，这里我们基于之前基于模型+缓存对文章增删改查这篇文件对文章保存后缓存的处理做进一步优化。我们将文章保存（新建/修改）视为一个事件，将保存文章内容到缓存放到监听器中实现：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Laravel" scheme="http://www.cenhq.com/categories/Laravel/"/>
    
    
      <category term="Events" scheme="http://www.cenhq.com/tags/Events/"/>
    
      <category term="Listeners" scheme="http://www.cenhq.com/tags/Listeners/"/>
    
      <category term="EventServiceProvider" scheme="http://www.cenhq.com/tags/EventServiceProvider/"/>
    
  </entry>
  
  <entry>
    <title>lumen 队列发送邮件</title>
    <link href="http://www.cenhq.com/2017/03/16/lumen-queue-sendEmail/"/>
    <id>http://www.cenhq.com/2017/03/16/lumen-queue-sendEmail/</id>
    <published>2017-03-16T02:34:44.000Z</published>
    <updated>2017-03-28T10:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Lumen 的队列服务为不同的队列后端系统提供了一套统一的 API 。队列允许你将一个耗时的任务进行延迟处理，例如像 e-mail 发送。这能让应用程序对页面的请求有更快的响应。</p>
<p>Lumen 和 Laravel 的队列功能除了接下来会列出来的不同点以外，并没有太大区别，所以更多关于 Lumen 队列的使用，请参阅 <a href="http://laravelacademy.org/post/6922.html" target="_blank" rel="external">Laravel</a> 文档 。</p>
<a id="more"></a>
<h3 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h3><p>队列的配置在 <code>.env</code> 中 <code>QUEUE_DRIVER</code> 选项里。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">QUEUE_DRIVER=database</div></pre></td></tr></table></figure>
<p>如果你想完全自定义配置信息，你可以复制 <code>vendor/laravel/lumen-framework/config/queue.php</code> 整个文件到 <code>config/queue.php</code> 中，根目录如果没有 <code>config</code> 的话你应该创建一个。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">return</span> [</div><div class="line"></div><div class="line">    <span class="string">'default'</span> =&gt; env(<span class="string">'QUEUE_DRIVER'</span>, <span class="string">'database'</span>),</div><div class="line"></div><div class="line">    <span class="string">'connections'</span> =&gt; [</div><div class="line"></div><div class="line">        <span class="string">'sync'</span> =&gt; [</div><div class="line">            <span class="string">'driver'</span> =&gt; <span class="string">'sync'</span>,</div><div class="line">        ],</div><div class="line"></div><div class="line">        <span class="string">'database'</span> =&gt; [</div><div class="line">            <span class="string">'driver'</span> =&gt; <span class="string">'database'</span>,</div><div class="line">            <span class="string">'table'</span> =&gt; <span class="string">'jobs'</span>,</div><div class="line">            <span class="string">'queue'</span> =&gt; <span class="string">'default'</span>,</div><div class="line">            <span class="string">'retry_after'</span> =&gt; <span class="number">60</span>,</div><div class="line">        ],</div><div class="line"></div><div class="line">        <span class="string">'beanstalkd'</span> =&gt; [</div><div class="line">            <span class="string">'driver'</span> =&gt; <span class="string">'beanstalkd'</span>,</div><div class="line">            <span class="string">'host'</span> =&gt; <span class="string">'localhost'</span>,</div><div class="line">            <span class="string">'queue'</span> =&gt; <span class="string">'default'</span>,</div><div class="line">            <span class="string">'retry_after'</span> =&gt; <span class="number">60</span>,</div><div class="line">        ],</div><div class="line"></div><div class="line">        <span class="string">'sqs'</span> =&gt; [</div><div class="line">            <span class="string">'driver'</span> =&gt; <span class="string">'sqs'</span>,</div><div class="line">            <span class="string">'key'</span> =&gt; <span class="string">'your-public-key'</span>,</div><div class="line">            <span class="string">'secret'</span> =&gt; <span class="string">'your-secret-key'</span>,</div><div class="line">            <span class="string">'queue'</span> =&gt; <span class="string">'your-queue-url'</span>,</div><div class="line">            <span class="string">'region'</span> =&gt; <span class="string">'us-east-1'</span>,</div><div class="line">        ],</div><div class="line"></div><div class="line">        <span class="string">'redis'</span> =&gt; [</div><div class="line">            <span class="string">'driver'</span> =&gt; <span class="string">'redis'</span>,</div><div class="line">            <span class="string">'connection'</span> =&gt; <span class="string">'default'</span>,</div><div class="line">            <span class="string">'queue'</span> =&gt; <span class="string">'default'</span>,</div><div class="line">            <span class="string">'retry_after'</span> =&gt; <span class="number">60</span>,</div><div class="line">        ],</div><div class="line"></div><div class="line">    ],</div><div class="line"></div><div class="line">    <span class="string">'failed'</span> =&gt; [</div><div class="line">        <span class="string">'database'</span> =&gt; env(<span class="string">'DB_CONNECTION'</span>, <span class="string">'mysql'</span>),</div><div class="line">        <span class="string">'table'</span> =&gt; env(<span class="string">'QUEUE_FAILED_TABLE'</span>, <span class="string">'failed_jobs'</span>),</div><div class="line">    ],</div><div class="line">];</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><p>要使用 <code>database</code> 这个队列驱动的话，则需要创建一个数据表来记住任务:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Schema::create(<span class="string">'jobs'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</div><div class="line">    $table-&gt;bigIncrements(<span class="string">'id'</span>);</div><div class="line">    $table-&gt;string(<span class="string">'queue'</span>);</div><div class="line">    $table-&gt;longText(<span class="string">'payload'</span>);</div><div class="line">    $table-&gt;tinyInteger(<span class="string">'attempts'</span>)-&gt;unsigned();</div><div class="line">    $table-&gt;tinyInteger(<span class="string">'reserved'</span>)-&gt;unsigned();</div><div class="line">    $table-&gt;unsignedInteger(<span class="string">'reserved_at'</span>)-&gt;nullable();</div><div class="line">    $table-&gt;unsignedInteger(<span class="string">'available_at'</span>);</div><div class="line">    $table-&gt;unsignedInteger(<span class="string">'created_at'</span>);</div><div class="line">    $table-&gt;index([<span class="string">'queue'</span>, <span class="string">'reserved'</span>, <span class="string">'reserved_at'</span>]);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="生成任务类"><a href="#生成任务类" class="headerlink" title="生成任务类"></a>生成任务类</h3><p>Lumen 中没有可用来生成事件监听器的命令，你可以复制 <code>ExampleJob</code> 文件，这个示例文件提供了基础的类结构，你可以作为参考。基类 <code>Job</code> 已经加载了我们需要的 traits <code>InteractsWithQueue</code>, <code>Queueable</code>, 和 <code>SerializesModels</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Jobs</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Mail</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SendReminderEmail</span> <span class="keyword">extends</span> <span class="title">Job</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">protected</span> $email;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> $active;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> $subject;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 创建一个新的任务实例</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> $email</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($email, $active, $subject)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;email = $email;</div><div class="line">        <span class="keyword">$this</span>-&gt;active = $active;</div><div class="line">        <span class="keyword">$this</span>-&gt;subject = $subject;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行任务</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        Mail::send(<span class="string">'emails.welcome'</span>, [<span class="string">'active'</span> =&gt; <span class="keyword">$this</span>-&gt;active, <span class="string">'subject'</span> =&gt; <span class="keyword">$this</span>-&gt;subject], <span class="function"><span class="keyword">function</span> <span class="params">($message)</span></span>&#123;</div><div class="line">            $message-&gt;to(<span class="keyword">$this</span>-&gt;email)-&gt;subject(<span class="keyword">$this</span>-&gt;subject);</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="将任务推送到队列上"><a href="#将任务推送到队列上" class="headerlink" title="将任务推送到队列上"></a>将任务推送到队列上</h3><p>就如 Laravel 一样，你可使用 <code>dispatch</code> 辅助函数来推送任务到队列上:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dispatch(<span class="keyword">new</span> ExampleJob);</div></pre></td></tr></table></figure>
<p>当然，你也可以使用 <code>Queue</code> facade。 如果你想使用 facade 的话，你需要在 <code>bootstrap/app.php</code> 中把 <code>$app-&gt;withFacades()</code> 这行调用的注释去除掉。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Queue::push(<span class="keyword">new</span> SendReminderEmail($user[<span class="string">'email'</span>], <span class="keyword">$this</span>-&gt;active($user[<span class="string">'email'</span>],$user[<span class="string">'id'</span>]),<span class="string">'注册成功'</span>));</div></pre></td></tr></table></figure>
<h4 id="延迟分发"><a href="#延迟分发" class="headerlink" title="延迟分发"></a>延迟分发</h4><p>有时候你可能想要延迟队列任务的执行，可以通过在任务实例使用 <code>delay</code> 方法。该方法由<code>Illuminate\Bus\Queueable</code> trait提供，已经自动添加在通过命令行生成的任务类中。例如你希望将某个任务在创建 10 分钟以后才执行：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Queue::push(<span class="keyword">new</span> SendReminderEmail($user[<span class="string">'email'</span>], <span class="keyword">$this</span>-&gt;active($user[<span class="string">'email'</span>],$user[<span class="string">'id'</span>])-&gt;delay(Carbon::now())-&gt;addMinute(<span class="number">10</span>),<span class="string">'注册成功'</span>));</div></pre></td></tr></table></figure>
<h4 id="自定义队列和连接"><a href="#自定义队列和连接" class="headerlink" title="自定义队列和连接"></a>自定义队列和连接</h4><p>通过推送任务到不同队列，你可以将队列任务进行“分类”，甚至根据优先级来分配每个队列的进程数。请注意，这并不意味着使用了配置项中那些不同的连接来管理队列，实际上只有单一连接会被用到。要指定队列，请在任务实例使用 <code>onQueue</code> 方法。要指定连接设备可以用 <code>onConnection</code> 方法。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Queue::push(<span class="keyword">new</span> SendReminderEmail($user[<span class="string">'email'</span>], <span class="keyword">$this</span>-&gt;active($user[<span class="string">'email'</span>],$user[<span class="string">'id'</span>])-&gt;onConnection(<span class="string">'redis'</span>)-&gt;onQueue(<span class="string">'emails'</span>),<span class="string">'注册成功'</span>));</div></pre></td></tr></table></figure>
<h4 id="指定最大失败次数-超时时间"><a href="#指定最大失败次数-超时时间" class="headerlink" title="指定最大失败次数/超时时间"></a>指定最大失败次数/超时时间</h4><p>指定队列任务最大失败次数的一种实现方式是通过 Artisan 命令 <code>--tries</code> 切换：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan queue:work --tries=<span class="number">3</span></div></pre></td></tr></table></figure>
<p>类似的，队列任务最大运行时长（秒）可以通过 Artisan 命令 <code>--timeout</code> 来指定</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan queue:work --timeout=<span class="number">30</span></div></pre></td></tr></table></figure>
<h3 id="运行队列任务"><a href="#运行队列任务" class="headerlink" title="运行队列任务"></a>运行队列任务</h3><p>Laravel 包含了一个队列进程用来处理被推送到队列的新任务。你可以使用 <code>queue:work</code> 命令运行队列进程。请注意，队列进程开始运行后，会持续监听队列，直至你手动停止或关闭终端：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan queue:work</div></pre></td></tr></table></figure>
<blockquote>
<p>注：为了保持队列进程 <code>queue:work</code> 持续在后台运行，需要使用进程守护程序，比如 <code>Supervisor</code> 来确保队列进程持续运行。</p>
</blockquote>
<p>请记住，队列进程是长生命周期的进程，会在启动后驻留内存。若应用有任何改动将不会影响到已经启动的进程。所以请在发布程序后，重启队列进程。</p>
<h3 id="配置Supervisor"><a href="#配置Supervisor" class="headerlink" title="配置Supervisor"></a>配置Supervisor</h3><p>Supervisor 是 Linux 系统中常用的进程守护程序。如果队列进程 <code>queue:work</code> 意外关闭，它会自动重启启动队列进程。在 Mac 安装Supervisor 非常简单：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ brew search |grep supervisor                                                                                                                       </div><div class="line">supervisor</div><div class="line">$ brew install supervisor</div></pre></td></tr></table></figure>
<h4 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h4><p>Supervisor 配置文件通常存放在 <code>/usr/local/etc/supervisord.conf</code> 目录，在该目录中，可以创建多个配置文件指示 <code>Supervisor</code> 如何监视进程，例如，让我们创建一个开启并监视<code>queue:work</code> 进程的 <code>laravel-worker.conf</code> 文件：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[program:laravel-worker]</div><div class="line">process_name=%(program_name)s_%(process_num)<span class="number">02</span>d</div><div class="line">command=php /Users/zt<span class="number">-2203315</span>/www/gametest/artisan queue:work  --sleep=<span class="number">3</span> --tries=<span class="number">3</span></div><div class="line">autostart=<span class="keyword">true</span></div><div class="line">autorestart=<span class="keyword">true</span></div><div class="line">numprocs=<span class="number">8</span></div><div class="line">redirect_stderr=<span class="keyword">true</span></div><div class="line">stdout_logfile=/tmp/worker.log</div></pre></td></tr></table></figure>
<p>在本例中，<code>numprocs</code> 指令让 Supervisor 运行 8 个 <code>queue:work</code> 进程并监视它们，如果失败的话自动重启。当然，你需要修改 <code>queue:work</code> <code>database</code> 的 <code>command</code> 指令来映射你的队列连接。</p>
<h4 id="启动Supervisor"><a href="#启动Supervisor" class="headerlink" title="启动Supervisor"></a>启动Supervisor</h4><p>当你成功创建配置文件后，你需要刷新 Supervisor 的配置信息并使用如下命令启动进程:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ supervisord</div><div class="line">$ ps aux |grep supervisord |grep -v grep</div><div class="line">zt-2203315       94458   0.0  0.0  2470732   6320   ??  Ss    6:12PM   0:01.65 /usr/<span class="built_in">local</span>/Cellar/supervisor/3.3.1/libexec/bin/python /usr/<span class="built_in">local</span>/bin/supervisord</div><div class="line">$ supervisorctl</div><div class="line">laravel-worker:laravel-worker_00   RUNNING   pid 94546, uptime 0:35:28</div><div class="line">laravel-worker:laravel-worker_01   RUNNING   pid 94547, uptime 0:35:28</div><div class="line">laravel-worker:laravel-worker_02   RUNNING   pid 94548, uptime 0:35:28</div><div class="line">laravel-worker:laravel-worker_03   RUNNING   pid 94549, uptime 0:35:28</div><div class="line">laravel-worker:laravel-worker_04   RUNNING   pid 94550, uptime 0:35:28</div><div class="line">laravel-worker:laravel-worker_05   RUNNING   pid 94551, uptime 0:35:28</div><div class="line">laravel-worker:laravel-worker_06   RUNNING   pid 94552, uptime 0:35:28</div><div class="line">laravel-worker:laravel-worker_07   RUNNING   pid 94553, uptime 0:35:28</div></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote>
<p>请注意：要先停止supervisor的laravel-work服务</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">supervisor&gt; shutdown</div><div class="line">Really shut the remote supervisord process down y/N? y</div><div class="line">Shut down</div></pre></td></tr></table></figure>
<p>发送邮件给用户</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"code"</span>: <span class="number">0</span>,</div><div class="line">  <span class="string">"data"</span>: <span class="string">""</span>,</div><div class="line">  <span class="string">"msg"</span>: <span class="string">"邮件已重新发送"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>测试结果<br><img src="/2017/03/16/lumen-queue-sendEmail/QQ20170315-0.png" alt=""></p>
<p>启动supervisor</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ supervisord</div><div class="line">$ tail <span class="_">-f</span> /tmp/worker.log</div><div class="line">[2017-03-15 18:56:46] Processed: App\Jobs\SendReminderEmail</div></pre></td></tr></table></figure>
<p>再次查看数据表,已经为空<br><img src="/2017/03/16/lumen-queue-sendEmail/QQ20170315-1.png" alt=""></p>
<p>查看邮箱<br><img src="/2017/03/16/lumen-queue-sendEmail/QQ20170315-2.png" alt=""></p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://lumen.laravel-china.org/docs/5.3/queues" target="_blank" rel="external">https://lumen.laravel-china.org/docs/5.3/queues</a></p>
<p><a href="http://laravelacademy.org/post/6922.html" target="_blank" rel="external">http://laravelacademy.org/post/6922.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;Lumen 的队列服务为不同的队列后端系统提供了一套统一的 API 。队列允许你将一个耗时的任务进行延迟处理，例如像 e-mail 发送。这能让应用程序对页面的请求有更快的响应。&lt;/p&gt;
&lt;p&gt;Lumen 和 Laravel 的队列功能除了接下来会列出来的不同点以外，并没有太大区别，所以更多关于 Lumen 队列的使用，请参阅 &lt;a href=&quot;http://laravelacademy.org/post/6922.html&quot;&gt;Laravel&lt;/a&gt; 文档 。&lt;/p&gt;
    
    </summary>
    
      <category term="Lumen" scheme="http://www.cenhq.com/categories/Lumen/"/>
    
      <category term="PHP" scheme="http://www.cenhq.com/categories/Lumen/PHP/"/>
    
    
      <category term="supervisord" scheme="http://www.cenhq.com/tags/supervisord/"/>
    
      <category term="queue" scheme="http://www.cenhq.com/tags/queue/"/>
    
      <category term="sendEmail" scheme="http://www.cenhq.com/tags/sendEmail/"/>
    
  </entry>
  
  <entry>
    <title>lumen 头像上传</title>
    <link href="http://www.cenhq.com/2017/03/06/lumen-avatar-upload/"/>
    <id>http://www.cenhq.com/2017/03/06/lumen-avatar-upload/</id>
    <published>2017-03-06T05:50:17.000Z</published>
    <updated>2017-03-28T10:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p><code>Lumen</code> 可以使用 <code>Illuminate\Http\Request</code> 实例中的 <code>file</code> 方法来获取上传文件。<code>file</code>方法返回的对象是 <code>Symfony\Component\HttpFoundation\File\UploadedFile</code> 类的实例，该类继承了 PHP 的 <code>SplFileInfo</code> 类，并提供了许多和文件交互的方法：<br></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$file = $request-&gt;file(<span class="string">'photo'</span>);</div></pre></td></tr></table></figure>
<p>你可以使用请求的 <code>hasFile</code> 方法确认上传的文件是否存在：<br><br><a id="more"></a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ($request-&gt;hasFile(<span class="string">'photo'</span>)) &#123;</div><div class="line">    <span class="comment">//</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>除了检查上传的文件是否存在外，你也可以通过 <code>isValid</code> 方法验证上传的文件是否有效<br></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ($request-&gt;file(<span class="string">'photo'</span>)-&gt;isValid()) &#123;</div><div class="line">    <span class="comment">//</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>移动上传的文件<br>若要移动上传的文件至新位置，则必须使用 <code>move</code> 方法。该方法会将文件从缓存位置（由你的 PHP 配置决定）移动至你指定的永久保存位置：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$request-&gt;file(<span class="string">'photo'</span>)-&gt;move($destinationPath);</div><div class="line"></div><div class="line">$request-&gt;file(<span class="string">'photo'</span>)-&gt;move($destinationPath, $fileName);</div></pre></td></tr></table></figure>
<h5 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h5><p>创建保存文件的目录</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">mk_dir</span><span class="params">($path)</span></span></div><div class="line">    &#123;</div><div class="line">        $dir = date(<span class="string">'y/md'</span>, time());</div><div class="line">        <span class="keyword">if</span>(is_dir($path . <span class="string">'/'</span> . $dir))&#123;</div><div class="line">            <span class="keyword">return</span> $path . <span class="string">'/'</span> . $dir;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            mkdir($path . <span class="string">'/'</span> . $dir,<span class="number">0777</span>,<span class="keyword">true</span>);</div><div class="line">            <span class="keyword">return</span> $path . <span class="string">'/'</span> . $dir;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>上传文件</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">uploadAvatar</span><span class="params">(Request $request)</span></span></div><div class="line">    &#123;</div><div class="line">        $id = Auth::user()-&gt;id;</div><div class="line">        <span class="comment">//获取文件</span></div><div class="line">        $avatar = $request-&gt;file(<span class="string">'avatar'</span>);</div><div class="line">        <span class="comment">//判断文件是否有效</span></div><div class="line">        <span class="keyword">if</span>(!($request-&gt;hasFile(<span class="string">'avatar'</span>) &amp;&amp; $avatar-&gt;isValid()))</div><div class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;formatOutput(<span class="number">1</span>, <span class="string">''</span>, <span class="string">'没有图片'</span>);</div><div class="line">        <span class="comment">//表单验证</span></div><div class="line">        $userinfo = <span class="keyword">new</span> Userinfo();</div><div class="line">        $validator_userinfo = <span class="keyword">$this</span>-&gt;ruleValidator($request, $userinfo-&gt;rules([<span class="string">'avatar'</span>]), $userinfo-&gt;message());</div><div class="line">        <span class="keyword">if</span>($validator_userinfo)</div><div class="line">            <span class="keyword">return</span> $validator_userinfo;</div><div class="line">        <span class="comment">//获取文件后缀</span></div><div class="line">        $ext = $avatar-&gt;getClientMimeType();</div><div class="line">        $ext = explode(<span class="string">'/'</span>,$ext);</div><div class="line">        <span class="comment">//获取文件大小</span></div><div class="line">        $img_size = floor($avatar-&gt;getSize() / <span class="number">1024</span>) . <span class="string">'KB'</span>;</div><div class="line">        <span class="keyword">if</span>($img_size &gt;= <span class="number">2048</span>)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;formatOutput(<span class="number">1</span>, <span class="string">''</span>, <span class="string">'文件大小不能超过2MB'</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//存储图片</span></div><div class="line">        $request-&gt;file(<span class="string">'avatar'</span>)-&gt;move(<span class="keyword">$this</span>-&gt;mk_dir(<span class="keyword">$this</span>-&gt;path), <span class="string">'/'</span> . $avatar-&gt;getFilename() . <span class="string">'.'</span> . $ext[<span class="number">1</span>]);</div><div class="line">        $src_img_path = <span class="keyword">$this</span>-&gt;mk_dir(<span class="keyword">$this</span>-&gt;path) . <span class="string">'/'</span> . $avatar-&gt;getFilename() . <span class="string">'.'</span> . $ext[<span class="number">1</span>];</div><div class="line">        $des_img_path = <span class="keyword">$this</span>-&gt;mk_dir(<span class="keyword">$this</span>-&gt;small_path) . <span class="string">'/'</span> . <span class="string">'small_'</span> . $avatar-&gt;getFilename() . <span class="string">'.'</span> . $ext[<span class="number">1</span>];</div><div class="line">        <span class="comment">//生成缩略图</span></div><div class="line">        $slt = <span class="keyword">$this</span>-&gt;CreateImage($src_img_path, $des_img_path, <span class="number">40</span>,<span class="number">40</span>);</div><div class="line">        <span class="keyword">if</span>($slt)&#123;</div><div class="line">            <span class="comment">//保存到数据库</span></div><div class="line">            $res = DB::update(<span class="string">'update userinfo set avatar ="'</span>. $des_img_path . <span class="string">'" where userid = '</span>.$id);</div><div class="line">            <span class="keyword">if</span>($res)&#123;</div><div class="line">                $data[<span class="string">'avatar'</span>] = $des_img_path;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;formatOutput(<span class="number">0</span>, $data, <span class="string">'文件上传成功'</span>);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;formatOutput(<span class="number">1</span>, <span class="string">''</span>, <span class="string">'文件上传失败'</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;formatOutput(<span class="number">1</span>, <span class="string">''</span>, <span class="string">'生成缩略图失败'</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>生成缩略图代码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">protected</span>  <span class="function"><span class="keyword">function</span> <span class="title">CreateImage</span><span class="params">($SrcImageUrl, $DirImageUrl, $Width, $Height)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="comment">// 图片类型</span></div><div class="line">        $type = substr(strrchr($SrcImageUrl, <span class="string">"."</span>), <span class="number">1</span>);</div><div class="line"></div><div class="line">        <span class="comment">// 初始化图像</span></div><div class="line">        <span class="keyword">if</span> ($type == <span class="string">"jpg"</span>)</div><div class="line">            $img = imagecreatefromjpeg($SrcImageUrl);</div><div class="line">        <span class="keyword">if</span> ($type == <span class="string">"gif"</span>)</div><div class="line">            $img = imagecreatefromgif($SrcImageUrl);</div><div class="line">        <span class="keyword">if</span> ($type == <span class="string">"png"</span>)</div><div class="line">            $img = imagecreatefrompng($SrcImageUrl);</div><div class="line"></div><div class="line">        $srcw = imagesx($img);</div><div class="line">        $srch = imagesy($img);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ($srcw / $srch &gt; $Width / $Height) &#123;</div><div class="line">            <span class="keyword">if</span> ($srcw &gt; $Width) &#123;</div><div class="line">                $new_width = $Width;</div><div class="line">                $new_height = $srch * ($Width / $srcw);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                $new_width = $srcw;</div><div class="line">                $new_height = $srch;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span> ($srch &gt; $Height) &#123;</div><div class="line">                $new_height = $Height;</div><div class="line">                $new_width = $srcw * ($Height / $srch);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                $new_width = $srcw;</div><div class="line">                $new_height = $srch;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        $new_image = imagecreatetruecolor($new_width, $new_height);</div><div class="line">        imagecopyresampled($new_image, $img, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, $new_width, $new_height, $srcw, $srch);</div><div class="line">        imagejpeg($new_image, $DirImageUrl);</div><div class="line"></div><div class="line">        imagedestroy($img);</div><div class="line">        imagedestroy($new_image);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p>返回结果</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"code"</span>: <span class="number">0</span>,</div><div class="line">  <span class="string">"data"</span>: &#123;</div><div class="line">    <span class="string">"avatar"</span>: <span class="string">"small_avatar/17/0302/small_phpXkcJAT.png"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"msg"</span>: <span class="string">"文件上传成功"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h5&gt;&lt;p&gt;&lt;code&gt;Lumen&lt;/code&gt; 可以使用 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 实例中的 &lt;code&gt;file&lt;/code&gt; 方法来获取上传文件。&lt;code&gt;file&lt;/code&gt;方法返回的对象是 &lt;code&gt;Symfony\Component\HttpFoundation\File\UploadedFile&lt;/code&gt; 类的实例，该类继承了 PHP 的 &lt;code&gt;SplFileInfo&lt;/code&gt; 类，并提供了许多和文件交互的方法：&lt;br&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$file = $request-&amp;gt;file(&lt;span class=&quot;string&quot;&gt;&#39;photo&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你可以使用请求的 &lt;code&gt;hasFile&lt;/code&gt; 方法确认上传的文件是否存在：&lt;br&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.cenhq.com/categories/PHP/"/>
    
      <category term="Lumen" scheme="http://www.cenhq.com/categories/PHP/Lumen/"/>
    
    
      <category term="uploadFile" scheme="http://www.cenhq.com/tags/uploadFile/"/>
    
      <category term="avatar" scheme="http://www.cenhq.com/tags/avatar/"/>
    
  </entry>
  
  <entry>
    <title>密码错误3次锁定账号</title>
    <link href="http://www.cenhq.com/2017/03/03/after-locking-verity-password-three-times-failure/"/>
    <id>http://www.cenhq.com/2017/03/03/after-locking-verity-password-three-times-failure/</id>
    <published>2017-03-03T05:23:11.000Z</published>
    <updated>2017-03-28T10:42:00.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="逻辑简介"><a href="#逻辑简介" class="headerlink" title="逻辑简介"></a>逻辑简介</h5><p>创建数据表</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`userlock`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'主键id'</span>,</div><div class="line">  <span class="string">`userid`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户id'</span>,</div><div class="line">  <span class="string">`lock_time`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'14400'</span> <span class="keyword">COMMENT</span> <span class="string">'锁定时间，默认14400秒'</span>,</div><div class="line">  <span class="string">`error_times`</span> tinyint(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'错误次数，默认0次'</span>,</div><div class="line">  <span class="string">`last_login`</span> <span class="keyword">timestamp</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">COMMENT</span> <span class="string">'最新登录时间'</span>,</div><div class="line">  <span class="string">`created_at`</span> <span class="keyword">timestamp</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`updated_at`</span> <span class="keyword">timestamp</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</div><div class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`userid`</span> (<span class="string">`userid`</span>)</div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">23</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div></pre></td></tr></table></figure>
<a id="more"></a>
<ol>
<li>判断用户是否在<code>userlock</code>表中；如果不存在，则继续验证登录密码；</li>
<li>如果存在，则判断<code>userlock</code>中的当前时间<code>time()</code>减去<code>last_login</code>是否大于<code>lock_time</code>，如果大于，则继续验证密码；否则判断<code>error_times</code>是否大于等于3次，如果大于，返回<code>false</code>;</li>
<li>回到第一步，验证密码，如果密码错误并且用户不存在<code>userlock</code>表中，则插入数据；<code>error_times</code>为1，<code>last_login</code>为当前时间；写入到<code>userlock</code>表中；</li>
<li>如果用户已在<code>userlock</code>表中，则判断<code>time()</code>减去<code>last_login</code>是否大于<code>lock_time</code>,如果大于则<code>error_times</code>为1，否则<code>error_times</code>自加1, <code>last_login</code>为当前时间;写入到<code>userlock</code>表中；</li>
<li>还是回到第一步，验证密码，如果密码正确，则判断该用户是否在<code>userlock</code>表中;如果存在，则<code>error_times</code>为0，<code>last_login</code>为当前时间，保存该表；</li>
</ol>
<h5 id="代码逻辑"><a href="#代码逻辑" class="headerlink" title="代码逻辑"></a>代码逻辑</h5><p>用户登录前,检测用户是否在锁表内</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkLock</span><span class="params">($userid)</span></span></div><div class="line">    &#123;</div><div class="line">        $userlock = <span class="keyword">new</span> UserLock();</div><div class="line">        $userlock_data = $userlock-&gt;where(<span class="string">'userid'</span>, <span class="string">'='</span>, $userid)-&gt;first();</div><div class="line">        <span class="comment">//用户不在锁表内</span></div><div class="line">        <span class="keyword">if</span>(!$userlock_data) <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        <span class="comment">//用户在锁表内,并且锁定时间小于4小时,并且错误次数大于3;</span></div><div class="line">        $validTime = time() - strtotime($userlock_data[<span class="string">'last_login'</span>]);</div><div class="line">        <span class="keyword">if</span>($validTime &lt; $userlock_data[<span class="string">'lock_time'</span>])&#123;</div><div class="line">            <span class="keyword">if</span>($userlock_data[<span class="string">'error_times'</span>] &gt;= <span class="number">3</span>)</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>判断用户是否在<code>userlock</code>中</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insertlock</span><span class="params">($id)</span></span></div><div class="line">    &#123;</div><div class="line">        $userlock = <span class="keyword">new</span> UserLock();</div><div class="line">        $userlock_data = UserLock::where(<span class="string">"userid"</span>,$id)-&gt;first();</div><div class="line">        <span class="keyword">if</span>($userlock_data)&#123;</div><div class="line">            $userlock = UserLock::find($userlock_data[<span class="string">'id'</span>]);</div><div class="line">            $userlock-&gt;userid = $id;</div><div class="line">            <span class="comment">//如果锁表的时间在4小时之内,则error_times + 1;否则为1;</span></div><div class="line">            $validTime = time() - strtotime($userlock_data[<span class="string">'last_login'</span>]);</div><div class="line">            <span class="keyword">if</span>($validTime &lt; $userlock_data[<span class="string">'lock_time'</span>]) &#123;</div><div class="line">                $userlock-&gt;error_times += <span class="number">1</span>;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                $userlock-&gt;error_times = <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">            $userlock-&gt;last_login = date(<span class="string">'Y-m-d H:i:m'</span>, time());</div><div class="line">            <span class="keyword">if</span>($userlock-&gt;save())</div><div class="line">                <span class="keyword">return</span> $userlock;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="comment">//如果用户不在锁表内,则新增;</span></div><div class="line">            $userlock-&gt;userid = $id;</div><div class="line">            $userlock-&gt;error_times = <span class="number">1</span>;</div><div class="line">            $userlock-&gt;last_login = date(<span class="string">'Y-m-d H:i:m'</span>, time());</div><div class="line">            <span class="keyword">if</span>($userlock-&gt;save())</div><div class="line">                <span class="keyword">return</span> $userlock;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>如果密码验证成功</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$userlock = $userlock-&gt;where(<span class="string">'userid'</span>,<span class="string">'='</span>,$user_data[<span class="string">'id'</span>])-&gt;first();</div><div class="line"><span class="keyword">if</span>($userlock)&#123;</div><div class="line">    $userlock-&gt;error_times = <span class="number">0</span>;</div><div class="line">    $userlock-&gt;last_login = date(<span class="string">'Y-m-d H:i:m'</span>, time());</div><div class="line">    $userlock-&gt;save();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;逻辑简介&quot;&gt;&lt;a href=&quot;#逻辑简介&quot; class=&quot;headerlink&quot; title=&quot;逻辑简介&quot;&gt;&lt;/a&gt;逻辑简介&lt;/h5&gt;&lt;p&gt;创建数据表&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`userlock`&lt;/span&gt; (&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;主键id&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`userid`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;用户id&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`lock_time`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;14400&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;锁定时间，默认14400秒&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`error_times`&lt;/span&gt; tinyint(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;错误次数，默认0次&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`last_login`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;最新登录时间&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`created_at`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`updated_at`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;UNIQUE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`userid`&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`userid`&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; AUTO_INCREMENT=&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.cenhq.com/categories/PHP/"/>
    
      <category term="Lumen" scheme="http://www.cenhq.com/categories/PHP/Lumen/"/>
    
    
      <category term="password-verity" scheme="http://www.cenhq.com/tags/password-verity/"/>
    
      <category term="lock-user" scheme="http://www.cenhq.com/tags/lock-user/"/>
    
      <category term="three-times" scheme="http://www.cenhq.com/tags/three-times/"/>
    
  </entry>
  
  <entry>
    <title>lumen表单验证</title>
    <link href="http://www.cenhq.com/2017/03/03/lumen-form-validate/"/>
    <id>http://www.cenhq.com/2017/03/03/lumen-form-validate/</id>
    <published>2017-03-03T05:15:54.000Z</published>
    <updated>2017-03-28T10:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>Lumen 提供了多种不同的处理方法来对应用程序传入的数据进行验证。默认情况下，Lumen 的基底控制器类使用了 ValidatesRequests trait，其提供了一种便利的方法来使用各种强大的验证规则验证传入的 HTTP 请求。</p>
<p>Lumen 和 Laravel 验证功能除了接下来会列出来的不同点以外，并没有太大区别，所以更多关于 Lumen 验证的使用，请参阅 Laravel 文档 。</p>
<blockquote>
<p>Lumen 与 Laravel 不同，表单请求验证需要Laravel支持。Lumen 可以使用<code>$this-validate</code>方法来验证。</p>
<p>还有不同的是，Lumen 支持路由闭包的方式直接使用<code>validate</code>方法<br><a id="more"></a></p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</div><div class="line"></div><div class="line">$app-&gt;post(<span class="string">'/user'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Request $request)</span> </span>&#123;</div><div class="line">    <span class="keyword">$this</span>-&gt;validate($request, [</div><div class="line">        <span class="string">'name'</span> =&gt; <span class="string">'required'</span>,</div><div class="line">        <span class="string">'email'</span> =&gt; <span class="string">'required|email|unique:users'</span></div><div class="line">    ]);</div><div class="line"></div><div class="line">    <span class="comment">// 存储用户...</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<blockquote>
<p>同样可以使用<code>Validator::make()</code> facade方法来验证</p>
</blockquote>
<h5 id="添加验证规则"><a href="#添加验证规则" class="headerlink" title="添加验证规则"></a>添加验证规则</h5><p>验证规则可以放在路由下，也可以放在<code>Controller</code>方法下；</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span><span class="params">(Request $request)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">$this</span>-&gt;validate($request, [</div><div class="line">        <span class="string">'title'</span> =&gt; <span class="string">'required|unique:posts|max:255'</span>,</div><div class="line">        <span class="string">'body'</span> =&gt; <span class="string">'required'</span>,</div><div class="line">    ]);</div><div class="line"></div><div class="line">    <span class="comment">// The blog post is valid, store in database...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如你所见，我们将本次 HTTP 请求及所需的验证规则传递至 validate 方法中。另外再提醒一次，如果验证失败，将会自动生成一个对应的响应。如果验证通过，那我们的控制器将会继续正常运行。</p>
<p>本人使用验证规则放在<code>Model</code>中的方法里</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">($array = [<span class="string">'username'</span>, <span class="string">'email'</span>, <span class="string">'password'</span>, <span class="string">'mobile_no'</span>, <span class="string">'old_password'</span>])</span></span></div><div class="line">   &#123;</div><div class="line">       $rules =  [</div><div class="line">           <span class="string">'username'</span> =&gt;  <span class="string">'required|regex:/^[a-zA-Z][a-zA-Z0-9]&#123;5,11&#125;$/'</span>,</div><div class="line">           <span class="string">'email'</span> =&gt;  <span class="string">'required|email'</span>,</div><div class="line">           <span class="string">'password'</span>  =&gt; <span class="string">'required|min:6'</span>,</div><div class="line">           <span class="string">'old_password'</span>  =&gt; <span class="string">'required|min:6'</span>,</div><div class="line">           <span class="string">'mobile_no'</span> =&gt; <span class="string">'required|numeric|digits:11'</span>,</div><div class="line">       ];</div><div class="line">       <span class="keyword">foreach</span>($array <span class="keyword">as</span> $item)&#123;</div><div class="line">           $data[$item] =  $rules[$item];</div><div class="line">       &#125;</div><div class="line">       <span class="keyword">return</span> $data;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>并且附上自定义错误信息</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">message</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span>  [</div><div class="line">            <span class="string">'username.required'</span> =&gt; <span class="string">'请填写用户名'</span>,</div><div class="line">            <span class="string">'username.unique'</span> =&gt; <span class="string">'用户名已存在'</span>,</div><div class="line">            <span class="string">'username.regex'</span> =&gt; <span class="string">'用户名不合法'</span>,</div><div class="line">            <span class="string">'email.required'</span> =&gt; <span class="string">'请填写邮箱地址'</span>,</div><div class="line">            <span class="string">'email.unique'</span>    =&gt;  <span class="string">'邮箱名已存在'</span>,</div><div class="line">            <span class="string">'email.email'</span> =&gt;  <span class="string">'邮箱名不合法'</span>,</div><div class="line">            <span class="string">'password.required'</span>    =&gt;  <span class="string">'请填写密码'</span>,</div><div class="line">            <span class="string">'password.min'</span>  =&gt;  <span class="string">'密码至少需要 :min 位字符'</span>,</div><div class="line">            <span class="string">'mobile_no.required'</span>    =&gt;  <span class="string">'请填写手机号'</span>,</div><div class="line">            <span class="string">'mobile_no.unique'</span>  =&gt;  <span class="string">'手机号已存在'</span>,</div><div class="line">            <span class="string">'mobile_no.numeric'</span> =&gt;  <span class="string">'手机号必须为数字'</span>,</div><div class="line">            <span class="string">'mobile_no.digits'</span>  =&gt;  <span class="string">'手机号必须为 :digits 位'</span>,</div><div class="line">        ];</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h5 id="添加规则"><a href="#添加规则" class="headerlink" title="添加规则"></a>添加规则</h5><p>在基础类里添加验证方法</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Validator</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ruleValidator</span><span class="params">(Request $request, $rule=[], $message=[])</span></span></div><div class="line">    &#123;</div><div class="line">        $validator = Validator::make($request-&gt;all(), $rule, $message);</div><div class="line"></div><div class="line">        <span class="keyword">if</span>($validator-&gt;fails())&#123;</div><div class="line">            <span class="keyword">foreach</span>($validator-&gt;errors()-&gt;getMessages() <span class="keyword">as</span> $message)&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;formatOutput(<span class="number">1</span>, <span class="string">''</span>, $message[<span class="number">0</span>]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>具体操作则调用此方法，验证方式灵活</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$validator_user = <span class="keyword">$this</span>-&gt;ruleValidator($request, $user-&gt;rules([<span class="string">'username'</span>,<span class="string">'password'</span>]), $user-&gt;message());</div><div class="line">            <span class="keyword">if</span> ($validator_user)</div><div class="line">                <span class="keyword">return</span> $validator_user;</div></pre></td></tr></table></figure>
<p>参考文档:<br><a href="https://lumen.laravel-china.org/docs/5.3/validation" target="_blank" rel="external">https://lumen.laravel-china.org/docs/5.3/validation</a><br><a href="https://www.kancloud.cn/iwzh/laravel-doc5_3/229847" target="_blank" rel="external">https://www.kancloud.cn/iwzh/laravel-doc5_3/229847</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h5&gt;&lt;p&gt;Lumen 提供了多种不同的处理方法来对应用程序传入的数据进行验证。默认情况下，Lumen 的基底控制器类使用了 ValidatesRequests trait，其提供了一种便利的方法来使用各种强大的验证规则验证传入的 HTTP 请求。&lt;/p&gt;
&lt;p&gt;Lumen 和 Laravel 验证功能除了接下来会列出来的不同点以外，并没有太大区别，所以更多关于 Lumen 验证的使用，请参阅 Laravel 文档 。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lumen 与 Laravel 不同，表单请求验证需要Laravel支持。Lumen 可以使用&lt;code&gt;$this-validate&lt;/code&gt;方法来验证。&lt;/p&gt;
&lt;p&gt;还有不同的是，Lumen 支持路由闭包的方式直接使用&lt;code&gt;validate&lt;/code&gt;方法&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.cenhq.com/categories/PHP/"/>
    
      <category term="Lumen" scheme="http://www.cenhq.com/categories/PHP/Lumen/"/>
    
    
      <category term="form-validate" scheme="http://www.cenhq.com/tags/form-validate/"/>
    
      <category term="validator" scheme="http://www.cenhq.com/tags/validator/"/>
    
  </entry>
  
  <entry>
    <title>Lumen实现用户注册登录认证</title>
    <link href="http://www.cenhq.com/2017/02/21/Lumen-user-register-and-login-auth/"/>
    <id>http://www.cenhq.com/2017/02/21/Lumen-user-register-and-login-auth/</id>
    <published>2017-02-21T06:47:10.000Z</published>
    <updated>2017-03-28T10:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Lumen是一个基于Laravel的微框架，号称是以速度为生。截用Lumen官网的一段，号称是比silex和slim还要快。</p>
<p>本文将用Lumen来实现一个完整的用户注册、登录及获取用户信息的API。</p>
<p>Lumen官方网站：<a href="https://lumen.laravel.com/" target="_blank" rel="external">https://lumen.laravel.com/</a><br>Lumen中文网站：<a href="http://lumen.laravel-china.org/" target="_blank" rel="external">http://lumen.laravel-china.org/</a></p>
<a id="more"></a>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer create-project --prefer-dist laravel/lumen lumen</div></pre></td></tr></table></figure>
<h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><p>跟全栈框架 Laravel 框架不一样的是，所有的 Lumen 框架的配置信息都存储在 .env 文件中。一旦 Lumen 成功安装，你需要 配置本地环境,如果没有在目录下新建.env文件<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">APP_ENV=<span class="built_in">local</span></div><div class="line">APP_DEBUG=<span class="literal">true</span></div><div class="line">APP_KEY=SomeRandomString!!!</div><div class="line">DB_CONNECTION=mysql</div><div class="line">DB_HOST=localhost</div><div class="line">DB_PORT=3306</div><div class="line">DB_DATABASE=lumen</div><div class="line">DB_USERNAME=root</div><div class="line">DB_PASSWORD=charlie</div><div class="line">CACHE_DRIVER=memcached</div><div class="line">QUEUE_DRIVER=sync</div><div class="line">APP_TIMEZONE=PRC</div><div class="line">DB_TIMEZONE=+08:00</div></pre></td></tr></table></figure></p>
<h3 id="三-配置迁移数据库"><a href="#三-配置迁移数据库" class="headerlink" title="三 配置迁移数据库"></a>三 配置迁移数据库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan make:migration create_users_table --create=users</div></pre></td></tr></table></figure>
<p>执行这条命令后，会在项目目录lumen/database/migrations/ 目录下生成一个php文件，这个文件主要包括两个函数，在up()函数中根据你的需求定义数据库字段。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Schema</span>\<span class="title">Blueprint</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Migrations</span>\<span class="title">Migration</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateUsersTable</span> <span class="keyword">extends</span> <span class="title">Migration</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Run the migrations.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        Schema::create(<span class="string">'users'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</div><div class="line">            $table-&gt;increments(<span class="string">'id'</span>);</div><div class="line">            $table-&gt;string(<span class="string">'username'</span>);</div><div class="line">            $table-&gt;string(<span class="string">'password'</span>);</div><div class="line">            $table-&gt;string(<span class="string">'email'</span>);</div><div class="line">            $table-&gt;string(<span class="string">'api_token'</span>, <span class="number">60</span>)-&gt;unique();</div><div class="line">            $table-&gt;timestamps();</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Reverse the migrations.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        Schema::dropIfExists(<span class="string">'users'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>执行命令，创建数据库<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan migrate</div></pre></td></tr></table></figure></p>
<p>数据库会生成一张users表<br><img src="/2017/02/21/Lumen-user-register-and-login-auth/lumen-1.png" alt=""></p>
<h3 id="创建用户数据模型"><a href="#创建用户数据模型" class="headerlink" title="创建用户数据模型"></a>创建用户数据模型</h3><p>如果你的项目文件夹lumen\app\文件夹下没有User.php文件，那么新建一个User.php文件，文件内容如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>\<span class="title">Authenticatable</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Lumen</span>\<span class="title">Auth</span>\<span class="title">Authorizable</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Auth</span>\<span class="title">Authenticatable</span> <span class="title">as</span> <span class="title">AuthenticatableContract</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Auth</span>\<span class="title">Access</span>\<span class="title">Authorizable</span> <span class="title">as</span> <span class="title">AuthorizableContract</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span> <span class="keyword">implements</span> <span class="title">AuthenticatableContract</span>, <span class="title">AuthorizableContract</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">use</span> <span class="title">Authenticatable</span>, <span class="title">Authorizable</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * The attributes that are mass assignable.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@var</span> array</div><div class="line">     */</div><div class="line">    <span class="keyword">protected</span> $fillable = [</div><div class="line">        <span class="string">'username'</span>, <span class="string">'email'</span>, <span class="string">'password'</span>, <span class="string">'api_token'</span></div><div class="line">    ];</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * The attributes excluded from the model's JSON form.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@var</span> array</div><div class="line">     */</div><div class="line">    <span class="keyword">protected</span> $hidden = [</div><div class="line">        <span class="string">'password'</span>,</div><div class="line">    ];</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="路由定义"><a href="#路由定义" class="headerlink" title="路由定义"></a>路由定义</h3><p>定义三个路由，实现用户登录，注册及获取用户信息</p>
<table>
<thead>
<tr>
<th>路由类型</th>
<th>路由路径</th>
<th>路由控制器</th>
</tr>
</thead>
<tbody>
<tr>
<td>POST</td>
<td>user/register</td>
<td>UserController@register</td>
</tr>
<tr>
<td>POST</td>
<td>user/login</td>
<td>UserController@login</td>
</tr>
<tr>
<td>GET</td>
<td>user/info</td>
<td>UserController@info</td>
</tr>
</tbody>
</table>
<p>根据上述表的内容，在routes/web.php中定义路由<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$app-&gt;get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> <span class="title">use</span> <span class="params">($app)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> $app-&gt;version();</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//登录注册</span></div><div class="line">$app-&gt;post(<span class="string">'user/login'</span>, <span class="string">'UserController@login'</span>);</div><div class="line">$app-&gt;post(<span class="string">'user/register'</span>, <span class="string">'UserController@register'</span>);</div><div class="line">$app-&gt;get(<span class="string">'user/info'</span>, [</div><div class="line">    <span class="string">'middleware'</span>    =&gt;  <span class="string">'authToken'</span>,</div><div class="line">    <span class="string">'uses'</span>  =&gt;  <span class="string">'UserController@info'</span></div><div class="line">]);</div></pre></td></tr></table></figure></p>
<h3 id="Controller逻辑"><a href="#Controller逻辑" class="headerlink" title="Controller逻辑"></a>Controller逻辑</h3><p>在Lumen\app\Http\Controllers\文件夹下新建用户控制器UserController.php，实现用户注册、登录和用户信息获取功能<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">User</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Controller</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Auth</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> $salt;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;salt = <span class="string">"userloginregister"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//登录</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">(Request $request)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>($request-&gt;has(<span class="string">'username'</span>) &amp;&amp; $request-&gt;has(<span class="string">'password'</span>))&#123;</div><div class="line">            $user = User::where(<span class="string">'username'</span>, <span class="string">'='</span>, $request-&gt;input(<span class="string">'username'</span>))-&gt;where(<span class="string">'password'</span>, <span class="string">'='</span>, sha1(<span class="keyword">$this</span>-&gt;salt.$request-&gt;input(<span class="string">'password'</span>)))-&gt;first();</div><div class="line">            <span class="keyword">if</span>($user)&#123;</div><div class="line">                $token = str_random(<span class="number">60</span>);</div><div class="line">                $user-&gt;api_token = $token;</div><div class="line">                $user-&gt;save();</div><div class="line">                <span class="keyword">return</span> $user-&gt;api_token;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="string">'用户名或密码不正确,登录失败'</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">'登录信息不完整,请输入用户名和密码'</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//注册</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">(Request $request)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>($request-&gt;has(<span class="string">'username'</span>) &amp;&amp; $request-&gt;has(<span class="string">'password'</span>) &amp;&amp; $request-&gt;has(<span class="string">'email'</span>))&#123;</div><div class="line">            $user = <span class="keyword">new</span> User;</div><div class="line">            $user-&gt;username = $request-&gt;input(<span class="string">'username'</span>);</div><div class="line">            $user-&gt;password = sha1(<span class="keyword">$this</span>-&gt;salt.$request-&gt;input(<span class="string">'password'</span>));</div><div class="line">            $user-&gt;email = $request-&gt;input(<span class="string">'email'</span>);</div><div class="line">            $user-&gt;api_token = str_random(<span class="number">60</span>);</div><div class="line">            <span class="keyword">if</span>($user-&gt;save())&#123;</div><div class="line">                <span class="keyword">return</span> <span class="string">'用户注册成功!'</span>;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="string">'用户注册失败!'</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">'请输入完整用户信息!'</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//信息</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">info</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> Auth::user();</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h3 id="认证服务"><a href="#认证服务" class="headerlink" title="认证服务"></a>认证服务</h3><p>必须要通过token验证才能获取用户信息。在Lumen\app\Http\Providers\AuthServiceProvider.php中定义验证服务。我们使用header包含token的形式来验证。修改Lumen\app\Http\Providers\AuthServiceProvider.php文件代码。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Providers</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">User</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Gate</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">ServiceProvider</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Register any application services.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="comment">//</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Boot the authentication services for the application.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="comment">// Here you may define how you wish users to be authenticated for your Lumen</span></div><div class="line">        <span class="comment">// application. The callback which receives the incoming request instance</span></div><div class="line">        <span class="comment">// should return either a User instance or null. You're free to obtain</span></div><div class="line">        <span class="comment">// the User instance via an API token or any other method necessary.</span></div><div class="line"></div><div class="line">        <span class="keyword">$this</span>-&gt;app[<span class="string">'auth'</span>]-&gt;viaRequest(<span class="string">'api'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($request)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> ($request-&gt;header(<span class="string">'api_token'</span>)) &#123;</div><div class="line">                <span class="keyword">return</span> User::where(<span class="string">'api_token'</span>, <span class="string">'='</span>, $request-&gt;header(<span class="string">'api_token'</span>))-&gt;first();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h3 id="定义认证中间件"><a href="#定义认证中间件" class="headerlink" title="定义认证中间件"></a>定义认证中间件</h3><p>在Lumen\app\Http\Middleware\文件夹下定义认证路由中间件AuthToken.php，就是之前在路由中定义的”authToken”。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Middleware</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">Closure</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Auth</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthToken</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">($request, Closure $next)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(Auth::check())&#123;</div><div class="line">            <span class="keyword">return</span> $next($request);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            abort(<span class="number">401</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="启用配置信息"><a href="#启用配置信息" class="headerlink" title="启用配置信息"></a>启用配置信息</h3><p>在lumen\app\bootstrap\app.php中取消注释<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">//让数据库信息和认证服务修改生效</span></div><div class="line">$app-&gt;withFacades();</div><div class="line"></div><div class="line">$app-&gt;withEloquent();</div><div class="line"></div><div class="line"><span class="comment">//认证中间件</span></div><div class="line">$app-&gt;routeMiddleware([</div><div class="line">     <span class="string">'authToken'</span> =&gt; App\Http\Middleware\AuthToken::class</div><div class="line">]);</div><div class="line"></div><div class="line"><span class="comment">//开启注册提供者</span></div><div class="line">$app-&gt;register(App\Providers\AppServiceProvider::class);</div><div class="line">$app-&gt;register(App\Providers\AuthServiceProvider::class);</div></pre></td></tr></table></figure></p>
<h3 id="启动服务，测试"><a href="#启动服务，测试" class="headerlink" title="启动服务，测试"></a>启动服务，测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php -S localhost:8000</div></pre></td></tr></table></figure>
<p>1.用户注册<br><img src="/2017/02/21/Lumen-user-register-and-login-auth/lumen-2.png" alt="user-register"></p>
<p>查看数据库<br><img src="/2017/02/21/Lumen-user-register-and-login-auth/lumen-3.png" alt="show-user"></p>
<p>2.用户登录<br><img src="/2017/02/21/Lumen-user-register-and-login-auth/lumen-4.png" alt="user-login"></p>
<p>登录后会更新数据库的api_token<br><img src="/2017/02/21/Lumen-user-register-and-login-auth/lumen-5.png" alt="lumen-5"></p>
<p>3.获取用户信息<br><img src="/2017/02/21/Lumen-user-register-and-login-auth/lumen-6.png" alt="lumen-6"></p>
<hr>
<h3 id="错误信息："><a href="#错误信息：" class="headerlink" title="错误信息："></a>错误信息：</h3><p>1.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[Symfony\Component\Debug\Exception\FatalErrorException]</div><div class="line">  Class <span class="string">'Memcached'</span> not found</div></pre></td></tr></table></figure></p>
<p>解决办法，安装memcached 和php扩展<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">brew install memcached</div><div class="line">brew install php56-memcached</div><div class="line">启动memcached</div><div class="line">memcached -D</div></pre></td></tr></table></figure></p>
<p>2.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PHP Fatal error:  Call to a member <span class="keyword">function</span> connection() on null <span class="keyword">in</span> /Users/03315/www/lumen/vendor/illuminate/database/Eloquent/Model.php on line 1013</div></pre></td></tr></table></figure></p>
<p>解决办法，需要开启，路径<code>app/bootstrap/app.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$app-&gt;withEloquent();</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Lumen是一个基于Laravel的微框架，号称是以速度为生。截用Lumen官网的一段，号称是比silex和slim还要快。&lt;/p&gt;
&lt;p&gt;本文将用Lumen来实现一个完整的用户注册、登录及获取用户信息的API。&lt;/p&gt;
&lt;p&gt;Lumen官方网站：&lt;a href=&quot;https://lumen.laravel.com/&quot;&gt;https://lumen.laravel.com/&lt;/a&gt;&lt;br&gt;Lumen中文网站：&lt;a href=&quot;http://lumen.laravel-china.org/&quot;&gt;http://lumen.laravel-china.org/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.cenhq.com/categories/PHP/"/>
    
      <category term="Lumen" scheme="http://www.cenhq.com/categories/PHP/Lumen/"/>
    
    
      <category term="access_token" scheme="http://www.cenhq.com/tags/access-token/"/>
    
      <category term="Api" scheme="http://www.cenhq.com/tags/Api/"/>
    
  </entry>
  
</feed>
